
STM32F4_I2C_MPU6050.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00002d20  08000198  08000198  00010198  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001f8  08002eb8  08002eb8  00012eb8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  080030b0  080030b0  000130b0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  080030b4  080030b4  000130b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000070  20000000  080030b8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          000000a4  20000070  08003128  00020070  2**3
                  ALLOC
  7 ._user_heap_stack 00000400  20000114  08003128  00020114  2**0
                  ALLOC
  8 .ARM.attributes 00000030  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
  9 .debug_info   0000238e  00000000  00000000  000200a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000006e7  00000000  00000000  0002242e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000150  00000000  00000000  00022b18  2**3
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00022c68  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   00000d1b  00000000  00000000  00022d60  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00000e42  00000000  00000000  00023a7b  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .comment      0000007c  00000000  00000000  000248bd  2**0
                  CONTENTS, READONLY
 16 .debug_frame  000008e8  00000000  00000000  0002493c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000070 	.word	0x20000070
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08002ea0 	.word	0x08002ea0

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000074 	.word	0x20000074
 80001d4:	08002ea0 	.word	0x08002ea0

080001d8 <__aeabi_drsub>:
 80001d8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80001dc:	e002      	b.n	80001e4 <__adddf3>
 80001de:	bf00      	nop

080001e0 <__aeabi_dsub>:
 80001e0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080001e4 <__adddf3>:
 80001e4:	b530      	push	{r4, r5, lr}
 80001e6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80001ea:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80001ee:	ea94 0f05 	teq	r4, r5
 80001f2:	bf08      	it	eq
 80001f4:	ea90 0f02 	teqeq	r0, r2
 80001f8:	bf1f      	itttt	ne
 80001fa:	ea54 0c00 	orrsne.w	ip, r4, r0
 80001fe:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000202:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000206:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800020a:	f000 80e2 	beq.w	80003d2 <__adddf3+0x1ee>
 800020e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000212:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000216:	bfb8      	it	lt
 8000218:	426d      	neglt	r5, r5
 800021a:	dd0c      	ble.n	8000236 <__adddf3+0x52>
 800021c:	442c      	add	r4, r5
 800021e:	ea80 0202 	eor.w	r2, r0, r2
 8000222:	ea81 0303 	eor.w	r3, r1, r3
 8000226:	ea82 0000 	eor.w	r0, r2, r0
 800022a:	ea83 0101 	eor.w	r1, r3, r1
 800022e:	ea80 0202 	eor.w	r2, r0, r2
 8000232:	ea81 0303 	eor.w	r3, r1, r3
 8000236:	2d36      	cmp	r5, #54	; 0x36
 8000238:	bf88      	it	hi
 800023a:	bd30      	pophi	{r4, r5, pc}
 800023c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000240:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000244:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000248:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800024c:	d002      	beq.n	8000254 <__adddf3+0x70>
 800024e:	4240      	negs	r0, r0
 8000250:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000254:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000258:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800025c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000260:	d002      	beq.n	8000268 <__adddf3+0x84>
 8000262:	4252      	negs	r2, r2
 8000264:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000268:	ea94 0f05 	teq	r4, r5
 800026c:	f000 80a7 	beq.w	80003be <__adddf3+0x1da>
 8000270:	f1a4 0401 	sub.w	r4, r4, #1
 8000274:	f1d5 0e20 	rsbs	lr, r5, #32
 8000278:	db0d      	blt.n	8000296 <__adddf3+0xb2>
 800027a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800027e:	fa22 f205 	lsr.w	r2, r2, r5
 8000282:	1880      	adds	r0, r0, r2
 8000284:	f141 0100 	adc.w	r1, r1, #0
 8000288:	fa03 f20e 	lsl.w	r2, r3, lr
 800028c:	1880      	adds	r0, r0, r2
 800028e:	fa43 f305 	asr.w	r3, r3, r5
 8000292:	4159      	adcs	r1, r3
 8000294:	e00e      	b.n	80002b4 <__adddf3+0xd0>
 8000296:	f1a5 0520 	sub.w	r5, r5, #32
 800029a:	f10e 0e20 	add.w	lr, lr, #32
 800029e:	2a01      	cmp	r2, #1
 80002a0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002a4:	bf28      	it	cs
 80002a6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002aa:	fa43 f305 	asr.w	r3, r3, r5
 80002ae:	18c0      	adds	r0, r0, r3
 80002b0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002b8:	d507      	bpl.n	80002ca <__adddf3+0xe6>
 80002ba:	f04f 0e00 	mov.w	lr, #0
 80002be:	f1dc 0c00 	rsbs	ip, ip, #0
 80002c2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002c6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002ca:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80002ce:	d31b      	bcc.n	8000308 <__adddf3+0x124>
 80002d0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80002d4:	d30c      	bcc.n	80002f0 <__adddf3+0x10c>
 80002d6:	0849      	lsrs	r1, r1, #1
 80002d8:	ea5f 0030 	movs.w	r0, r0, rrx
 80002dc:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80002e0:	f104 0401 	add.w	r4, r4, #1
 80002e4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80002e8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80002ec:	f080 809a 	bcs.w	8000424 <__adddf3+0x240>
 80002f0:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80002f4:	bf08      	it	eq
 80002f6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80002fa:	f150 0000 	adcs.w	r0, r0, #0
 80002fe:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000302:	ea41 0105 	orr.w	r1, r1, r5
 8000306:	bd30      	pop	{r4, r5, pc}
 8000308:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800030c:	4140      	adcs	r0, r0
 800030e:	eb41 0101 	adc.w	r1, r1, r1
 8000312:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000316:	f1a4 0401 	sub.w	r4, r4, #1
 800031a:	d1e9      	bne.n	80002f0 <__adddf3+0x10c>
 800031c:	f091 0f00 	teq	r1, #0
 8000320:	bf04      	itt	eq
 8000322:	4601      	moveq	r1, r0
 8000324:	2000      	moveq	r0, #0
 8000326:	fab1 f381 	clz	r3, r1
 800032a:	bf08      	it	eq
 800032c:	3320      	addeq	r3, #32
 800032e:	f1a3 030b 	sub.w	r3, r3, #11
 8000332:	f1b3 0220 	subs.w	r2, r3, #32
 8000336:	da0c      	bge.n	8000352 <__adddf3+0x16e>
 8000338:	320c      	adds	r2, #12
 800033a:	dd08      	ble.n	800034e <__adddf3+0x16a>
 800033c:	f102 0c14 	add.w	ip, r2, #20
 8000340:	f1c2 020c 	rsb	r2, r2, #12
 8000344:	fa01 f00c 	lsl.w	r0, r1, ip
 8000348:	fa21 f102 	lsr.w	r1, r1, r2
 800034c:	e00c      	b.n	8000368 <__adddf3+0x184>
 800034e:	f102 0214 	add.w	r2, r2, #20
 8000352:	bfd8      	it	le
 8000354:	f1c2 0c20 	rsble	ip, r2, #32
 8000358:	fa01 f102 	lsl.w	r1, r1, r2
 800035c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000360:	bfdc      	itt	le
 8000362:	ea41 010c 	orrle.w	r1, r1, ip
 8000366:	4090      	lslle	r0, r2
 8000368:	1ae4      	subs	r4, r4, r3
 800036a:	bfa2      	ittt	ge
 800036c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000370:	4329      	orrge	r1, r5
 8000372:	bd30      	popge	{r4, r5, pc}
 8000374:	ea6f 0404 	mvn.w	r4, r4
 8000378:	3c1f      	subs	r4, #31
 800037a:	da1c      	bge.n	80003b6 <__adddf3+0x1d2>
 800037c:	340c      	adds	r4, #12
 800037e:	dc0e      	bgt.n	800039e <__adddf3+0x1ba>
 8000380:	f104 0414 	add.w	r4, r4, #20
 8000384:	f1c4 0220 	rsb	r2, r4, #32
 8000388:	fa20 f004 	lsr.w	r0, r0, r4
 800038c:	fa01 f302 	lsl.w	r3, r1, r2
 8000390:	ea40 0003 	orr.w	r0, r0, r3
 8000394:	fa21 f304 	lsr.w	r3, r1, r4
 8000398:	ea45 0103 	orr.w	r1, r5, r3
 800039c:	bd30      	pop	{r4, r5, pc}
 800039e:	f1c4 040c 	rsb	r4, r4, #12
 80003a2:	f1c4 0220 	rsb	r2, r4, #32
 80003a6:	fa20 f002 	lsr.w	r0, r0, r2
 80003aa:	fa01 f304 	lsl.w	r3, r1, r4
 80003ae:	ea40 0003 	orr.w	r0, r0, r3
 80003b2:	4629      	mov	r1, r5
 80003b4:	bd30      	pop	{r4, r5, pc}
 80003b6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ba:	4629      	mov	r1, r5
 80003bc:	bd30      	pop	{r4, r5, pc}
 80003be:	f094 0f00 	teq	r4, #0
 80003c2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003c6:	bf06      	itte	eq
 80003c8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80003cc:	3401      	addeq	r4, #1
 80003ce:	3d01      	subne	r5, #1
 80003d0:	e74e      	b.n	8000270 <__adddf3+0x8c>
 80003d2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003d6:	bf18      	it	ne
 80003d8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80003dc:	d029      	beq.n	8000432 <__adddf3+0x24e>
 80003de:	ea94 0f05 	teq	r4, r5
 80003e2:	bf08      	it	eq
 80003e4:	ea90 0f02 	teqeq	r0, r2
 80003e8:	d005      	beq.n	80003f6 <__adddf3+0x212>
 80003ea:	ea54 0c00 	orrs.w	ip, r4, r0
 80003ee:	bf04      	itt	eq
 80003f0:	4619      	moveq	r1, r3
 80003f2:	4610      	moveq	r0, r2
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	ea91 0f03 	teq	r1, r3
 80003fa:	bf1e      	ittt	ne
 80003fc:	2100      	movne	r1, #0
 80003fe:	2000      	movne	r0, #0
 8000400:	bd30      	popne	{r4, r5, pc}
 8000402:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000406:	d105      	bne.n	8000414 <__adddf3+0x230>
 8000408:	0040      	lsls	r0, r0, #1
 800040a:	4149      	adcs	r1, r1
 800040c:	bf28      	it	cs
 800040e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000412:	bd30      	pop	{r4, r5, pc}
 8000414:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000418:	bf3c      	itt	cc
 800041a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800041e:	bd30      	popcc	{r4, r5, pc}
 8000420:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000424:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000428:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800042c:	f04f 0000 	mov.w	r0, #0
 8000430:	bd30      	pop	{r4, r5, pc}
 8000432:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000436:	bf1a      	itte	ne
 8000438:	4619      	movne	r1, r3
 800043a:	4610      	movne	r0, r2
 800043c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000440:	bf1c      	itt	ne
 8000442:	460b      	movne	r3, r1
 8000444:	4602      	movne	r2, r0
 8000446:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800044a:	bf06      	itte	eq
 800044c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000450:	ea91 0f03 	teqeq	r1, r3
 8000454:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000458:	bd30      	pop	{r4, r5, pc}
 800045a:	bf00      	nop

0800045c <__aeabi_ui2d>:
 800045c:	f090 0f00 	teq	r0, #0
 8000460:	bf04      	itt	eq
 8000462:	2100      	moveq	r1, #0
 8000464:	4770      	bxeq	lr
 8000466:	b530      	push	{r4, r5, lr}
 8000468:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800046c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000470:	f04f 0500 	mov.w	r5, #0
 8000474:	f04f 0100 	mov.w	r1, #0
 8000478:	e750      	b.n	800031c <__adddf3+0x138>
 800047a:	bf00      	nop

0800047c <__aeabi_i2d>:
 800047c:	f090 0f00 	teq	r0, #0
 8000480:	bf04      	itt	eq
 8000482:	2100      	moveq	r1, #0
 8000484:	4770      	bxeq	lr
 8000486:	b530      	push	{r4, r5, lr}
 8000488:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800048c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000490:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000494:	bf48      	it	mi
 8000496:	4240      	negmi	r0, r0
 8000498:	f04f 0100 	mov.w	r1, #0
 800049c:	e73e      	b.n	800031c <__adddf3+0x138>
 800049e:	bf00      	nop

080004a0 <__aeabi_f2d>:
 80004a0:	0042      	lsls	r2, r0, #1
 80004a2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004a6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004aa:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004ae:	bf1f      	itttt	ne
 80004b0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004b4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004b8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004bc:	4770      	bxne	lr
 80004be:	f092 0f00 	teq	r2, #0
 80004c2:	bf14      	ite	ne
 80004c4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004c8:	4770      	bxeq	lr
 80004ca:	b530      	push	{r4, r5, lr}
 80004cc:	f44f 7460 	mov.w	r4, #896	; 0x380
 80004d0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004d4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80004d8:	e720      	b.n	800031c <__adddf3+0x138>
 80004da:	bf00      	nop

080004dc <__aeabi_ul2d>:
 80004dc:	ea50 0201 	orrs.w	r2, r0, r1
 80004e0:	bf08      	it	eq
 80004e2:	4770      	bxeq	lr
 80004e4:	b530      	push	{r4, r5, lr}
 80004e6:	f04f 0500 	mov.w	r5, #0
 80004ea:	e00a      	b.n	8000502 <__aeabi_l2d+0x16>

080004ec <__aeabi_l2d>:
 80004ec:	ea50 0201 	orrs.w	r2, r0, r1
 80004f0:	bf08      	it	eq
 80004f2:	4770      	bxeq	lr
 80004f4:	b530      	push	{r4, r5, lr}
 80004f6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80004fa:	d502      	bpl.n	8000502 <__aeabi_l2d+0x16>
 80004fc:	4240      	negs	r0, r0
 80004fe:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000502:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000506:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800050a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800050e:	f43f aedc 	beq.w	80002ca <__adddf3+0xe6>
 8000512:	f04f 0203 	mov.w	r2, #3
 8000516:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800051a:	bf18      	it	ne
 800051c:	3203      	addne	r2, #3
 800051e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000522:	bf18      	it	ne
 8000524:	3203      	addne	r2, #3
 8000526:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800052a:	f1c2 0320 	rsb	r3, r2, #32
 800052e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000532:	fa20 f002 	lsr.w	r0, r0, r2
 8000536:	fa01 fe03 	lsl.w	lr, r1, r3
 800053a:	ea40 000e 	orr.w	r0, r0, lr
 800053e:	fa21 f102 	lsr.w	r1, r1, r2
 8000542:	4414      	add	r4, r2
 8000544:	e6c1      	b.n	80002ca <__adddf3+0xe6>
 8000546:	bf00      	nop

08000548 <__aeabi_dmul>:
 8000548:	b570      	push	{r4, r5, r6, lr}
 800054a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800054e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000552:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000556:	bf1d      	ittte	ne
 8000558:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800055c:	ea94 0f0c 	teqne	r4, ip
 8000560:	ea95 0f0c 	teqne	r5, ip
 8000564:	f000 f8de 	bleq	8000724 <__aeabi_dmul+0x1dc>
 8000568:	442c      	add	r4, r5
 800056a:	ea81 0603 	eor.w	r6, r1, r3
 800056e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000572:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000576:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800057a:	bf18      	it	ne
 800057c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000580:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000584:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000588:	d038      	beq.n	80005fc <__aeabi_dmul+0xb4>
 800058a:	fba0 ce02 	umull	ip, lr, r0, r2
 800058e:	f04f 0500 	mov.w	r5, #0
 8000592:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000596:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800059a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800059e:	f04f 0600 	mov.w	r6, #0
 80005a2:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005a6:	f09c 0f00 	teq	ip, #0
 80005aa:	bf18      	it	ne
 80005ac:	f04e 0e01 	orrne.w	lr, lr, #1
 80005b0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005b4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005b8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005bc:	d204      	bcs.n	80005c8 <__aeabi_dmul+0x80>
 80005be:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005c2:	416d      	adcs	r5, r5
 80005c4:	eb46 0606 	adc.w	r6, r6, r6
 80005c8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80005cc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80005d0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80005d4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80005d8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80005dc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80005e0:	bf88      	it	hi
 80005e2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80005e6:	d81e      	bhi.n	8000626 <__aeabi_dmul+0xde>
 80005e8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80005ec:	bf08      	it	eq
 80005ee:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80005f2:	f150 0000 	adcs.w	r0, r0, #0
 80005f6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80005fa:	bd70      	pop	{r4, r5, r6, pc}
 80005fc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000600:	ea46 0101 	orr.w	r1, r6, r1
 8000604:	ea40 0002 	orr.w	r0, r0, r2
 8000608:	ea81 0103 	eor.w	r1, r1, r3
 800060c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000610:	bfc2      	ittt	gt
 8000612:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000616:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800061a:	bd70      	popgt	{r4, r5, r6, pc}
 800061c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000620:	f04f 0e00 	mov.w	lr, #0
 8000624:	3c01      	subs	r4, #1
 8000626:	f300 80ab 	bgt.w	8000780 <__aeabi_dmul+0x238>
 800062a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800062e:	bfde      	ittt	le
 8000630:	2000      	movle	r0, #0
 8000632:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000636:	bd70      	pople	{r4, r5, r6, pc}
 8000638:	f1c4 0400 	rsb	r4, r4, #0
 800063c:	3c20      	subs	r4, #32
 800063e:	da35      	bge.n	80006ac <__aeabi_dmul+0x164>
 8000640:	340c      	adds	r4, #12
 8000642:	dc1b      	bgt.n	800067c <__aeabi_dmul+0x134>
 8000644:	f104 0414 	add.w	r4, r4, #20
 8000648:	f1c4 0520 	rsb	r5, r4, #32
 800064c:	fa00 f305 	lsl.w	r3, r0, r5
 8000650:	fa20 f004 	lsr.w	r0, r0, r4
 8000654:	fa01 f205 	lsl.w	r2, r1, r5
 8000658:	ea40 0002 	orr.w	r0, r0, r2
 800065c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000660:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000664:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000668:	fa21 f604 	lsr.w	r6, r1, r4
 800066c:	eb42 0106 	adc.w	r1, r2, r6
 8000670:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000674:	bf08      	it	eq
 8000676:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800067a:	bd70      	pop	{r4, r5, r6, pc}
 800067c:	f1c4 040c 	rsb	r4, r4, #12
 8000680:	f1c4 0520 	rsb	r5, r4, #32
 8000684:	fa00 f304 	lsl.w	r3, r0, r4
 8000688:	fa20 f005 	lsr.w	r0, r0, r5
 800068c:	fa01 f204 	lsl.w	r2, r1, r4
 8000690:	ea40 0002 	orr.w	r0, r0, r2
 8000694:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000698:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800069c:	f141 0100 	adc.w	r1, r1, #0
 80006a0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006a4:	bf08      	it	eq
 80006a6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f1c4 0520 	rsb	r5, r4, #32
 80006b0:	fa00 f205 	lsl.w	r2, r0, r5
 80006b4:	ea4e 0e02 	orr.w	lr, lr, r2
 80006b8:	fa20 f304 	lsr.w	r3, r0, r4
 80006bc:	fa01 f205 	lsl.w	r2, r1, r5
 80006c0:	ea43 0302 	orr.w	r3, r3, r2
 80006c4:	fa21 f004 	lsr.w	r0, r1, r4
 80006c8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006cc:	fa21 f204 	lsr.w	r2, r1, r4
 80006d0:	ea20 0002 	bic.w	r0, r0, r2
 80006d4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80006d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006dc:	bf08      	it	eq
 80006de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	f094 0f00 	teq	r4, #0
 80006e8:	d10f      	bne.n	800070a <__aeabi_dmul+0x1c2>
 80006ea:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80006ee:	0040      	lsls	r0, r0, #1
 80006f0:	eb41 0101 	adc.w	r1, r1, r1
 80006f4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80006f8:	bf08      	it	eq
 80006fa:	3c01      	subeq	r4, #1
 80006fc:	d0f7      	beq.n	80006ee <__aeabi_dmul+0x1a6>
 80006fe:	ea41 0106 	orr.w	r1, r1, r6
 8000702:	f095 0f00 	teq	r5, #0
 8000706:	bf18      	it	ne
 8000708:	4770      	bxne	lr
 800070a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800070e:	0052      	lsls	r2, r2, #1
 8000710:	eb43 0303 	adc.w	r3, r3, r3
 8000714:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000718:	bf08      	it	eq
 800071a:	3d01      	subeq	r5, #1
 800071c:	d0f7      	beq.n	800070e <__aeabi_dmul+0x1c6>
 800071e:	ea43 0306 	orr.w	r3, r3, r6
 8000722:	4770      	bx	lr
 8000724:	ea94 0f0c 	teq	r4, ip
 8000728:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800072c:	bf18      	it	ne
 800072e:	ea95 0f0c 	teqne	r5, ip
 8000732:	d00c      	beq.n	800074e <__aeabi_dmul+0x206>
 8000734:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000738:	bf18      	it	ne
 800073a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800073e:	d1d1      	bne.n	80006e4 <__aeabi_dmul+0x19c>
 8000740:	ea81 0103 	eor.w	r1, r1, r3
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	f04f 0000 	mov.w	r0, #0
 800074c:	bd70      	pop	{r4, r5, r6, pc}
 800074e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000752:	bf06      	itte	eq
 8000754:	4610      	moveq	r0, r2
 8000756:	4619      	moveq	r1, r3
 8000758:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800075c:	d019      	beq.n	8000792 <__aeabi_dmul+0x24a>
 800075e:	ea94 0f0c 	teq	r4, ip
 8000762:	d102      	bne.n	800076a <__aeabi_dmul+0x222>
 8000764:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000768:	d113      	bne.n	8000792 <__aeabi_dmul+0x24a>
 800076a:	ea95 0f0c 	teq	r5, ip
 800076e:	d105      	bne.n	800077c <__aeabi_dmul+0x234>
 8000770:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000774:	bf1c      	itt	ne
 8000776:	4610      	movne	r0, r2
 8000778:	4619      	movne	r1, r3
 800077a:	d10a      	bne.n	8000792 <__aeabi_dmul+0x24a>
 800077c:	ea81 0103 	eor.w	r1, r1, r3
 8000780:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000784:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000788:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800078c:	f04f 0000 	mov.w	r0, #0
 8000790:	bd70      	pop	{r4, r5, r6, pc}
 8000792:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000796:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800079a:	bd70      	pop	{r4, r5, r6, pc}

0800079c <__aeabi_ddiv>:
 800079c:	b570      	push	{r4, r5, r6, lr}
 800079e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007a2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007a6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007aa:	bf1d      	ittte	ne
 80007ac:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007b0:	ea94 0f0c 	teqne	r4, ip
 80007b4:	ea95 0f0c 	teqne	r5, ip
 80007b8:	f000 f8a7 	bleq	800090a <__aeabi_ddiv+0x16e>
 80007bc:	eba4 0405 	sub.w	r4, r4, r5
 80007c0:	ea81 0e03 	eor.w	lr, r1, r3
 80007c4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80007c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80007cc:	f000 8088 	beq.w	80008e0 <__aeabi_ddiv+0x144>
 80007d0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80007d4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80007d8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80007dc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80007e0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80007e4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80007e8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80007ec:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80007f0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80007f4:	429d      	cmp	r5, r3
 80007f6:	bf08      	it	eq
 80007f8:	4296      	cmpeq	r6, r2
 80007fa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80007fe:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000802:	d202      	bcs.n	800080a <__aeabi_ddiv+0x6e>
 8000804:	085b      	lsrs	r3, r3, #1
 8000806:	ea4f 0232 	mov.w	r2, r2, rrx
 800080a:	1ab6      	subs	r6, r6, r2
 800080c:	eb65 0503 	sbc.w	r5, r5, r3
 8000810:	085b      	lsrs	r3, r3, #1
 8000812:	ea4f 0232 	mov.w	r2, r2, rrx
 8000816:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800081a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800081e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000822:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000826:	bf22      	ittt	cs
 8000828:	1ab6      	subcs	r6, r6, r2
 800082a:	4675      	movcs	r5, lr
 800082c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000830:	085b      	lsrs	r3, r3, #1
 8000832:	ea4f 0232 	mov.w	r2, r2, rrx
 8000836:	ebb6 0e02 	subs.w	lr, r6, r2
 800083a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800083e:	bf22      	ittt	cs
 8000840:	1ab6      	subcs	r6, r6, r2
 8000842:	4675      	movcs	r5, lr
 8000844:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000848:	085b      	lsrs	r3, r3, #1
 800084a:	ea4f 0232 	mov.w	r2, r2, rrx
 800084e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000852:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000856:	bf22      	ittt	cs
 8000858:	1ab6      	subcs	r6, r6, r2
 800085a:	4675      	movcs	r5, lr
 800085c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000860:	085b      	lsrs	r3, r3, #1
 8000862:	ea4f 0232 	mov.w	r2, r2, rrx
 8000866:	ebb6 0e02 	subs.w	lr, r6, r2
 800086a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800086e:	bf22      	ittt	cs
 8000870:	1ab6      	subcs	r6, r6, r2
 8000872:	4675      	movcs	r5, lr
 8000874:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000878:	ea55 0e06 	orrs.w	lr, r5, r6
 800087c:	d018      	beq.n	80008b0 <__aeabi_ddiv+0x114>
 800087e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000882:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000886:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800088a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800088e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000892:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000896:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800089a:	d1c0      	bne.n	800081e <__aeabi_ddiv+0x82>
 800089c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008a0:	d10b      	bne.n	80008ba <__aeabi_ddiv+0x11e>
 80008a2:	ea41 0100 	orr.w	r1, r1, r0
 80008a6:	f04f 0000 	mov.w	r0, #0
 80008aa:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008ae:	e7b6      	b.n	800081e <__aeabi_ddiv+0x82>
 80008b0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008b4:	bf04      	itt	eq
 80008b6:	4301      	orreq	r1, r0
 80008b8:	2000      	moveq	r0, #0
 80008ba:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008be:	bf88      	it	hi
 80008c0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80008c4:	f63f aeaf 	bhi.w	8000626 <__aeabi_dmul+0xde>
 80008c8:	ebb5 0c03 	subs.w	ip, r5, r3
 80008cc:	bf04      	itt	eq
 80008ce:	ebb6 0c02 	subseq.w	ip, r6, r2
 80008d2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80008d6:	f150 0000 	adcs.w	r0, r0, #0
 80008da:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80008de:	bd70      	pop	{r4, r5, r6, pc}
 80008e0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80008e4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80008e8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80008ec:	bfc2      	ittt	gt
 80008ee:	ebd4 050c 	rsbsgt	r5, r4, ip
 80008f2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80008f6:	bd70      	popgt	{r4, r5, r6, pc}
 80008f8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80008fc:	f04f 0e00 	mov.w	lr, #0
 8000900:	3c01      	subs	r4, #1
 8000902:	e690      	b.n	8000626 <__aeabi_dmul+0xde>
 8000904:	ea45 0e06 	orr.w	lr, r5, r6
 8000908:	e68d      	b.n	8000626 <__aeabi_dmul+0xde>
 800090a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800090e:	ea94 0f0c 	teq	r4, ip
 8000912:	bf08      	it	eq
 8000914:	ea95 0f0c 	teqeq	r5, ip
 8000918:	f43f af3b 	beq.w	8000792 <__aeabi_dmul+0x24a>
 800091c:	ea94 0f0c 	teq	r4, ip
 8000920:	d10a      	bne.n	8000938 <__aeabi_ddiv+0x19c>
 8000922:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000926:	f47f af34 	bne.w	8000792 <__aeabi_dmul+0x24a>
 800092a:	ea95 0f0c 	teq	r5, ip
 800092e:	f47f af25 	bne.w	800077c <__aeabi_dmul+0x234>
 8000932:	4610      	mov	r0, r2
 8000934:	4619      	mov	r1, r3
 8000936:	e72c      	b.n	8000792 <__aeabi_dmul+0x24a>
 8000938:	ea95 0f0c 	teq	r5, ip
 800093c:	d106      	bne.n	800094c <__aeabi_ddiv+0x1b0>
 800093e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000942:	f43f aefd 	beq.w	8000740 <__aeabi_dmul+0x1f8>
 8000946:	4610      	mov	r0, r2
 8000948:	4619      	mov	r1, r3
 800094a:	e722      	b.n	8000792 <__aeabi_dmul+0x24a>
 800094c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000950:	bf18      	it	ne
 8000952:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000956:	f47f aec5 	bne.w	80006e4 <__aeabi_dmul+0x19c>
 800095a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 800095e:	f47f af0d 	bne.w	800077c <__aeabi_dmul+0x234>
 8000962:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000966:	f47f aeeb 	bne.w	8000740 <__aeabi_dmul+0x1f8>
 800096a:	e712      	b.n	8000792 <__aeabi_dmul+0x24a>

0800096c <__gedf2>:
 800096c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000970:	e006      	b.n	8000980 <__cmpdf2+0x4>
 8000972:	bf00      	nop

08000974 <__ledf2>:
 8000974:	f04f 0c01 	mov.w	ip, #1
 8000978:	e002      	b.n	8000980 <__cmpdf2+0x4>
 800097a:	bf00      	nop

0800097c <__cmpdf2>:
 800097c:	f04f 0c01 	mov.w	ip, #1
 8000980:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000984:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000988:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800098c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000990:	bf18      	it	ne
 8000992:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000996:	d01b      	beq.n	80009d0 <__cmpdf2+0x54>
 8000998:	b001      	add	sp, #4
 800099a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800099e:	bf0c      	ite	eq
 80009a0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009a4:	ea91 0f03 	teqne	r1, r3
 80009a8:	bf02      	ittt	eq
 80009aa:	ea90 0f02 	teqeq	r0, r2
 80009ae:	2000      	moveq	r0, #0
 80009b0:	4770      	bxeq	lr
 80009b2:	f110 0f00 	cmn.w	r0, #0
 80009b6:	ea91 0f03 	teq	r1, r3
 80009ba:	bf58      	it	pl
 80009bc:	4299      	cmppl	r1, r3
 80009be:	bf08      	it	eq
 80009c0:	4290      	cmpeq	r0, r2
 80009c2:	bf2c      	ite	cs
 80009c4:	17d8      	asrcs	r0, r3, #31
 80009c6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80009ca:	f040 0001 	orr.w	r0, r0, #1
 80009ce:	4770      	bx	lr
 80009d0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009d4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009d8:	d102      	bne.n	80009e0 <__cmpdf2+0x64>
 80009da:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80009de:	d107      	bne.n	80009f0 <__cmpdf2+0x74>
 80009e0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009e4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e8:	d1d6      	bne.n	8000998 <__cmpdf2+0x1c>
 80009ea:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80009ee:	d0d3      	beq.n	8000998 <__cmpdf2+0x1c>
 80009f0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80009f4:	4770      	bx	lr
 80009f6:	bf00      	nop

080009f8 <__aeabi_cdrcmple>:
 80009f8:	4684      	mov	ip, r0
 80009fa:	4610      	mov	r0, r2
 80009fc:	4662      	mov	r2, ip
 80009fe:	468c      	mov	ip, r1
 8000a00:	4619      	mov	r1, r3
 8000a02:	4663      	mov	r3, ip
 8000a04:	e000      	b.n	8000a08 <__aeabi_cdcmpeq>
 8000a06:	bf00      	nop

08000a08 <__aeabi_cdcmpeq>:
 8000a08:	b501      	push	{r0, lr}
 8000a0a:	f7ff ffb7 	bl	800097c <__cmpdf2>
 8000a0e:	2800      	cmp	r0, #0
 8000a10:	bf48      	it	mi
 8000a12:	f110 0f00 	cmnmi.w	r0, #0
 8000a16:	bd01      	pop	{r0, pc}

08000a18 <__aeabi_dcmpeq>:
 8000a18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a1c:	f7ff fff4 	bl	8000a08 <__aeabi_cdcmpeq>
 8000a20:	bf0c      	ite	eq
 8000a22:	2001      	moveq	r0, #1
 8000a24:	2000      	movne	r0, #0
 8000a26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a2a:	bf00      	nop

08000a2c <__aeabi_dcmplt>:
 8000a2c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a30:	f7ff ffea 	bl	8000a08 <__aeabi_cdcmpeq>
 8000a34:	bf34      	ite	cc
 8000a36:	2001      	movcc	r0, #1
 8000a38:	2000      	movcs	r0, #0
 8000a3a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a3e:	bf00      	nop

08000a40 <__aeabi_dcmple>:
 8000a40:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a44:	f7ff ffe0 	bl	8000a08 <__aeabi_cdcmpeq>
 8000a48:	bf94      	ite	ls
 8000a4a:	2001      	movls	r0, #1
 8000a4c:	2000      	movhi	r0, #0
 8000a4e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a52:	bf00      	nop

08000a54 <__aeabi_dcmpge>:
 8000a54:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a58:	f7ff ffce 	bl	80009f8 <__aeabi_cdrcmple>
 8000a5c:	bf94      	ite	ls
 8000a5e:	2001      	movls	r0, #1
 8000a60:	2000      	movhi	r0, #0
 8000a62:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a66:	bf00      	nop

08000a68 <__aeabi_dcmpgt>:
 8000a68:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a6c:	f7ff ffc4 	bl	80009f8 <__aeabi_cdrcmple>
 8000a70:	bf34      	ite	cc
 8000a72:	2001      	movcc	r0, #1
 8000a74:	2000      	movcs	r0, #0
 8000a76:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a7a:	bf00      	nop

08000a7c <__aeabi_d2iz>:
 8000a7c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a80:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a84:	d215      	bcs.n	8000ab2 <__aeabi_d2iz+0x36>
 8000a86:	d511      	bpl.n	8000aac <__aeabi_d2iz+0x30>
 8000a88:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a8c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a90:	d912      	bls.n	8000ab8 <__aeabi_d2iz+0x3c>
 8000a92:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a96:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a9a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a9e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000aa2:	fa23 f002 	lsr.w	r0, r3, r2
 8000aa6:	bf18      	it	ne
 8000aa8:	4240      	negne	r0, r0
 8000aaa:	4770      	bx	lr
 8000aac:	f04f 0000 	mov.w	r0, #0
 8000ab0:	4770      	bx	lr
 8000ab2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ab6:	d105      	bne.n	8000ac4 <__aeabi_d2iz+0x48>
 8000ab8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000abc:	bf08      	it	eq
 8000abe:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000ac2:	4770      	bx	lr
 8000ac4:	f04f 0000 	mov.w	r0, #0
 8000ac8:	4770      	bx	lr
 8000aca:	bf00      	nop

08000acc <__aeabi_d2f>:
 8000acc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ad0:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000ad4:	bf24      	itt	cs
 8000ad6:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000ada:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000ade:	d90d      	bls.n	8000afc <__aeabi_d2f+0x30>
 8000ae0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ae4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ae8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000aec:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000af0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000af4:	bf08      	it	eq
 8000af6:	f020 0001 	biceq.w	r0, r0, #1
 8000afa:	4770      	bx	lr
 8000afc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000b00:	d121      	bne.n	8000b46 <__aeabi_d2f+0x7a>
 8000b02:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b06:	bfbc      	itt	lt
 8000b08:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b0c:	4770      	bxlt	lr
 8000b0e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b12:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b16:	f1c2 0218 	rsb	r2, r2, #24
 8000b1a:	f1c2 0c20 	rsb	ip, r2, #32
 8000b1e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b22:	fa20 f002 	lsr.w	r0, r0, r2
 8000b26:	bf18      	it	ne
 8000b28:	f040 0001 	orrne.w	r0, r0, #1
 8000b2c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b30:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b34:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b38:	ea40 000c 	orr.w	r0, r0, ip
 8000b3c:	fa23 f302 	lsr.w	r3, r3, r2
 8000b40:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b44:	e7cc      	b.n	8000ae0 <__aeabi_d2f+0x14>
 8000b46:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b4a:	d107      	bne.n	8000b5c <__aeabi_d2f+0x90>
 8000b4c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b50:	bf1e      	ittt	ne
 8000b52:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b56:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b5a:	4770      	bxne	lr
 8000b5c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b60:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b64:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b68:	4770      	bx	lr
 8000b6a:	bf00      	nop

08000b6c <MPU_write>:
#include "MPU6050.h"
#include "math.h"


void MPU_write(uint8_t Address, uint8_t Reg, uint8_t Data)
{
 8000b6c:	b580      	push	{r7, lr}
 8000b6e:	b082      	sub	sp, #8
 8000b70:	af00      	add	r7, sp, #0
 8000b72:	4603      	mov	r3, r0
 8000b74:	71fb      	strb	r3, [r7, #7]
 8000b76:	460b      	mov	r3, r1
 8000b78:	71bb      	strb	r3, [r7, #6]
 8000b7a:	4613      	mov	r3, r2
 8000b7c:	717b      	strb	r3, [r7, #5]
	i2c_start ();
 8000b7e:	f000 fd2d 	bl	80015dc <i2c_start>
	i2c_address (Address);
 8000b82:	79fb      	ldrb	r3, [r7, #7]
 8000b84:	4618      	mov	r0, r3
 8000b86:	f000 fd63 	bl	8001650 <i2c_address>
	i2c_write (Reg);
 8000b8a:	79bb      	ldrb	r3, [r7, #6]
 8000b8c:	4618      	mov	r0, r3
 8000b8e:	f000 fd41 	bl	8001614 <i2c_write>
	i2c_write (Data);
 8000b92:	797b      	ldrb	r3, [r7, #5]
 8000b94:	4618      	mov	r0, r3
 8000b96:	f000 fd3d 	bl	8001614 <i2c_write>
	i2c_stop ();
 8000b9a:	f000 fd79 	bl	8001690 <i2c_stop>
}
 8000b9e:	bf00      	nop
 8000ba0:	3708      	adds	r7, #8
 8000ba2:	46bd      	mov	sp, r7
 8000ba4:	bd80      	pop	{r7, pc}

08000ba6 <MPU_read>:

void MPU_read(uint8_t Address, uint8_t Reg, uint8_t *buffer, uint8_t size)
{
 8000ba6:	b580      	push	{r7, lr}
 8000ba8:	b082      	sub	sp, #8
 8000baa:	af00      	add	r7, sp, #0
 8000bac:	603a      	str	r2, [r7, #0]
 8000bae:	461a      	mov	r2, r3
 8000bb0:	4603      	mov	r3, r0
 8000bb2:	71fb      	strb	r3, [r7, #7]
 8000bb4:	460b      	mov	r3, r1
 8000bb6:	71bb      	strb	r3, [r7, #6]
 8000bb8:	4613      	mov	r3, r2
 8000bba:	717b      	strb	r3, [r7, #5]
	i2c_start ();
 8000bbc:	f000 fd0e 	bl	80015dc <i2c_start>
	i2c_address (Address);
 8000bc0:	79fb      	ldrb	r3, [r7, #7]
 8000bc2:	4618      	mov	r0, r3
 8000bc4:	f000 fd44 	bl	8001650 <i2c_address>
	i2c_write (Reg);
 8000bc8:	79bb      	ldrb	r3, [r7, #6]
 8000bca:	4618      	mov	r0, r3
 8000bcc:	f000 fd22 	bl	8001614 <i2c_write>
	i2c_start ();  			// repeated start
 8000bd0:	f000 fd04 	bl	80015dc <i2c_start>
	i2c_read (Address+0x01, buffer, size);
 8000bd4:	79fb      	ldrb	r3, [r7, #7]
 8000bd6:	3301      	adds	r3, #1
 8000bd8:	b2db      	uxtb	r3, r3
 8000bda:	797a      	ldrb	r2, [r7, #5]
 8000bdc:	6839      	ldr	r1, [r7, #0]
 8000bde:	4618      	mov	r0, r3
 8000be0:	f000 fd66 	bl	80016b0 <i2c_read>
	i2c_stop ();
 8000be4:	f000 fd54 	bl	8001690 <i2c_stop>
}
 8000be8:	bf00      	nop
 8000bea:	3708      	adds	r7, #8
 8000bec:	46bd      	mov	sp, r7
 8000bee:	bd80      	pop	{r7, pc}

08000bf0 <MPU6050_init>:



void MPU6050_init (void)
{
 8000bf0:	b580      	push	{r7, lr}
 8000bf2:	b082      	sub	sp, #8
 8000bf4:	af00      	add	r7, sp, #0
	uint8_t check;
	uint8_t Data;

	// check device ID WHO_AM_I

	MPU_read(MPU6050_ADDR,WHO_AM_I_REG, &check, 1);
 8000bf6:	1dba      	adds	r2, r7, #6
 8000bf8:	2301      	movs	r3, #1
 8000bfa:	2175      	movs	r1, #117	; 0x75
 8000bfc:	20d0      	movs	r0, #208	; 0xd0
 8000bfe:	f7ff ffd2 	bl	8000ba6 <MPU_read>

	if (check == 104)  // 0x68 will be returned by the sensor if everything goes well
 8000c02:	79bb      	ldrb	r3, [r7, #6]
 8000c04:	2b68      	cmp	r3, #104	; 0x68
 8000c06:	d11f      	bne.n	8000c48 <MPU6050_init+0x58>
	{
		// power management register 0X6B we should write all 0's to wake the sensor up
		Data = 0;
 8000c08:	2300      	movs	r3, #0
 8000c0a:	71fb      	strb	r3, [r7, #7]
		MPU_write (MPU6050_ADDR, PWR_MGMT_1_REG, Data);
 8000c0c:	79fb      	ldrb	r3, [r7, #7]
 8000c0e:	461a      	mov	r2, r3
 8000c10:	216b      	movs	r1, #107	; 0x6b
 8000c12:	20d0      	movs	r0, #208	; 0xd0
 8000c14:	f7ff ffaa 	bl	8000b6c <MPU_write>

		// Set accelerometer configuration in ACCEL_CONFIG Register
		// FS_SEL=2 -> ? 8g
		Data = 0x10;
 8000c18:	2310      	movs	r3, #16
 8000c1a:	71fb      	strb	r3, [r7, #7]
		MPU_write(MPU6050_ADDR, ACCEL_CONFIG_REG, Data);
 8000c1c:	79fb      	ldrb	r3, [r7, #7]
 8000c1e:	461a      	mov	r2, r3
 8000c20:	211c      	movs	r1, #28
 8000c22:	20d0      	movs	r0, #208	; 0xd0
 8000c24:	f7ff ffa2 	bl	8000b6c <MPU_write>

		// Set Gyroscopic configuration in GYRO_CONFIG Register
		// FS_SEL=1 -> ? 500 ?/s
		Data = 0x08;
 8000c28:	2308      	movs	r3, #8
 8000c2a:	71fb      	strb	r3, [r7, #7]
		MPU_write(MPU6050_ADDR, GYRO_CONFIG_REG, Data);
 8000c2c:	79fb      	ldrb	r3, [r7, #7]
 8000c2e:	461a      	mov	r2, r3
 8000c30:	211b      	movs	r1, #27
 8000c32:	20d0      	movs	r0, #208	; 0xd0
 8000c34:	f7ff ff9a 	bl	8000b6c <MPU_write>
		
		Data = 0x01;
 8000c38:	2301      	movs	r3, #1
 8000c3a:	71fb      	strb	r3, [r7, #7]
		MPU_write(MPU6050_ADDR,FILTER_CONFIG_REG, Data);
 8000c3c:	79fb      	ldrb	r3, [r7, #7]
 8000c3e:	461a      	mov	r2, r3
 8000c40:	211a      	movs	r1, #26
 8000c42:	20d0      	movs	r0, #208	; 0xd0
 8000c44:	f7ff ff92 	bl	8000b6c <MPU_write>
	}
}
 8000c48:	bf00      	nop
 8000c4a:	3708      	adds	r7, #8
 8000c4c:	46bd      	mov	sp, r7
 8000c4e:	bd80      	pop	{r7, pc}

08000c50 <MPU_read_eulers>:

void MPU_read_eulers(mpu6050type *mpu,float *roll, float *pitch, float *yaw)
{
 8000c50:	b5b0      	push	{r4, r5, r7, lr}
 8000c52:	b08a      	sub	sp, #40	; 0x28
 8000c54:	af00      	add	r7, sp, #0
 8000c56:	6178      	str	r0, [r7, #20]
 8000c58:	6139      	str	r1, [r7, #16]
 8000c5a:	60fa      	str	r2, [r7, #12]
 8000c5c:	60bb      	str	r3, [r7, #8]

	uint8_t Rx_data[14];
	
	MPU_read (MPU6050_ADDR, ACCEL_XOUT_H_REG, Rx_data, 14);
 8000c5e:	f107 0218 	add.w	r2, r7, #24
 8000c62:	230e      	movs	r3, #14
 8000c64:	213b      	movs	r1, #59	; 0x3b
 8000c66:	20d0      	movs	r0, #208	; 0xd0
 8000c68:	f7ff ff9d 	bl	8000ba6 <MPU_read>
	
	mpu->Ax = (int16_t)(Rx_data[0] << 8 | Rx_data [1]);
 8000c6c:	7e3b      	ldrb	r3, [r7, #24]
 8000c6e:	021b      	lsls	r3, r3, #8
 8000c70:	b21a      	sxth	r2, r3
 8000c72:	7e7b      	ldrb	r3, [r7, #25]
 8000c74:	b21b      	sxth	r3, r3
 8000c76:	4313      	orrs	r3, r2
 8000c78:	b21a      	sxth	r2, r3
 8000c7a:	697b      	ldr	r3, [r7, #20]
 8000c7c:	819a      	strh	r2, [r3, #12]
	mpu->Ay = (int16_t)(Rx_data[2] << 8 | Rx_data [3]);
 8000c7e:	7ebb      	ldrb	r3, [r7, #26]
 8000c80:	021b      	lsls	r3, r3, #8
 8000c82:	b21a      	sxth	r2, r3
 8000c84:	7efb      	ldrb	r3, [r7, #27]
 8000c86:	b21b      	sxth	r3, r3
 8000c88:	4313      	orrs	r3, r2
 8000c8a:	b21a      	sxth	r2, r3
 8000c8c:	697b      	ldr	r3, [r7, #20]
 8000c8e:	81da      	strh	r2, [r3, #14]
	mpu->Az = (int16_t)(Rx_data[4] << 8 | Rx_data [5]);
 8000c90:	7f3b      	ldrb	r3, [r7, #28]
 8000c92:	021b      	lsls	r3, r3, #8
 8000c94:	b21a      	sxth	r2, r3
 8000c96:	7f7b      	ldrb	r3, [r7, #29]
 8000c98:	b21b      	sxth	r3, r3
 8000c9a:	4313      	orrs	r3, r2
 8000c9c:	b21a      	sxth	r2, r3
 8000c9e:	697b      	ldr	r3, [r7, #20]
 8000ca0:	821a      	strh	r2, [r3, #16]
	mpu->Temp_Raw  = (int16_t)(Rx_data[6] << 8 | Rx_data [7]);
 8000ca2:	7fbb      	ldrb	r3, [r7, #30]
 8000ca4:	021b      	lsls	r3, r3, #8
 8000ca6:	b21a      	sxth	r2, r3
 8000ca8:	7ffb      	ldrb	r3, [r7, #31]
 8000caa:	b21b      	sxth	r3, r3
 8000cac:	4313      	orrs	r3, r2
 8000cae:	b21a      	sxth	r2, r3
 8000cb0:	697b      	ldr	r3, [r7, #20]
 8000cb2:	831a      	strh	r2, [r3, #24]
	mpu->Gx  = (int16_t)(Rx_data[8] << 8 | Rx_data [9]);
 8000cb4:	f897 3020 	ldrb.w	r3, [r7, #32]
 8000cb8:	021b      	lsls	r3, r3, #8
 8000cba:	b21a      	sxth	r2, r3
 8000cbc:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
 8000cc0:	b21b      	sxth	r3, r3
 8000cc2:	4313      	orrs	r3, r2
 8000cc4:	b21a      	sxth	r2, r3
 8000cc6:	697b      	ldr	r3, [r7, #20]
 8000cc8:	825a      	strh	r2, [r3, #18]
	mpu->Gy  = (int16_t)(Rx_data[10] << 8 | Rx_data [11]);
 8000cca:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 8000cce:	021b      	lsls	r3, r3, #8
 8000cd0:	b21a      	sxth	r2, r3
 8000cd2:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8000cd6:	b21b      	sxth	r3, r3
 8000cd8:	4313      	orrs	r3, r2
 8000cda:	b21a      	sxth	r2, r3
 8000cdc:	697b      	ldr	r3, [r7, #20]
 8000cde:	829a      	strh	r2, [r3, #20]
	mpu->Gz  = (int16_t)(Rx_data[12] << 8 | Rx_data [13]);
 8000ce0:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8000ce4:	021b      	lsls	r3, r3, #8
 8000ce6:	b21a      	sxth	r2, r3
 8000ce8:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8000cec:	b21b      	sxth	r3, r3
 8000cee:	4313      	orrs	r3, r2
 8000cf0:	b21a      	sxth	r2, r3
 8000cf2:	697b      	ldr	r3, [r7, #20]
 8000cf4:	82da      	strh	r2, [r3, #22]
	
	if(mpu->Gz<75 && mpu->Gz>-75)
 8000cf6:	697b      	ldr	r3, [r7, #20]
 8000cf8:	8adb      	ldrh	r3, [r3, #22]
 8000cfa:	b21b      	sxth	r3, r3
 8000cfc:	2b4a      	cmp	r3, #74	; 0x4a
 8000cfe:	dc10      	bgt.n	8000d22 <MPU_read_eulers+0xd2>
 8000d00:	697b      	ldr	r3, [r7, #20]
 8000d02:	8adb      	ldrh	r3, [r3, #22]
 8000d04:	b21b      	sxth	r3, r3
 8000d06:	f113 0f4a 	cmn.w	r3, #74	; 0x4a
 8000d0a:	db0a      	blt.n	8000d22 <MPU_read_eulers+0xd2>
	{
		mpu->Gz=mpu->cGz;
 8000d0c:	697b      	ldr	r3, [r7, #20]
 8000d0e:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8000d12:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000d16:	edc7 7a01 	vstr	s15, [r7, #4]
 8000d1a:	88bb      	ldrh	r3, [r7, #4]
 8000d1c:	b21a      	sxth	r2, r3
 8000d1e:	697b      	ldr	r3, [r7, #20]
 8000d20:	82da      	strh	r2, [r3, #22]
	}
	
	
	//obtaining gyro angles
	
	mpu->gyro_roll += (mpu->Gy-mpu->cGy)*0.0000763; 			//5000 us == 0.005 second --> degree/second
 8000d22:	697b      	ldr	r3, [r7, #20]
 8000d24:	8a9b      	ldrh	r3, [r3, #20]
 8000d26:	b21b      	sxth	r3, r3
 8000d28:	ee07 3a90 	vmov	s15, r3
 8000d2c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000d30:	697b      	ldr	r3, [r7, #20]
 8000d32:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 8000d36:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000d3a:	ee17 0a90 	vmov	r0, s15
 8000d3e:	f7ff fbaf 	bl	80004a0 <__aeabi_f2d>
 8000d42:	f20f 4304 	addw	r3, pc, #1028	; 0x404
 8000d46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000d4a:	f7ff fbfd 	bl	8000548 <__aeabi_dmul>
 8000d4e:	4603      	mov	r3, r0
 8000d50:	460c      	mov	r4, r1
 8000d52:	4625      	mov	r5, r4
 8000d54:	461c      	mov	r4, r3
 8000d56:	697b      	ldr	r3, [r7, #20]
 8000d58:	e9d3 0112 	ldrd	r0, r1, [r3, #72]	; 0x48
 8000d5c:	4622      	mov	r2, r4
 8000d5e:	462b      	mov	r3, r5
 8000d60:	f7ff fa40 	bl	80001e4 <__adddf3>
 8000d64:	4603      	mov	r3, r0
 8000d66:	460c      	mov	r4, r1
 8000d68:	697a      	ldr	r2, [r7, #20]
 8000d6a:	e9c2 3412 	strd	r3, r4, [r2, #72]	; 0x48
	mpu->gyro_pitch += (mpu->Gx-mpu->cGx)*0.0000763;
 8000d6e:	697b      	ldr	r3, [r7, #20]
 8000d70:	8a5b      	ldrh	r3, [r3, #18]
 8000d72:	b21b      	sxth	r3, r3
 8000d74:	ee07 3a90 	vmov	s15, r3
 8000d78:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000d7c:	697b      	ldr	r3, [r7, #20]
 8000d7e:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 8000d82:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000d86:	ee17 0a90 	vmov	r0, s15
 8000d8a:	f7ff fb89 	bl	80004a0 <__aeabi_f2d>
 8000d8e:	a3ee      	add	r3, pc, #952	; (adr r3, 8001148 <MPU_read_eulers+0x4f8>)
 8000d90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000d94:	f7ff fbd8 	bl	8000548 <__aeabi_dmul>
 8000d98:	4603      	mov	r3, r0
 8000d9a:	460c      	mov	r4, r1
 8000d9c:	4625      	mov	r5, r4
 8000d9e:	461c      	mov	r4, r3
 8000da0:	697b      	ldr	r3, [r7, #20]
 8000da2:	e9d3 0114 	ldrd	r0, r1, [r3, #80]	; 0x50
 8000da6:	4622      	mov	r2, r4
 8000da8:	462b      	mov	r3, r5
 8000daa:	f7ff fa1b 	bl	80001e4 <__adddf3>
 8000dae:	4603      	mov	r3, r0
 8000db0:	460c      	mov	r4, r1
 8000db2:	697a      	ldr	r2, [r7, #20]
 8000db4:	e9c2 3414 	strd	r3, r4, [r2, #80]	; 0x50
	mpu->gyro_yaw += (mpu->Gz-mpu->cGz)*0.0000763;
 8000db8:	697b      	ldr	r3, [r7, #20]
 8000dba:	8adb      	ldrh	r3, [r3, #22]
 8000dbc:	b21b      	sxth	r3, r3
 8000dbe:	ee07 3a90 	vmov	s15, r3
 8000dc2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000dc6:	697b      	ldr	r3, [r7, #20]
 8000dc8:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8000dcc:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000dd0:	ee17 0a90 	vmov	r0, s15
 8000dd4:	f7ff fb64 	bl	80004a0 <__aeabi_f2d>
 8000dd8:	a3db      	add	r3, pc, #876	; (adr r3, 8001148 <MPU_read_eulers+0x4f8>)
 8000dda:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000dde:	f7ff fbb3 	bl	8000548 <__aeabi_dmul>
 8000de2:	4603      	mov	r3, r0
 8000de4:	460c      	mov	r4, r1
 8000de6:	4625      	mov	r5, r4
 8000de8:	461c      	mov	r4, r3
 8000dea:	697b      	ldr	r3, [r7, #20]
 8000dec:	e9d3 0116 	ldrd	r0, r1, [r3, #88]	; 0x58
 8000df0:	4622      	mov	r2, r4
 8000df2:	462b      	mov	r3, r5
 8000df4:	f7ff f9f6 	bl	80001e4 <__adddf3>
 8000df8:	4603      	mov	r3, r0
 8000dfa:	460c      	mov	r4, r1
 8000dfc:	697a      	ldr	r2, [r7, #20]
 8000dfe:	e9c2 3416 	strd	r3, r4, [r2, #88]	; 0x58
	
	
	mpu->gyro_pitch += mpu->gyro_roll * sin((mpu->Gz-mpu->cGz) * 0.000001331);               //If the IMU has yawed transfer the roll angle to the pitch angel
 8000e02:	697b      	ldr	r3, [r7, #20]
 8000e04:	e9d3 4512 	ldrd	r4, r5, [r3, #72]	; 0x48
 8000e08:	697b      	ldr	r3, [r7, #20]
 8000e0a:	8adb      	ldrh	r3, [r3, #22]
 8000e0c:	b21b      	sxth	r3, r3
 8000e0e:	ee07 3a90 	vmov	s15, r3
 8000e12:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000e16:	697b      	ldr	r3, [r7, #20]
 8000e18:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8000e1c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000e20:	ee17 0a90 	vmov	r0, s15
 8000e24:	f7ff fb3c 	bl	80004a0 <__aeabi_f2d>
 8000e28:	a3c9      	add	r3, pc, #804	; (adr r3, 8001150 <MPU_read_eulers+0x500>)
 8000e2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000e2e:	f7ff fb8b 	bl	8000548 <__aeabi_dmul>
 8000e32:	4602      	mov	r2, r0
 8000e34:	460b      	mov	r3, r1
 8000e36:	ec43 2b17 	vmov	d7, r2, r3
 8000e3a:	eeb0 0a47 	vmov.f32	s0, s14
 8000e3e:	eef0 0a67 	vmov.f32	s1, s15
 8000e42:	f000 fdf9 	bl	8001a38 <sin>
 8000e46:	ec53 2b10 	vmov	r2, r3, d0
 8000e4a:	4620      	mov	r0, r4
 8000e4c:	4629      	mov	r1, r5
 8000e4e:	f7ff fb7b 	bl	8000548 <__aeabi_dmul>
 8000e52:	4603      	mov	r3, r0
 8000e54:	460c      	mov	r4, r1
 8000e56:	4625      	mov	r5, r4
 8000e58:	461c      	mov	r4, r3
 8000e5a:	697b      	ldr	r3, [r7, #20]
 8000e5c:	e9d3 0114 	ldrd	r0, r1, [r3, #80]	; 0x50
 8000e60:	4622      	mov	r2, r4
 8000e62:	462b      	mov	r3, r5
 8000e64:	f7ff f9be 	bl	80001e4 <__adddf3>
 8000e68:	4603      	mov	r3, r0
 8000e6a:	460c      	mov	r4, r1
 8000e6c:	697a      	ldr	r2, [r7, #20]
 8000e6e:	e9c2 3414 	strd	r3, r4, [r2, #80]	; 0x50
	mpu->gyro_roll -= mpu->gyro_pitch * sin((mpu->Gz-mpu->cGz) * 0.000001331);               //If the IMU has yawed transfer the pitch angle to the roll angel
 8000e72:	697b      	ldr	r3, [r7, #20]
 8000e74:	e9d3 4514 	ldrd	r4, r5, [r3, #80]	; 0x50
 8000e78:	697b      	ldr	r3, [r7, #20]
 8000e7a:	8adb      	ldrh	r3, [r3, #22]
 8000e7c:	b21b      	sxth	r3, r3
 8000e7e:	ee07 3a90 	vmov	s15, r3
 8000e82:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000e86:	697b      	ldr	r3, [r7, #20]
 8000e88:	edd3 7a0c 	vldr	s15, [r3, #48]	; 0x30
 8000e8c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8000e90:	ee17 0a90 	vmov	r0, s15
 8000e94:	f7ff fb04 	bl	80004a0 <__aeabi_f2d>
 8000e98:	a3ad      	add	r3, pc, #692	; (adr r3, 8001150 <MPU_read_eulers+0x500>)
 8000e9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000e9e:	f7ff fb53 	bl	8000548 <__aeabi_dmul>
 8000ea2:	4602      	mov	r2, r0
 8000ea4:	460b      	mov	r3, r1
 8000ea6:	ec43 2b17 	vmov	d7, r2, r3
 8000eaa:	eeb0 0a47 	vmov.f32	s0, s14
 8000eae:	eef0 0a67 	vmov.f32	s1, s15
 8000eb2:	f000 fdc1 	bl	8001a38 <sin>
 8000eb6:	ec53 2b10 	vmov	r2, r3, d0
 8000eba:	4620      	mov	r0, r4
 8000ebc:	4629      	mov	r1, r5
 8000ebe:	f7ff fb43 	bl	8000548 <__aeabi_dmul>
 8000ec2:	4603      	mov	r3, r0
 8000ec4:	460c      	mov	r4, r1
 8000ec6:	4625      	mov	r5, r4
 8000ec8:	461c      	mov	r4, r3
 8000eca:	697b      	ldr	r3, [r7, #20]
 8000ecc:	e9d3 0112 	ldrd	r0, r1, [r3, #72]	; 0x48
 8000ed0:	4622      	mov	r2, r4
 8000ed2:	462b      	mov	r3, r5
 8000ed4:	f7ff f984 	bl	80001e0 <__aeabi_dsub>
 8000ed8:	4603      	mov	r3, r0
 8000eda:	460c      	mov	r4, r1
 8000edc:	697a      	ldr	r2, [r7, #20]
 8000ede:	e9c2 3412 	strd	r3, r4, [r2, #72]	; 0x48
	

	//obtaining acc angles
	mpu->acc_total_vector = sqrtf(((mpu->Ax)*(mpu->Ax)) + ((mpu->Ay)*(mpu->Ay)) + ((mpu->Az)*(mpu->Az)));
 8000ee2:	697b      	ldr	r3, [r7, #20]
 8000ee4:	899b      	ldrh	r3, [r3, #12]
 8000ee6:	b21b      	sxth	r3, r3
 8000ee8:	461a      	mov	r2, r3
 8000eea:	697b      	ldr	r3, [r7, #20]
 8000eec:	899b      	ldrh	r3, [r3, #12]
 8000eee:	b21b      	sxth	r3, r3
 8000ef0:	fb03 f202 	mul.w	r2, r3, r2
 8000ef4:	697b      	ldr	r3, [r7, #20]
 8000ef6:	89db      	ldrh	r3, [r3, #14]
 8000ef8:	b21b      	sxth	r3, r3
 8000efa:	4619      	mov	r1, r3
 8000efc:	697b      	ldr	r3, [r7, #20]
 8000efe:	89db      	ldrh	r3, [r3, #14]
 8000f00:	b21b      	sxth	r3, r3
 8000f02:	fb03 f301 	mul.w	r3, r3, r1
 8000f06:	441a      	add	r2, r3
 8000f08:	697b      	ldr	r3, [r7, #20]
 8000f0a:	8a1b      	ldrh	r3, [r3, #16]
 8000f0c:	b21b      	sxth	r3, r3
 8000f0e:	4619      	mov	r1, r3
 8000f10:	697b      	ldr	r3, [r7, #20]
 8000f12:	8a1b      	ldrh	r3, [r3, #16]
 8000f14:	b21b      	sxth	r3, r3
 8000f16:	fb03 f301 	mul.w	r3, r3, r1
 8000f1a:	4413      	add	r3, r2
 8000f1c:	ee07 3a90 	vmov	s15, r3
 8000f20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000f24:	eeb0 0a67 	vmov.f32	s0, s15
 8000f28:	f000 fe26 	bl	8001b78 <sqrtf>
 8000f2c:	eef0 7a40 	vmov.f32	s15, s0
 8000f30:	697b      	ldr	r3, [r7, #20]
 8000f32:	edc3 7a0f 	vstr	s15, [r3, #60]	; 0x3c
	//57.296 = 1 / (3.142 / 180)
	mpu->acc_pitch = asinf((float)mpu->Ay / mpu->acc_total_vector) * 57.296;
 8000f36:	697b      	ldr	r3, [r7, #20]
 8000f38:	89db      	ldrh	r3, [r3, #14]
 8000f3a:	b21b      	sxth	r3, r3
 8000f3c:	ee07 3a90 	vmov	s15, r3
 8000f40:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000f44:	697b      	ldr	r3, [r7, #20]
 8000f46:	edd3 7a0f 	vldr	s15, [r3, #60]	; 0x3c
 8000f4a:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8000f4e:	eeb0 0a66 	vmov.f32	s0, s13
 8000f52:	f000 fdb9 	bl	8001ac8 <asinf>
 8000f56:	ee10 3a10 	vmov	r3, s0
 8000f5a:	4618      	mov	r0, r3
 8000f5c:	f7ff faa0 	bl	80004a0 <__aeabi_f2d>
 8000f60:	a37d      	add	r3, pc, #500	; (adr r3, 8001158 <MPU_read_eulers+0x508>)
 8000f62:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f66:	f7ff faef 	bl	8000548 <__aeabi_dmul>
 8000f6a:	4603      	mov	r3, r0
 8000f6c:	460c      	mov	r4, r1
 8000f6e:	4618      	mov	r0, r3
 8000f70:	4621      	mov	r1, r4
 8000f72:	f7ff fdab 	bl	8000acc <__aeabi_d2f>
 8000f76:	4602      	mov	r2, r0
 8000f78:	697b      	ldr	r3, [r7, #20]
 8000f7a:	639a      	str	r2, [r3, #56]	; 0x38
	mpu->acc_roll = asinf((float)mpu->Ax / mpu->acc_total_vector) * -57.296;
 8000f7c:	697b      	ldr	r3, [r7, #20]
 8000f7e:	899b      	ldrh	r3, [r3, #12]
 8000f80:	b21b      	sxth	r3, r3
 8000f82:	ee07 3a90 	vmov	s15, r3
 8000f86:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000f8a:	697b      	ldr	r3, [r7, #20]
 8000f8c:	edd3 7a0f 	vldr	s15, [r3, #60]	; 0x3c
 8000f90:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8000f94:	eeb0 0a66 	vmov.f32	s0, s13
 8000f98:	f000 fd96 	bl	8001ac8 <asinf>
 8000f9c:	ee10 3a10 	vmov	r3, s0
 8000fa0:	4618      	mov	r0, r3
 8000fa2:	f7ff fa7d 	bl	80004a0 <__aeabi_f2d>
 8000fa6:	a36e      	add	r3, pc, #440	; (adr r3, 8001160 <MPU_read_eulers+0x510>)
 8000fa8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000fac:	f7ff facc 	bl	8000548 <__aeabi_dmul>
 8000fb0:	4603      	mov	r3, r0
 8000fb2:	460c      	mov	r4, r1
 8000fb4:	4618      	mov	r0, r3
 8000fb6:	4621      	mov	r1, r4
 8000fb8:	f7ff fd88 	bl	8000acc <__aeabi_d2f>
 8000fbc:	4602      	mov	r2, r0
 8000fbe:	697b      	ldr	r3, [r7, #20]
 8000fc0:	635a      	str	r2, [r3, #52]	; 0x34


	

	if(mpu->set_gyro_angles)
 8000fc2:	697b      	ldr	r3, [r7, #20]
 8000fc4:	f893 3070 	ldrb.w	r3, [r3, #112]	; 0x70
 8000fc8:	b2db      	uxtb	r3, r3
 8000fca:	2b00      	cmp	r3, #0
 8000fcc:	d042      	beq.n	8001054 <MPU_read_eulers+0x404>
	{                                                                             //If the IMU is already started
		mpu->gyro_pitch = mpu->gyro_pitch * 0.9995 + mpu->acc_pitch * 0.0005;     //Correct the drift of the gyro pitch angle with the accelerometer pitch angle
 8000fce:	697b      	ldr	r3, [r7, #20]
 8000fd0:	e9d3 0114 	ldrd	r0, r1, [r3, #80]	; 0x50
 8000fd4:	a364      	add	r3, pc, #400	; (adr r3, 8001168 <MPU_read_eulers+0x518>)
 8000fd6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000fda:	f7ff fab5 	bl	8000548 <__aeabi_dmul>
 8000fde:	4603      	mov	r3, r0
 8000fe0:	460c      	mov	r4, r1
 8000fe2:	4625      	mov	r5, r4
 8000fe4:	461c      	mov	r4, r3
 8000fe6:	697b      	ldr	r3, [r7, #20]
 8000fe8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8000fea:	4618      	mov	r0, r3
 8000fec:	f7ff fa58 	bl	80004a0 <__aeabi_f2d>
 8000ff0:	a35f      	add	r3, pc, #380	; (adr r3, 8001170 <MPU_read_eulers+0x520>)
 8000ff2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000ff6:	f7ff faa7 	bl	8000548 <__aeabi_dmul>
 8000ffa:	4602      	mov	r2, r0
 8000ffc:	460b      	mov	r3, r1
 8000ffe:	4620      	mov	r0, r4
 8001000:	4629      	mov	r1, r5
 8001002:	f7ff f8ef 	bl	80001e4 <__adddf3>
 8001006:	4603      	mov	r3, r0
 8001008:	460c      	mov	r4, r1
 800100a:	697a      	ldr	r2, [r7, #20]
 800100c:	e9c2 3414 	strd	r3, r4, [r2, #80]	; 0x50
		mpu->gyro_roll = mpu->gyro_roll * 0.9995 + mpu->acc_roll * 0.0005;        //Correct the drift of the gyro roll angle with the accelerometer roll angle
 8001010:	697b      	ldr	r3, [r7, #20]
 8001012:	e9d3 0112 	ldrd	r0, r1, [r3, #72]	; 0x48
 8001016:	a354      	add	r3, pc, #336	; (adr r3, 8001168 <MPU_read_eulers+0x518>)
 8001018:	e9d3 2300 	ldrd	r2, r3, [r3]
 800101c:	f7ff fa94 	bl	8000548 <__aeabi_dmul>
 8001020:	4603      	mov	r3, r0
 8001022:	460c      	mov	r4, r1
 8001024:	4625      	mov	r5, r4
 8001026:	461c      	mov	r4, r3
 8001028:	697b      	ldr	r3, [r7, #20]
 800102a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800102c:	4618      	mov	r0, r3
 800102e:	f7ff fa37 	bl	80004a0 <__aeabi_f2d>
 8001032:	a34f      	add	r3, pc, #316	; (adr r3, 8001170 <MPU_read_eulers+0x520>)
 8001034:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001038:	f7ff fa86 	bl	8000548 <__aeabi_dmul>
 800103c:	4602      	mov	r2, r0
 800103e:	460b      	mov	r3, r1
 8001040:	4620      	mov	r0, r4
 8001042:	4629      	mov	r1, r5
 8001044:	f7ff f8ce 	bl	80001e4 <__adddf3>
 8001048:	4603      	mov	r3, r0
 800104a:	460c      	mov	r4, r1
 800104c:	697a      	ldr	r2, [r7, #20]
 800104e:	e9c2 3412 	strd	r3, r4, [r2, #72]	; 0x48
 8001052:	e017      	b.n	8001084 <MPU_read_eulers+0x434>
	}
	else
	{                                                                         //At first start
		mpu->gyro_pitch = mpu->acc_pitch;                                     //Set the gyro pitch angle equal to the accelerometer pitch angle
 8001054:	697b      	ldr	r3, [r7, #20]
 8001056:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001058:	4618      	mov	r0, r3
 800105a:	f7ff fa21 	bl	80004a0 <__aeabi_f2d>
 800105e:	4603      	mov	r3, r0
 8001060:	460c      	mov	r4, r1
 8001062:	697a      	ldr	r2, [r7, #20]
 8001064:	e9c2 3414 	strd	r3, r4, [r2, #80]	; 0x50
		mpu->gyro_roll = mpu->acc_roll;                                       //Set the gyro roll angle equal to the accelerometer roll angle
 8001068:	697b      	ldr	r3, [r7, #20]
 800106a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800106c:	4618      	mov	r0, r3
 800106e:	f7ff fa17 	bl	80004a0 <__aeabi_f2d>
 8001072:	4603      	mov	r3, r0
 8001074:	460c      	mov	r4, r1
 8001076:	697a      	ldr	r2, [r7, #20]
 8001078:	e9c2 3412 	strd	r3, r4, [r2, #72]	; 0x48
		mpu->set_gyro_angles = 1;                                             //Set the IMU started flag
 800107c:	697b      	ldr	r3, [r7, #20]
 800107e:	2201      	movs	r2, #1
 8001080:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
	}
	
	mpu->anglepitchout = mpu->anglepitchout * 0.9 + mpu->gyro_pitch * 0.1;   //Basic filtering
 8001084:	697b      	ldr	r3, [r7, #20]
 8001086:	e9d3 0118 	ldrd	r0, r1, [r3, #96]	; 0x60
 800108a:	a33b      	add	r3, pc, #236	; (adr r3, 8001178 <MPU_read_eulers+0x528>)
 800108c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001090:	f7ff fa5a 	bl	8000548 <__aeabi_dmul>
 8001094:	4603      	mov	r3, r0
 8001096:	460c      	mov	r4, r1
 8001098:	4625      	mov	r5, r4
 800109a:	461c      	mov	r4, r3
 800109c:	697b      	ldr	r3, [r7, #20]
 800109e:	e9d3 0114 	ldrd	r0, r1, [r3, #80]	; 0x50
 80010a2:	a337      	add	r3, pc, #220	; (adr r3, 8001180 <MPU_read_eulers+0x530>)
 80010a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010a8:	f7ff fa4e 	bl	8000548 <__aeabi_dmul>
 80010ac:	4602      	mov	r2, r0
 80010ae:	460b      	mov	r3, r1
 80010b0:	4620      	mov	r0, r4
 80010b2:	4629      	mov	r1, r5
 80010b4:	f7ff f896 	bl	80001e4 <__adddf3>
 80010b8:	4603      	mov	r3, r0
 80010ba:	460c      	mov	r4, r1
 80010bc:	697a      	ldr	r2, [r7, #20]
 80010be:	e9c2 3418 	strd	r3, r4, [r2, #96]	; 0x60
	mpu->anglerollout = mpu->anglerollout * 0.9 + mpu->gyro_roll * 0.1;
 80010c2:	697b      	ldr	r3, [r7, #20]
 80010c4:	e9d3 011a 	ldrd	r0, r1, [r3, #104]	; 0x68
 80010c8:	a32b      	add	r3, pc, #172	; (adr r3, 8001178 <MPU_read_eulers+0x528>)
 80010ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010ce:	f7ff fa3b 	bl	8000548 <__aeabi_dmul>
 80010d2:	4603      	mov	r3, r0
 80010d4:	460c      	mov	r4, r1
 80010d6:	4625      	mov	r5, r4
 80010d8:	461c      	mov	r4, r3
 80010da:	697b      	ldr	r3, [r7, #20]
 80010dc:	e9d3 0112 	ldrd	r0, r1, [r3, #72]	; 0x48
 80010e0:	a327      	add	r3, pc, #156	; (adr r3, 8001180 <MPU_read_eulers+0x530>)
 80010e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010e6:	f7ff fa2f 	bl	8000548 <__aeabi_dmul>
 80010ea:	4602      	mov	r2, r0
 80010ec:	460b      	mov	r3, r1
 80010ee:	4620      	mov	r0, r4
 80010f0:	4629      	mov	r1, r5
 80010f2:	f7ff f877 	bl	80001e4 <__adddf3>
 80010f6:	4603      	mov	r3, r0
 80010f8:	460c      	mov	r4, r1
 80010fa:	697a      	ldr	r2, [r7, #20]
 80010fc:	e9c2 341a 	strd	r3, r4, [r2, #104]	; 0x68
	
	*roll = mpu->anglerollout;
 8001100:	697b      	ldr	r3, [r7, #20]
 8001102:	e9d3 341a 	ldrd	r3, r4, [r3, #104]	; 0x68
 8001106:	4618      	mov	r0, r3
 8001108:	4621      	mov	r1, r4
 800110a:	f7ff fcdf 	bl	8000acc <__aeabi_d2f>
 800110e:	4602      	mov	r2, r0
 8001110:	693b      	ldr	r3, [r7, #16]
 8001112:	601a      	str	r2, [r3, #0]
	*pitch = mpu->anglepitchout;
 8001114:	697b      	ldr	r3, [r7, #20]
 8001116:	e9d3 3418 	ldrd	r3, r4, [r3, #96]	; 0x60
 800111a:	4618      	mov	r0, r3
 800111c:	4621      	mov	r1, r4
 800111e:	f7ff fcd5 	bl	8000acc <__aeabi_d2f>
 8001122:	4602      	mov	r2, r0
 8001124:	68fb      	ldr	r3, [r7, #12]
 8001126:	601a      	str	r2, [r3, #0]
	*yaw = mpu->gyro_yaw;
 8001128:	697b      	ldr	r3, [r7, #20]
 800112a:	e9d3 3416 	ldrd	r3, r4, [r3, #88]	; 0x58
 800112e:	4618      	mov	r0, r3
 8001130:	4621      	mov	r1, r4
 8001132:	f7ff fccb 	bl	8000acc <__aeabi_d2f>
 8001136:	4602      	mov	r2, r0
 8001138:	68bb      	ldr	r3, [r7, #8]
 800113a:	601a      	str	r2, [r3, #0]
		
}
 800113c:	bf00      	nop
 800113e:	3728      	adds	r7, #40	; 0x28
 8001140:	46bd      	mov	sp, r7
 8001142:	bdb0      	pop	{r4, r5, r7, pc}
 8001144:	f3af 8000 	nop.w
 8001148:	04cc179b 	.word	0x04cc179b
 800114c:	3f140068 	.word	0x3f140068
 8001150:	fa007b6a 	.word	0xfa007b6a
 8001154:	3eb65499 	.word	0x3eb65499
 8001158:	53f7ced9 	.word	0x53f7ced9
 800115c:	404ca5e3 	.word	0x404ca5e3
 8001160:	53f7ced9 	.word	0x53f7ced9
 8001164:	c04ca5e3 	.word	0xc04ca5e3
 8001168:	6c8b4396 	.word	0x6c8b4396
 800116c:	3feffbe7 	.word	0x3feffbe7
 8001170:	d2f1a9fc 	.word	0xd2f1a9fc
 8001174:	3f40624d 	.word	0x3f40624d
 8001178:	cccccccd 	.word	0xcccccccd
 800117c:	3feccccc 	.word	0x3feccccc
 8001180:	9999999a 	.word	0x9999999a
 8001184:	3fb99999 	.word	0x3fb99999

08001188 <MPU6050_callibration>:


void MPU6050_callibration(mpu6050type *mpu, int iteration)
{
 8001188:	b580      	push	{r7, lr}
 800118a:	b088      	sub	sp, #32
 800118c:	af00      	add	r7, sp, #0
 800118e:	6078      	str	r0, [r7, #4]
 8001190:	6039      	str	r1, [r7, #0]
	uint8_t Rx_data[14];


	for(int i =0 ; i<iteration ; i++)
 8001192:	2300      	movs	r3, #0
 8001194:	61fb      	str	r3, [r7, #28]
 8001196:	e0a2      	b.n	80012de <MPU6050_callibration+0x156>
	{
		MPU_read(MPU6050_ADDR, ACCEL_XOUT_H_REG, Rx_data, 14);
 8001198:	f107 020c 	add.w	r2, r7, #12
 800119c:	230e      	movs	r3, #14
 800119e:	213b      	movs	r1, #59	; 0x3b
 80011a0:	20d0      	movs	r0, #208	; 0xd0
 80011a2:	f7ff fd00 	bl	8000ba6 <MPU_read>

		mpu->Ax = (int16_t)(Rx_data[0] << 8 | Rx_data [1]);
 80011a6:	7b3b      	ldrb	r3, [r7, #12]
 80011a8:	021b      	lsls	r3, r3, #8
 80011aa:	b21a      	sxth	r2, r3
 80011ac:	7b7b      	ldrb	r3, [r7, #13]
 80011ae:	b21b      	sxth	r3, r3
 80011b0:	4313      	orrs	r3, r2
 80011b2:	b21a      	sxth	r2, r3
 80011b4:	687b      	ldr	r3, [r7, #4]
 80011b6:	819a      	strh	r2, [r3, #12]
		mpu->Ay = (int16_t)(Rx_data[2] << 8 | Rx_data [3]);
 80011b8:	7bbb      	ldrb	r3, [r7, #14]
 80011ba:	021b      	lsls	r3, r3, #8
 80011bc:	b21a      	sxth	r2, r3
 80011be:	7bfb      	ldrb	r3, [r7, #15]
 80011c0:	b21b      	sxth	r3, r3
 80011c2:	4313      	orrs	r3, r2
 80011c4:	b21a      	sxth	r2, r3
 80011c6:	687b      	ldr	r3, [r7, #4]
 80011c8:	81da      	strh	r2, [r3, #14]
		mpu->Az = (int16_t)(Rx_data[4] << 8 | Rx_data [5]);
 80011ca:	7c3b      	ldrb	r3, [r7, #16]
 80011cc:	021b      	lsls	r3, r3, #8
 80011ce:	b21a      	sxth	r2, r3
 80011d0:	7c7b      	ldrb	r3, [r7, #17]
 80011d2:	b21b      	sxth	r3, r3
 80011d4:	4313      	orrs	r3, r2
 80011d6:	b21a      	sxth	r2, r3
 80011d8:	687b      	ldr	r3, [r7, #4]
 80011da:	821a      	strh	r2, [r3, #16]
		mpu->Temp_Raw  = (int16_t)(Rx_data[6] << 8 | Rx_data [7]);
 80011dc:	7cbb      	ldrb	r3, [r7, #18]
 80011de:	021b      	lsls	r3, r3, #8
 80011e0:	b21a      	sxth	r2, r3
 80011e2:	7cfb      	ldrb	r3, [r7, #19]
 80011e4:	b21b      	sxth	r3, r3
 80011e6:	4313      	orrs	r3, r2
 80011e8:	b21a      	sxth	r2, r3
 80011ea:	687b      	ldr	r3, [r7, #4]
 80011ec:	831a      	strh	r2, [r3, #24]
		mpu->Gx  = (int16_t)(Rx_data[8] << 8 | Rx_data [9]);
 80011ee:	7d3b      	ldrb	r3, [r7, #20]
 80011f0:	021b      	lsls	r3, r3, #8
 80011f2:	b21a      	sxth	r2, r3
 80011f4:	7d7b      	ldrb	r3, [r7, #21]
 80011f6:	b21b      	sxth	r3, r3
 80011f8:	4313      	orrs	r3, r2
 80011fa:	b21a      	sxth	r2, r3
 80011fc:	687b      	ldr	r3, [r7, #4]
 80011fe:	825a      	strh	r2, [r3, #18]
		mpu->Gy  = (int16_t)(Rx_data[10] << 8 | Rx_data [11]);
 8001200:	7dbb      	ldrb	r3, [r7, #22]
 8001202:	021b      	lsls	r3, r3, #8
 8001204:	b21a      	sxth	r2, r3
 8001206:	7dfb      	ldrb	r3, [r7, #23]
 8001208:	b21b      	sxth	r3, r3
 800120a:	4313      	orrs	r3, r2
 800120c:	b21a      	sxth	r2, r3
 800120e:	687b      	ldr	r3, [r7, #4]
 8001210:	829a      	strh	r2, [r3, #20]
		mpu->Gz  = (int16_t)(Rx_data[12] << 8 | Rx_data [13]);
 8001212:	7e3b      	ldrb	r3, [r7, #24]
 8001214:	021b      	lsls	r3, r3, #8
 8001216:	b21a      	sxth	r2, r3
 8001218:	7e7b      	ldrb	r3, [r7, #25]
 800121a:	b21b      	sxth	r3, r3
 800121c:	4313      	orrs	r3, r2
 800121e:	b21a      	sxth	r2, r3
 8001220:	687b      	ldr	r3, [r7, #4]
 8001222:	82da      	strh	r2, [r3, #22]

		mpu->cAx += mpu->Ax;
 8001224:	687b      	ldr	r3, [r7, #4]
 8001226:	899b      	ldrh	r3, [r3, #12]
 8001228:	b21a      	sxth	r2, r3
 800122a:	687b      	ldr	r3, [r7, #4]
 800122c:	ed93 7a07 	vldr	s14, [r3, #28]
 8001230:	ee07 2a90 	vmov	s15, r2
 8001234:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001238:	ee77 7a27 	vadd.f32	s15, s14, s15
 800123c:	687b      	ldr	r3, [r7, #4]
 800123e:	edc3 7a07 	vstr	s15, [r3, #28]
		mpu->cAy += mpu->Ay;
 8001242:	687b      	ldr	r3, [r7, #4]
 8001244:	89db      	ldrh	r3, [r3, #14]
 8001246:	b21a      	sxth	r2, r3
 8001248:	687b      	ldr	r3, [r7, #4]
 800124a:	ed93 7a08 	vldr	s14, [r3, #32]
 800124e:	ee07 2a90 	vmov	s15, r2
 8001252:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001256:	ee77 7a27 	vadd.f32	s15, s14, s15
 800125a:	687b      	ldr	r3, [r7, #4]
 800125c:	edc3 7a08 	vstr	s15, [r3, #32]
		mpu->cAz += mpu->Az;
 8001260:	687b      	ldr	r3, [r7, #4]
 8001262:	8a1b      	ldrh	r3, [r3, #16]
 8001264:	b21a      	sxth	r2, r3
 8001266:	687b      	ldr	r3, [r7, #4]
 8001268:	ed93 7a09 	vldr	s14, [r3, #36]	; 0x24
 800126c:	ee07 2a90 	vmov	s15, r2
 8001270:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001274:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001278:	687b      	ldr	r3, [r7, #4]
 800127a:	edc3 7a09 	vstr	s15, [r3, #36]	; 0x24
		mpu->cGx += mpu->Gx;
 800127e:	687b      	ldr	r3, [r7, #4]
 8001280:	8a5b      	ldrh	r3, [r3, #18]
 8001282:	b21a      	sxth	r2, r3
 8001284:	687b      	ldr	r3, [r7, #4]
 8001286:	ed93 7a0a 	vldr	s14, [r3, #40]	; 0x28
 800128a:	ee07 2a90 	vmov	s15, r2
 800128e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001292:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001296:	687b      	ldr	r3, [r7, #4]
 8001298:	edc3 7a0a 	vstr	s15, [r3, #40]	; 0x28
		mpu->cGy += mpu->Gy;
 800129c:	687b      	ldr	r3, [r7, #4]
 800129e:	8a9b      	ldrh	r3, [r3, #20]
 80012a0:	b21a      	sxth	r2, r3
 80012a2:	687b      	ldr	r3, [r7, #4]
 80012a4:	ed93 7a0b 	vldr	s14, [r3, #44]	; 0x2c
 80012a8:	ee07 2a90 	vmov	s15, r2
 80012ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012b0:	ee77 7a27 	vadd.f32	s15, s14, s15
 80012b4:	687b      	ldr	r3, [r7, #4]
 80012b6:	edc3 7a0b 	vstr	s15, [r3, #44]	; 0x2c
		mpu->cGz += mpu->Gz;
 80012ba:	687b      	ldr	r3, [r7, #4]
 80012bc:	8adb      	ldrh	r3, [r3, #22]
 80012be:	b21a      	sxth	r2, r3
 80012c0:	687b      	ldr	r3, [r7, #4]
 80012c2:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 80012c6:	ee07 2a90 	vmov	s15, r2
 80012ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012ce:	ee77 7a27 	vadd.f32	s15, s14, s15
 80012d2:	687b      	ldr	r3, [r7, #4]
 80012d4:	edc3 7a0c 	vstr	s15, [r3, #48]	; 0x30
	for(int i =0 ; i<iteration ; i++)
 80012d8:	69fb      	ldr	r3, [r7, #28]
 80012da:	3301      	adds	r3, #1
 80012dc:	61fb      	str	r3, [r7, #28]
 80012de:	69fa      	ldr	r2, [r7, #28]
 80012e0:	683b      	ldr	r3, [r7, #0]
 80012e2:	429a      	cmp	r2, r3
 80012e4:	f6ff af58 	blt.w	8001198 <MPU6050_callibration+0x10>
	}

	mpu->cAx/= (iteration);
 80012e8:	687b      	ldr	r3, [r7, #4]
 80012ea:	edd3 6a07 	vldr	s13, [r3, #28]
 80012ee:	683b      	ldr	r3, [r7, #0]
 80012f0:	ee07 3a90 	vmov	s15, r3
 80012f4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80012f8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80012fc:	687b      	ldr	r3, [r7, #4]
 80012fe:	edc3 7a07 	vstr	s15, [r3, #28]
	mpu->cAy/= (iteration);
 8001302:	687b      	ldr	r3, [r7, #4]
 8001304:	edd3 6a08 	vldr	s13, [r3, #32]
 8001308:	683b      	ldr	r3, [r7, #0]
 800130a:	ee07 3a90 	vmov	s15, r3
 800130e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001312:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001316:	687b      	ldr	r3, [r7, #4]
 8001318:	edc3 7a08 	vstr	s15, [r3, #32]
	mpu->cAz/= (iteration);
 800131c:	687b      	ldr	r3, [r7, #4]
 800131e:	edd3 6a09 	vldr	s13, [r3, #36]	; 0x24
 8001322:	683b      	ldr	r3, [r7, #0]
 8001324:	ee07 3a90 	vmov	s15, r3
 8001328:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800132c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001330:	687b      	ldr	r3, [r7, #4]
 8001332:	edc3 7a09 	vstr	s15, [r3, #36]	; 0x24
	mpu->cGx/= (iteration);
 8001336:	687b      	ldr	r3, [r7, #4]
 8001338:	edd3 6a0a 	vldr	s13, [r3, #40]	; 0x28
 800133c:	683b      	ldr	r3, [r7, #0]
 800133e:	ee07 3a90 	vmov	s15, r3
 8001342:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001346:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800134a:	687b      	ldr	r3, [r7, #4]
 800134c:	edc3 7a0a 	vstr	s15, [r3, #40]	; 0x28
	mpu->cGy/= (iteration);
 8001350:	687b      	ldr	r3, [r7, #4]
 8001352:	edd3 6a0b 	vldr	s13, [r3, #44]	; 0x2c
 8001356:	683b      	ldr	r3, [r7, #0]
 8001358:	ee07 3a90 	vmov	s15, r3
 800135c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001360:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001364:	687b      	ldr	r3, [r7, #4]
 8001366:	edc3 7a0b 	vstr	s15, [r3, #44]	; 0x2c
	mpu->cGz/= (iteration);
 800136a:	687b      	ldr	r3, [r7, #4]
 800136c:	edd3 6a0c 	vldr	s13, [r3, #48]	; 0x30
 8001370:	683b      	ldr	r3, [r7, #0]
 8001372:	ee07 3a90 	vmov	s15, r3
 8001376:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800137a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800137e:	687b      	ldr	r3, [r7, #4]
 8001380:	edc3 7a0c 	vstr	s15, [r3, #48]	; 0x30

}
 8001384:	bf00      	nop
 8001386:	3720      	adds	r7, #32
 8001388:	46bd      	mov	sp, r7
 800138a:	bd80      	pop	{r7, pc}

0800138c <NVIC_EnableIRQ>:
  \brief   Enable External Interrupt
  \details Enables a device-specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800138c:	b480      	push	{r7}
 800138e:	b083      	sub	sp, #12
 8001390:	af00      	add	r7, sp, #0
 8001392:	4603      	mov	r3, r0
 8001394:	71fb      	strb	r3, [r7, #7]
  NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 8001396:	4909      	ldr	r1, [pc, #36]	; (80013bc <NVIC_EnableIRQ+0x30>)
 8001398:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800139c:	095b      	lsrs	r3, r3, #5
 800139e:	79fa      	ldrb	r2, [r7, #7]
 80013a0:	f002 021f 	and.w	r2, r2, #31
 80013a4:	2001      	movs	r0, #1
 80013a6:	fa00 f202 	lsl.w	r2, r0, r2
 80013aa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80013ae:	bf00      	nop
 80013b0:	370c      	adds	r7, #12
 80013b2:	46bd      	mov	sp, r7
 80013b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013b8:	4770      	bx	lr
 80013ba:	bf00      	nop
 80013bc:	e000e100 	.word	0xe000e100

080013c0 <NVIC_SetPriority>:
  \note    The priority cannot be set for every core interrupt.
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80013c0:	b480      	push	{r7}
 80013c2:	b083      	sub	sp, #12
 80013c4:	af00      	add	r7, sp, #0
 80013c6:	4603      	mov	r3, r0
 80013c8:	6039      	str	r1, [r7, #0]
 80013ca:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) < 0)
 80013cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013d0:	2b00      	cmp	r3, #0
 80013d2:	da0b      	bge.n	80013ec <NVIC_SetPriority+0x2c>
  {
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013d4:	490d      	ldr	r1, [pc, #52]	; (800140c <NVIC_SetPriority+0x4c>)
 80013d6:	79fb      	ldrb	r3, [r7, #7]
 80013d8:	f003 030f 	and.w	r3, r3, #15
 80013dc:	3b04      	subs	r3, #4
 80013de:	683a      	ldr	r2, [r7, #0]
 80013e0:	b2d2      	uxtb	r2, r2
 80013e2:	0112      	lsls	r2, r2, #4
 80013e4:	b2d2      	uxtb	r2, r2
 80013e6:	440b      	add	r3, r1
 80013e8:	761a      	strb	r2, [r3, #24]
  }
  else
  {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80013ea:	e009      	b.n	8001400 <NVIC_SetPriority+0x40>
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80013ec:	4908      	ldr	r1, [pc, #32]	; (8001410 <NVIC_SetPriority+0x50>)
 80013ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80013f2:	683a      	ldr	r2, [r7, #0]
 80013f4:	b2d2      	uxtb	r2, r2
 80013f6:	0112      	lsls	r2, r2, #4
 80013f8:	b2d2      	uxtb	r2, r2
 80013fa:	440b      	add	r3, r1
 80013fc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 8001400:	bf00      	nop
 8001402:	370c      	adds	r7, #12
 8001404:	46bd      	mov	sp, r7
 8001406:	f85d 7b04 	ldr.w	r7, [sp], #4
 800140a:	4770      	bx	lr
 800140c:	e000ed00 	.word	0xe000ed00
 8001410:	e000e100 	.word	0xe000e100

08001414 <clock_init>:
#include "System_clock.h"
#include "MPU6050.h"
extern float roll,pitch,yaw;
extern mpu6050type mpu6050;
void clock_init(void)
{
 8001414:	b580      	push	{r7, lr}
 8001416:	af00      	add	r7, sp, #0
	
	RCC->CR |= RCC_CR_HSEON;  
 8001418:	4a1f      	ldr	r2, [pc, #124]	; (8001498 <clock_init+0x84>)
 800141a:	4b1f      	ldr	r3, [pc, #124]	; (8001498 <clock_init+0x84>)
 800141c:	681b      	ldr	r3, [r3, #0]
 800141e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001422:	6013      	str	r3, [r2, #0]
	while (!(RCC->CR & RCC_CR_HSERDY));
 8001424:	bf00      	nop
 8001426:	4b1c      	ldr	r3, [pc, #112]	; (8001498 <clock_init+0x84>)
 8001428:	681b      	ldr	r3, [r3, #0]
 800142a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800142e:	2b00      	cmp	r3, #0
 8001430:	d0f9      	beq.n	8001426 <clock_init+0x12>
	
	
	FLASH->ACR = FLASH_ACR_PRFTEN | FLASH_ACR_LATENCY_3WS;
 8001432:	4b1a      	ldr	r3, [pc, #104]	; (800149c <clock_init+0x88>)
 8001434:	f240 1203 	movw	r2, #259	; 0x103
 8001438:	601a      	str	r2, [r3, #0]
	
	RCC->CFGR |= RCC_CFGR_HPRE_DIV1; // 
 800143a:	4a17      	ldr	r2, [pc, #92]	; (8001498 <clock_init+0x84>)
 800143c:	4b16      	ldr	r3, [pc, #88]	; (8001498 <clock_init+0x84>)
 800143e:	689b      	ldr	r3, [r3, #8]
 8001440:	6093      	str	r3, [r2, #8]
	
	                              
	RCC->CFGR |= RCC_CFGR_PPRE1_DIV2;
 8001442:	4a15      	ldr	r2, [pc, #84]	; (8001498 <clock_init+0x84>)
 8001444:	4b14      	ldr	r3, [pc, #80]	; (8001498 <clock_init+0x84>)
 8001446:	689b      	ldr	r3, [r3, #8]
 8001448:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800144c:	6093      	str	r3, [r2, #8]
	
	
	RCC->CFGR |= RCC_CFGR_PPRE2_DIV1;    //M:25  N:400 P:4
 800144e:	4a12      	ldr	r2, [pc, #72]	; (8001498 <clock_init+0x84>)
 8001450:	4b11      	ldr	r3, [pc, #68]	; (8001498 <clock_init+0x84>)
 8001452:	689b      	ldr	r3, [r3, #8]
 8001454:	6093      	str	r3, [r2, #8]
	
	RCC->PLLCFGR = (PLL_M <<0) | (PLL_N << 6) | (PLL_P <<16) | (RCC_PLLCFGR_PLLSRC_HSE);
 8001456:	4b10      	ldr	r3, [pc, #64]	; (8001498 <clock_init+0x84>)
 8001458:	4a11      	ldr	r2, [pc, #68]	; (80014a0 <clock_init+0x8c>)
 800145a:	605a      	str	r2, [r3, #4]
	
	RCC->CR |= RCC_CR_PLLON;
 800145c:	4a0e      	ldr	r2, [pc, #56]	; (8001498 <clock_init+0x84>)
 800145e:	4b0e      	ldr	r3, [pc, #56]	; (8001498 <clock_init+0x84>)
 8001460:	681b      	ldr	r3, [r3, #0]
 8001462:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001466:	6013      	str	r3, [r2, #0]
	while (!(RCC->CR & RCC_CR_PLLRDY));
 8001468:	bf00      	nop
 800146a:	4b0b      	ldr	r3, [pc, #44]	; (8001498 <clock_init+0x84>)
 800146c:	681b      	ldr	r3, [r3, #0]
 800146e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001472:	2b00      	cmp	r3, #0
 8001474:	d0f9      	beq.n	800146a <clock_init+0x56>
	
	RCC->CFGR |= RCC_CFGR_SW_PLL;
 8001476:	4a08      	ldr	r2, [pc, #32]	; (8001498 <clock_init+0x84>)
 8001478:	4b07      	ldr	r3, [pc, #28]	; (8001498 <clock_init+0x84>)
 800147a:	689b      	ldr	r3, [r3, #8]
 800147c:	f043 0302 	orr.w	r3, r3, #2
 8001480:	6093      	str	r3, [r2, #8]
	while (!(RCC->CFGR & RCC_CFGR_SWS_PLL));
 8001482:	bf00      	nop
 8001484:	4b04      	ldr	r3, [pc, #16]	; (8001498 <clock_init+0x84>)
 8001486:	689b      	ldr	r3, [r3, #8]
 8001488:	f003 0308 	and.w	r3, r3, #8
 800148c:	2b00      	cmp	r3, #0
 800148e:	d0f9      	beq.n	8001484 <clock_init+0x70>
	
	SystemCoreClockUpdate();
 8001490:	f000 fa34 	bl	80018fc <SystemCoreClockUpdate>
}
 8001494:	bf00      	nop
 8001496:	bd80      	pop	{r7, pc}
 8001498:	40023800 	.word	0x40023800
 800149c:	40023c00 	.word	0x40023c00
 80014a0:	00416419 	.word	0x00416419

080014a4 <systick_init>:

void systick_init(void)
{
 80014a4:	b580      	push	{r7, lr}
 80014a6:	af00      	add	r7, sp, #0

	SysTick->CTRL |= SysTick_CTRL_ENABLE_Msk;
 80014a8:	4a11      	ldr	r2, [pc, #68]	; (80014f0 <systick_init+0x4c>)
 80014aa:	4b11      	ldr	r3, [pc, #68]	; (80014f0 <systick_init+0x4c>)
 80014ac:	681b      	ldr	r3, [r3, #0]
 80014ae:	f043 0301 	orr.w	r3, r3, #1
 80014b2:	6013      	str	r3, [r2, #0]
	SysTick->LOAD = 62500;                   			 //5ms
 80014b4:	4b0e      	ldr	r3, [pc, #56]	; (80014f0 <systick_init+0x4c>)
 80014b6:	f24f 4224 	movw	r2, #62500	; 0xf424
 80014ba:	605a      	str	r2, [r3, #4]
	SysTick->VAL=0;
 80014bc:	4b0c      	ldr	r3, [pc, #48]	; (80014f0 <systick_init+0x4c>)
 80014be:	2200      	movs	r2, #0
 80014c0:	609a      	str	r2, [r3, #8]
	SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
 80014c2:	4a0b      	ldr	r2, [pc, #44]	; (80014f0 <systick_init+0x4c>)
 80014c4:	4b0a      	ldr	r3, [pc, #40]	; (80014f0 <systick_init+0x4c>)
 80014c6:	681b      	ldr	r3, [r3, #0]
 80014c8:	f043 0302 	orr.w	r3, r3, #2
 80014cc:	6013      	str	r3, [r2, #0]
	SysTick->CTRL &= ~(1<<2);                           //Systick clock source = AHB/8
 80014ce:	4a08      	ldr	r2, [pc, #32]	; (80014f0 <systick_init+0x4c>)
 80014d0:	4b07      	ldr	r3, [pc, #28]	; (80014f0 <systick_init+0x4c>)
 80014d2:	681b      	ldr	r3, [r3, #0]
 80014d4:	f023 0304 	bic.w	r3, r3, #4
 80014d8:	6013      	str	r3, [r2, #0]
	NVIC_EnableIRQ(SysTick_IRQn);
 80014da:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80014de:	f7ff ff55 	bl	800138c <NVIC_EnableIRQ>
	NVIC_SetPriority (SysTick_IRQn,0x01);  				//(1UL << __NVIC_PRIO_BITS) - 1UL
 80014e2:	2101      	movs	r1, #1
 80014e4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80014e8:	f7ff ff6a 	bl	80013c0 <NVIC_SetPriority>

}
 80014ec:	bf00      	nop
 80014ee:	bd80      	pop	{r7, pc}
 80014f0:	e000e010 	.word	0xe000e010

080014f4 <SysTick_Handler>:

	
void SysTick_Handler(void)
{
 80014f4:	b580      	push	{r7, lr}
 80014f6:	af00      	add	r7, sp, #0
	MPU_read_eulers(&mpu6050,&roll,&pitch,&yaw);  // this function will be invoked every 5ms
 80014f8:	4b03      	ldr	r3, [pc, #12]	; (8001508 <SysTick_Handler+0x14>)
 80014fa:	4a04      	ldr	r2, [pc, #16]	; (800150c <SysTick_Handler+0x18>)
 80014fc:	4904      	ldr	r1, [pc, #16]	; (8001510 <SysTick_Handler+0x1c>)
 80014fe:	4805      	ldr	r0, [pc, #20]	; (8001514 <SysTick_Handler+0x20>)
 8001500:	f7ff fba6 	bl	8000c50 <MPU_read_eulers>
}
 8001504:	bf00      	nop
 8001506:	bd80      	pop	{r7, pc}
 8001508:	20000108 	.word	0x20000108
 800150c:	2000010c 	.word	0x2000010c
 8001510:	20000110 	.word	0x20000110
 8001514:	20000090 	.word	0x20000090

08001518 <i2c_init>:
#include "stm32f4xx.h"
#include "i2c.h"

void i2c_init(void)
{
 8001518:	b480      	push	{r7}
 800151a:	af00      	add	r7, sp, #0

	RCC->APB1ENR |= (1<<21);   //turn on I2C bus clock
 800151c:	4a2c      	ldr	r2, [pc, #176]	; (80015d0 <i2c_init+0xb8>)
 800151e:	4b2c      	ldr	r3, [pc, #176]	; (80015d0 <i2c_init+0xb8>)
 8001520:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001522:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001526:	6413      	str	r3, [r2, #64]	; 0x40
	RCC->AHB1ENR |= (1<<1);    //turn on I2C pin's GPIO bus clock
 8001528:	4a29      	ldr	r2, [pc, #164]	; (80015d0 <i2c_init+0xb8>)
 800152a:	4b29      	ldr	r3, [pc, #164]	; (80015d0 <i2c_init+0xb8>)
 800152c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800152e:	f043 0302 	orr.w	r3, r3, #2
 8001532:	6313      	str	r3, [r2, #48]	; 0x30
	
	GPIOB->MODER |= (2<<12) | (2<<14);    // Set PB6 and PB7 as alternate function
 8001534:	4a27      	ldr	r2, [pc, #156]	; (80015d4 <i2c_init+0xbc>)
 8001536:	4b27      	ldr	r3, [pc, #156]	; (80015d4 <i2c_init+0xbc>)
 8001538:	681b      	ldr	r3, [r3, #0]
 800153a:	f443 4320 	orr.w	r3, r3, #40960	; 0xa000
 800153e:	6013      	str	r3, [r2, #0]
	GPIOB->OTYPER |= (1<<6) | (1<<7);     // set PB6 and PB7 as open drain
 8001540:	4a24      	ldr	r2, [pc, #144]	; (80015d4 <i2c_init+0xbc>)
 8001542:	4b24      	ldr	r3, [pc, #144]	; (80015d4 <i2c_init+0xbc>)
 8001544:	685b      	ldr	r3, [r3, #4]
 8001546:	f043 03c0 	orr.w	r3, r3, #192	; 0xc0
 800154a:	6053      	str	r3, [r2, #4]
	GPIOB->OSPEEDR |= (3<<12) |(3<<14);   // PB6 VE PB7 output freq is HIGH
 800154c:	4a21      	ldr	r2, [pc, #132]	; (80015d4 <i2c_init+0xbc>)
 800154e:	4b21      	ldr	r3, [pc, #132]	; (80015d4 <i2c_init+0xbc>)
 8001550:	689b      	ldr	r3, [r3, #8]
 8001552:	f443 4370 	orr.w	r3, r3, #61440	; 0xf000
 8001556:	6093      	str	r3, [r2, #8]
	GPIOB->PUPDR |= (1<<12) | (1<<14);    // Enable pullup
 8001558:	4a1e      	ldr	r2, [pc, #120]	; (80015d4 <i2c_init+0xbc>)
 800155a:	4b1e      	ldr	r3, [pc, #120]	; (80015d4 <i2c_init+0xbc>)
 800155c:	68db      	ldr	r3, [r3, #12]
 800155e:	f443 43a0 	orr.w	r3, r3, #20480	; 0x5000
 8001562:	60d3      	str	r3, [r2, #12]
	GPIOB->AFR[0] |= (4<<24) | (4<<28);   // Set afr
 8001564:	4a1b      	ldr	r2, [pc, #108]	; (80015d4 <i2c_init+0xbc>)
 8001566:	4b1b      	ldr	r3, [pc, #108]	; (80015d4 <i2c_init+0xbc>)
 8001568:	6a1b      	ldr	r3, [r3, #32]
 800156a:	f043 4388 	orr.w	r3, r3, #1140850688	; 0x44000000
 800156e:	6213      	str	r3, [r2, #32]
	
	I2C1->CR1 |=  (1<<15);  //reset i2c
 8001570:	4a19      	ldr	r2, [pc, #100]	; (80015d8 <i2c_init+0xc0>)
 8001572:	4b19      	ldr	r3, [pc, #100]	; (80015d8 <i2c_init+0xc0>)
 8001574:	681b      	ldr	r3, [r3, #0]
 8001576:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800157a:	6013      	str	r3, [r2, #0]
	I2C1->CR1 &= ~(1<<15);  // disable reset
 800157c:	4a16      	ldr	r2, [pc, #88]	; (80015d8 <i2c_init+0xc0>)
 800157e:	4b16      	ldr	r3, [pc, #88]	; (80015d8 <i2c_init+0xc0>)
 8001580:	681b      	ldr	r3, [r3, #0]
 8001582:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8001586:	6013      	str	r3, [r2, #0]
	
	// Program the peripheral input clock in I2C_CR2 Register in order to generate correct timings
	I2C1->CR2 |= (50<<0);  // PCLK1 FREQUENCY in MHz
 8001588:	4a13      	ldr	r2, [pc, #76]	; (80015d8 <i2c_init+0xc0>)
 800158a:	4b13      	ldr	r3, [pc, #76]	; (80015d8 <i2c_init+0xc0>)
 800158c:	685b      	ldr	r3, [r3, #4]
 800158e:	f043 0332 	orr.w	r3, r3, #50	; 0x32
 8001592:	6053      	str	r3, [r2, #4]
	
	// Configure the clock control registers
	I2C1->CCR = 250<<0;
 8001594:	4b10      	ldr	r3, [pc, #64]	; (80015d8 <i2c_init+0xc0>)
 8001596:	22fa      	movs	r2, #250	; 0xfa
 8001598:	61da      	str	r2, [r3, #28]
	// Configure the rise time register
	I2C1->TRISE = 51;
 800159a:	4b0f      	ldr	r3, [pc, #60]	; (80015d8 <i2c_init+0xc0>)
 800159c:	2233      	movs	r2, #51	; 0x33
 800159e:	621a      	str	r2, [r3, #32]

	
	// Configure the clock control registers
	I2C1->CCR |= (1<<15); // fast mode
 80015a0:	4a0d      	ldr	r2, [pc, #52]	; (80015d8 <i2c_init+0xc0>)
 80015a2:	4b0d      	ldr	r3, [pc, #52]	; (80015d8 <i2c_init+0xc0>)
 80015a4:	69db      	ldr	r3, [r3, #28]
 80015a6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80015aa:	61d3      	str	r3, [r2, #28]
	I2C1->CCR &= ~(1<<14); // duty 1
 80015ac:	4a0a      	ldr	r2, [pc, #40]	; (80015d8 <i2c_init+0xc0>)
 80015ae:	4b0a      	ldr	r3, [pc, #40]	; (80015d8 <i2c_init+0xc0>)
 80015b0:	69db      	ldr	r3, [r3, #28]
 80015b2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80015b6:	61d3      	str	r3, [r2, #28]

	
	I2C1->CR1 |= (1<<0);  // Enable I2C
 80015b8:	4a07      	ldr	r2, [pc, #28]	; (80015d8 <i2c_init+0xc0>)
 80015ba:	4b07      	ldr	r3, [pc, #28]	; (80015d8 <i2c_init+0xc0>)
 80015bc:	681b      	ldr	r3, [r3, #0]
 80015be:	f043 0301 	orr.w	r3, r3, #1
 80015c2:	6013      	str	r3, [r2, #0]
	
}
 80015c4:	bf00      	nop
 80015c6:	46bd      	mov	sp, r7
 80015c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015cc:	4770      	bx	lr
 80015ce:	bf00      	nop
 80015d0:	40023800 	.word	0x40023800
 80015d4:	40020400 	.word	0x40020400
 80015d8:	40005400 	.word	0x40005400

080015dc <i2c_start>:

void i2c_start (void)
{
 80015dc:	b480      	push	{r7}
 80015de:	af00      	add	r7, sp, #0
	I2C1->CR1 |= (1<<10);  			// Enable the ACK
 80015e0:	4a0b      	ldr	r2, [pc, #44]	; (8001610 <i2c_start+0x34>)
 80015e2:	4b0b      	ldr	r3, [pc, #44]	; (8001610 <i2c_start+0x34>)
 80015e4:	681b      	ldr	r3, [r3, #0]
 80015e6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80015ea:	6013      	str	r3, [r2, #0]
	I2C1->CR1 |= (1<<8);  			// Generate START
 80015ec:	4a08      	ldr	r2, [pc, #32]	; (8001610 <i2c_start+0x34>)
 80015ee:	4b08      	ldr	r3, [pc, #32]	; (8001610 <i2c_start+0x34>)
 80015f0:	681b      	ldr	r3, [r3, #0]
 80015f2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80015f6:	6013      	str	r3, [r2, #0]
	while (!(I2C1->SR1 & (1<<0)));  // Wait for SB bit to set
 80015f8:	bf00      	nop
 80015fa:	4b05      	ldr	r3, [pc, #20]	; (8001610 <i2c_start+0x34>)
 80015fc:	695b      	ldr	r3, [r3, #20]
 80015fe:	f003 0301 	and.w	r3, r3, #1
 8001602:	2b00      	cmp	r3, #0
 8001604:	d0f9      	beq.n	80015fa <i2c_start+0x1e>
}
 8001606:	bf00      	nop
 8001608:	46bd      	mov	sp, r7
 800160a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800160e:	4770      	bx	lr
 8001610:	40005400 	.word	0x40005400

08001614 <i2c_write>:

void i2c_write (uint8_t data)
{	
 8001614:	b480      	push	{r7}
 8001616:	b083      	sub	sp, #12
 8001618:	af00      	add	r7, sp, #0
 800161a:	4603      	mov	r3, r0
 800161c:	71fb      	strb	r3, [r7, #7]
	while (!(I2C1->SR1 & (1<<7)));  // wait for TXE bit to set
 800161e:	bf00      	nop
 8001620:	4b0a      	ldr	r3, [pc, #40]	; (800164c <i2c_write+0x38>)
 8001622:	695b      	ldr	r3, [r3, #20]
 8001624:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001628:	2b00      	cmp	r3, #0
 800162a:	d0f9      	beq.n	8001620 <i2c_write+0xc>
	I2C1->DR = data;
 800162c:	4a07      	ldr	r2, [pc, #28]	; (800164c <i2c_write+0x38>)
 800162e:	79fb      	ldrb	r3, [r7, #7]
 8001630:	6113      	str	r3, [r2, #16]
	while (!(I2C1->SR1 & (1<<2)));  // wait for BTF bit to set
 8001632:	bf00      	nop
 8001634:	4b05      	ldr	r3, [pc, #20]	; (800164c <i2c_write+0x38>)
 8001636:	695b      	ldr	r3, [r3, #20]
 8001638:	f003 0304 	and.w	r3, r3, #4
 800163c:	2b00      	cmp	r3, #0
 800163e:	d0f9      	beq.n	8001634 <i2c_write+0x20>
}
 8001640:	bf00      	nop
 8001642:	370c      	adds	r7, #12
 8001644:	46bd      	mov	sp, r7
 8001646:	f85d 7b04 	ldr.w	r7, [sp], #4
 800164a:	4770      	bx	lr
 800164c:	40005400 	.word	0x40005400

08001650 <i2c_address>:

void i2c_address (uint8_t Address)
{
 8001650:	b480      	push	{r7}
 8001652:	b085      	sub	sp, #20
 8001654:	af00      	add	r7, sp, #0
 8001656:	4603      	mov	r3, r0
 8001658:	71fb      	strb	r3, [r7, #7]
	I2C1->DR = Address;  					// send the address
 800165a:	4a0c      	ldr	r2, [pc, #48]	; (800168c <i2c_address+0x3c>)
 800165c:	79fb      	ldrb	r3, [r7, #7]
 800165e:	6113      	str	r3, [r2, #16]

	while (!(I2C1->SR1 & (1<<1)));  		// wait for ADDR bit to set
 8001660:	bf00      	nop
 8001662:	4b0a      	ldr	r3, [pc, #40]	; (800168c <i2c_address+0x3c>)
 8001664:	695b      	ldr	r3, [r3, #20]
 8001666:	f003 0302 	and.w	r3, r3, #2
 800166a:	2b00      	cmp	r3, #0
 800166c:	d0f9      	beq.n	8001662 <i2c_address+0x12>
	uint8_t temp = I2C1->SR1 | I2C1->SR2;  	// read SR1 and SR2 to clear the ADDR bit
 800166e:	4b07      	ldr	r3, [pc, #28]	; (800168c <i2c_address+0x3c>)
 8001670:	695b      	ldr	r3, [r3, #20]
 8001672:	b2da      	uxtb	r2, r3
 8001674:	4b05      	ldr	r3, [pc, #20]	; (800168c <i2c_address+0x3c>)
 8001676:	699b      	ldr	r3, [r3, #24]
 8001678:	b2db      	uxtb	r3, r3
 800167a:	4313      	orrs	r3, r2
 800167c:	73fb      	strb	r3, [r7, #15]
}
 800167e:	bf00      	nop
 8001680:	3714      	adds	r7, #20
 8001682:	46bd      	mov	sp, r7
 8001684:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001688:	4770      	bx	lr
 800168a:	bf00      	nop
 800168c:	40005400 	.word	0x40005400

08001690 <i2c_stop>:

void i2c_stop (void)
{
 8001690:	b480      	push	{r7}
 8001692:	af00      	add	r7, sp, #0
	I2C1->CR1 |= (1<<9);  // Stop I2C
 8001694:	4a05      	ldr	r2, [pc, #20]	; (80016ac <i2c_stop+0x1c>)
 8001696:	4b05      	ldr	r3, [pc, #20]	; (80016ac <i2c_stop+0x1c>)
 8001698:	681b      	ldr	r3, [r3, #0]
 800169a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800169e:	6013      	str	r3, [r2, #0]
}
 80016a0:	bf00      	nop
 80016a2:	46bd      	mov	sp, r7
 80016a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016a8:	4770      	bx	lr
 80016aa:	bf00      	nop
 80016ac:	40005400 	.word	0x40005400

080016b0 <i2c_read>:
	i2c_stop();
	return data;
}

void i2c_read (uint8_t Address, uint8_t *buffer, uint8_t size)
{
 80016b0:	b480      	push	{r7}
 80016b2:	b085      	sub	sp, #20
 80016b4:	af00      	add	r7, sp, #0
 80016b6:	4603      	mov	r3, r0
 80016b8:	6039      	str	r1, [r7, #0]
 80016ba:	71fb      	strb	r3, [r7, #7]
 80016bc:	4613      	mov	r3, r2
 80016be:	71bb      	strb	r3, [r7, #6]
		
	int remaining = size;
 80016c0:	79bb      	ldrb	r3, [r7, #6]
 80016c2:	60fb      	str	r3, [r7, #12]
	
	if (size == 1)
 80016c4:	79bb      	ldrb	r3, [r7, #6]
 80016c6:	2b01      	cmp	r3, #1
 80016c8:	d12f      	bne.n	800172a <i2c_read+0x7a>
	{
		I2C1->DR = Address;  //  send the address
 80016ca:	4a4b      	ldr	r2, [pc, #300]	; (80017f8 <i2c_read+0x148>)
 80016cc:	79fb      	ldrb	r3, [r7, #7]
 80016ce:	6113      	str	r3, [r2, #16]
		while (!(I2C1->SR1 & (1<<1)));  // wait for ADDR bit to set
 80016d0:	bf00      	nop
 80016d2:	4b49      	ldr	r3, [pc, #292]	; (80017f8 <i2c_read+0x148>)
 80016d4:	695b      	ldr	r3, [r3, #20]
 80016d6:	f003 0302 	and.w	r3, r3, #2
 80016da:	2b00      	cmp	r3, #0
 80016dc:	d0f9      	beq.n	80016d2 <i2c_read+0x22>
		
		I2C1->CR1 &= ~(1<<10);  // clear the ACK bit 
 80016de:	4a46      	ldr	r2, [pc, #280]	; (80017f8 <i2c_read+0x148>)
 80016e0:	4b45      	ldr	r3, [pc, #276]	; (80017f8 <i2c_read+0x148>)
 80016e2:	681b      	ldr	r3, [r3, #0]
 80016e4:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80016e8:	6013      	str	r3, [r2, #0]
		uint8_t temp = I2C1->SR1 | I2C1->SR2;  // read SR1 and SR2 to clear the ADDR bit.... EV6 condition
 80016ea:	4b43      	ldr	r3, [pc, #268]	; (80017f8 <i2c_read+0x148>)
 80016ec:	695b      	ldr	r3, [r3, #20]
 80016ee:	b2da      	uxtb	r2, r3
 80016f0:	4b41      	ldr	r3, [pc, #260]	; (80017f8 <i2c_read+0x148>)
 80016f2:	699b      	ldr	r3, [r3, #24]
 80016f4:	b2db      	uxtb	r3, r3
 80016f6:	4313      	orrs	r3, r2
 80016f8:	72fb      	strb	r3, [r7, #11]
		I2C1->CR1 |= (1<<9);  // Stop I2C
 80016fa:	4a3f      	ldr	r2, [pc, #252]	; (80017f8 <i2c_read+0x148>)
 80016fc:	4b3e      	ldr	r3, [pc, #248]	; (80017f8 <i2c_read+0x148>)
 80016fe:	681b      	ldr	r3, [r3, #0]
 8001700:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001704:	6013      	str	r3, [r2, #0]

		while (!(I2C1->SR1 & (1<<6)));  // wait for RxNE to set
 8001706:	bf00      	nop
 8001708:	4b3b      	ldr	r3, [pc, #236]	; (80017f8 <i2c_read+0x148>)
 800170a:	695b      	ldr	r3, [r3, #20]
 800170c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001710:	2b00      	cmp	r3, #0
 8001712:	d0f9      	beq.n	8001708 <i2c_read+0x58>
		
		buffer[size-remaining] = I2C1->DR;  // Read the data from the DATA REGISTER
 8001714:	79ba      	ldrb	r2, [r7, #6]
 8001716:	68fb      	ldr	r3, [r7, #12]
 8001718:	1ad3      	subs	r3, r2, r3
 800171a:	461a      	mov	r2, r3
 800171c:	683b      	ldr	r3, [r7, #0]
 800171e:	4413      	add	r3, r2
 8001720:	4a35      	ldr	r2, [pc, #212]	; (80017f8 <i2c_read+0x148>)
 8001722:	6912      	ldr	r2, [r2, #16]
 8001724:	b2d2      	uxtb	r2, r2
 8001726:	701a      	strb	r2, [r3, #0]
		// Read the Last BYTE
		while (!(I2C1->SR1 & (1<<6)));  // wait for RxNE to set
		buffer[size-remaining] = I2C1->DR;  // copy the data into the buffer
	}	
	
}
 8001728:	e060      	b.n	80017ec <i2c_read+0x13c>
		I2C1->DR = Address;  //  send the address
 800172a:	4a33      	ldr	r2, [pc, #204]	; (80017f8 <i2c_read+0x148>)
 800172c:	79fb      	ldrb	r3, [r7, #7]
 800172e:	6113      	str	r3, [r2, #16]
		while (!(I2C1->SR1 & (1<<1)));  // wait for ADDR bit to set
 8001730:	bf00      	nop
 8001732:	4b31      	ldr	r3, [pc, #196]	; (80017f8 <i2c_read+0x148>)
 8001734:	695b      	ldr	r3, [r3, #20]
 8001736:	f003 0302 	and.w	r3, r3, #2
 800173a:	2b00      	cmp	r3, #0
 800173c:	d0f9      	beq.n	8001732 <i2c_read+0x82>
		uint8_t temp = I2C1->SR1 | I2C1->SR2;  // read SR1 and SR2 to clear the ADDR bit
 800173e:	4b2e      	ldr	r3, [pc, #184]	; (80017f8 <i2c_read+0x148>)
 8001740:	695b      	ldr	r3, [r3, #20]
 8001742:	b2da      	uxtb	r2, r3
 8001744:	4b2c      	ldr	r3, [pc, #176]	; (80017f8 <i2c_read+0x148>)
 8001746:	699b      	ldr	r3, [r3, #24]
 8001748:	b2db      	uxtb	r3, r3
 800174a:	4313      	orrs	r3, r2
 800174c:	72bb      	strb	r3, [r7, #10]
		while (remaining>2)
 800174e:	e019      	b.n	8001784 <i2c_read+0xd4>
			while (!(I2C1->SR1 & (1<<6)));  // wait for RxNE to set
 8001750:	bf00      	nop
 8001752:	4b29      	ldr	r3, [pc, #164]	; (80017f8 <i2c_read+0x148>)
 8001754:	695b      	ldr	r3, [r3, #20]
 8001756:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800175a:	2b00      	cmp	r3, #0
 800175c:	d0f9      	beq.n	8001752 <i2c_read+0xa2>
			buffer[size-remaining] = I2C1->DR;  // copy the data into the buffer			
 800175e:	79ba      	ldrb	r2, [r7, #6]
 8001760:	68fb      	ldr	r3, [r7, #12]
 8001762:	1ad3      	subs	r3, r2, r3
 8001764:	461a      	mov	r2, r3
 8001766:	683b      	ldr	r3, [r7, #0]
 8001768:	4413      	add	r3, r2
 800176a:	4a23      	ldr	r2, [pc, #140]	; (80017f8 <i2c_read+0x148>)
 800176c:	6912      	ldr	r2, [r2, #16]
 800176e:	b2d2      	uxtb	r2, r2
 8001770:	701a      	strb	r2, [r3, #0]
			I2C1->CR1 |= 1<<10;  // Set the ACK bit to Acknowledge the data received
 8001772:	4a21      	ldr	r2, [pc, #132]	; (80017f8 <i2c_read+0x148>)
 8001774:	4b20      	ldr	r3, [pc, #128]	; (80017f8 <i2c_read+0x148>)
 8001776:	681b      	ldr	r3, [r3, #0]
 8001778:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800177c:	6013      	str	r3, [r2, #0]
			remaining--;
 800177e:	68fb      	ldr	r3, [r7, #12]
 8001780:	3b01      	subs	r3, #1
 8001782:	60fb      	str	r3, [r7, #12]
		while (remaining>2)
 8001784:	68fb      	ldr	r3, [r7, #12]
 8001786:	2b02      	cmp	r3, #2
 8001788:	dce2      	bgt.n	8001750 <i2c_read+0xa0>
		while (!(I2C1->SR1 & (1<<6)));  // wait for RxNE to set
 800178a:	bf00      	nop
 800178c:	4b1a      	ldr	r3, [pc, #104]	; (80017f8 <i2c_read+0x148>)
 800178e:	695b      	ldr	r3, [r3, #20]
 8001790:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001794:	2b00      	cmp	r3, #0
 8001796:	d0f9      	beq.n	800178c <i2c_read+0xdc>
		buffer[size-remaining] = I2C1->DR;
 8001798:	79ba      	ldrb	r2, [r7, #6]
 800179a:	68fb      	ldr	r3, [r7, #12]
 800179c:	1ad3      	subs	r3, r2, r3
 800179e:	461a      	mov	r2, r3
 80017a0:	683b      	ldr	r3, [r7, #0]
 80017a2:	4413      	add	r3, r2
 80017a4:	4a14      	ldr	r2, [pc, #80]	; (80017f8 <i2c_read+0x148>)
 80017a6:	6912      	ldr	r2, [r2, #16]
 80017a8:	b2d2      	uxtb	r2, r2
 80017aa:	701a      	strb	r2, [r3, #0]
		I2C1->CR1 &= ~(1<<10);  // clear the ACK bit 
 80017ac:	4a12      	ldr	r2, [pc, #72]	; (80017f8 <i2c_read+0x148>)
 80017ae:	4b12      	ldr	r3, [pc, #72]	; (80017f8 <i2c_read+0x148>)
 80017b0:	681b      	ldr	r3, [r3, #0]
 80017b2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80017b6:	6013      	str	r3, [r2, #0]
		I2C1->CR1 |= (1<<9);  // Stop I2C
 80017b8:	4a0f      	ldr	r2, [pc, #60]	; (80017f8 <i2c_read+0x148>)
 80017ba:	4b0f      	ldr	r3, [pc, #60]	; (80017f8 <i2c_read+0x148>)
 80017bc:	681b      	ldr	r3, [r3, #0]
 80017be:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80017c2:	6013      	str	r3, [r2, #0]
		remaining--;
 80017c4:	68fb      	ldr	r3, [r7, #12]
 80017c6:	3b01      	subs	r3, #1
 80017c8:	60fb      	str	r3, [r7, #12]
		while (!(I2C1->SR1 & (1<<6)));  // wait for RxNE to set
 80017ca:	bf00      	nop
 80017cc:	4b0a      	ldr	r3, [pc, #40]	; (80017f8 <i2c_read+0x148>)
 80017ce:	695b      	ldr	r3, [r3, #20]
 80017d0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80017d4:	2b00      	cmp	r3, #0
 80017d6:	d0f9      	beq.n	80017cc <i2c_read+0x11c>
		buffer[size-remaining] = I2C1->DR;  // copy the data into the buffer
 80017d8:	79ba      	ldrb	r2, [r7, #6]
 80017da:	68fb      	ldr	r3, [r7, #12]
 80017dc:	1ad3      	subs	r3, r2, r3
 80017de:	461a      	mov	r2, r3
 80017e0:	683b      	ldr	r3, [r7, #0]
 80017e2:	4413      	add	r3, r2
 80017e4:	4a04      	ldr	r2, [pc, #16]	; (80017f8 <i2c_read+0x148>)
 80017e6:	6912      	ldr	r2, [r2, #16]
 80017e8:	b2d2      	uxtb	r2, r2
 80017ea:	701a      	strb	r2, [r3, #0]
}
 80017ec:	bf00      	nop
 80017ee:	3714      	adds	r7, #20
 80017f0:	46bd      	mov	sp, r7
 80017f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017f6:	4770      	bx	lr
 80017f8:	40005400 	.word	0x40005400

080017fc <main>:
**  Abstract: main program
**
**===========================================================================
*/
int main(void)
{
 80017fc:	b580      	push	{r7, lr}
 80017fe:	b082      	sub	sp, #8
 8001800:	af00      	add	r7, sp, #0
	clock_init();
 8001802:	f7ff fe07 	bl	8001414 <clock_init>
	i2c_init();
 8001806:	f7ff fe87 	bl	8001518 <i2c_init>
	mpu6050.set_gyro_angles=0;
 800180a:	4b0a      	ldr	r3, [pc, #40]	; (8001834 <main+0x38>)
 800180c:	2200      	movs	r2, #0
 800180e:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
	MPU6050_init();
 8001812:	f7ff f9ed 	bl	8000bf0 <MPU6050_init>
	MPU6050_callibration(&mpu6050,iteration);
 8001816:	4b08      	ldr	r3, [pc, #32]	; (8001838 <main+0x3c>)
 8001818:	681b      	ldr	r3, [r3, #0]
 800181a:	4619      	mov	r1, r3
 800181c:	4805      	ldr	r0, [pc, #20]	; (8001834 <main+0x38>)
 800181e:	f7ff fcb3 	bl	8001188 <MPU6050_callibration>
	systick_init();
 8001822:	f7ff fe3f 	bl	80014a4 <systick_init>

	int i = 0;
 8001826:	2300      	movs	r3, #0
 8001828:	607b      	str	r3, [r7, #4]


	while (1)
	{
		i++;
 800182a:	687b      	ldr	r3, [r7, #4]
 800182c:	3301      	adds	r3, #1
 800182e:	607b      	str	r3, [r7, #4]
 8001830:	e7fb      	b.n	800182a <main+0x2e>
 8001832:	bf00      	nop
 8001834:	20000090 	.word	0x20000090
 8001838:	20000000 	.word	0x20000000

0800183c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 800183c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001874 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8001840:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8001842:	e003      	b.n	800184c <LoopCopyDataInit>

08001844 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8001844:	4b0c      	ldr	r3, [pc, #48]	; (8001878 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8001846:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001848:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800184a:	3104      	adds	r1, #4

0800184c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800184c:	480b      	ldr	r0, [pc, #44]	; (800187c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800184e:	4b0c      	ldr	r3, [pc, #48]	; (8001880 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8001850:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8001852:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001854:	d3f6      	bcc.n	8001844 <CopyDataInit>
  ldr  r2, =_sbss
 8001856:	4a0b      	ldr	r2, [pc, #44]	; (8001884 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001858:	e002      	b.n	8001860 <LoopFillZerobss>

0800185a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800185a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800185c:	f842 3b04 	str.w	r3, [r2], #4

08001860 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001860:	4b09      	ldr	r3, [pc, #36]	; (8001888 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8001862:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001864:	d3f9      	bcc.n	800185a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8001866:	f000 f813 	bl	8001890 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800186a:	f000 f8c1 	bl	80019f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800186e:	f7ff ffc5 	bl	80017fc <main>
  bx  lr    
 8001872:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8001874:	20020000 	.word	0x20020000
  ldr  r3, =_sidata
 8001878:	080030b8 	.word	0x080030b8
  ldr  r0, =_sdata
 800187c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8001880:	20000070 	.word	0x20000070
  ldr  r2, =_sbss
 8001884:	20000070 	.word	0x20000070
  ldr  r3, = _ebss
 8001888:	20000114 	.word	0x20000114

0800188c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 800188c:	e7fe      	b.n	800188c <ADC_IRQHandler>
	...

08001890 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001890:	b480      	push	{r7}
 8001892:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001894:	4a16      	ldr	r2, [pc, #88]	; (80018f0 <SystemInit+0x60>)
 8001896:	4b16      	ldr	r3, [pc, #88]	; (80018f0 <SystemInit+0x60>)
 8001898:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800189c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80018a0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 80018a4:	4a13      	ldr	r2, [pc, #76]	; (80018f4 <SystemInit+0x64>)
 80018a6:	4b13      	ldr	r3, [pc, #76]	; (80018f4 <SystemInit+0x64>)
 80018a8:	681b      	ldr	r3, [r3, #0]
 80018aa:	f043 0301 	orr.w	r3, r3, #1
 80018ae:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 80018b0:	4b10      	ldr	r3, [pc, #64]	; (80018f4 <SystemInit+0x64>)
 80018b2:	2200      	movs	r2, #0
 80018b4:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 80018b6:	4a0f      	ldr	r2, [pc, #60]	; (80018f4 <SystemInit+0x64>)
 80018b8:	4b0e      	ldr	r3, [pc, #56]	; (80018f4 <SystemInit+0x64>)
 80018ba:	681b      	ldr	r3, [r3, #0]
 80018bc:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 80018c0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80018c4:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 80018c6:	4b0b      	ldr	r3, [pc, #44]	; (80018f4 <SystemInit+0x64>)
 80018c8:	4a0b      	ldr	r2, [pc, #44]	; (80018f8 <SystemInit+0x68>)
 80018ca:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 80018cc:	4a09      	ldr	r2, [pc, #36]	; (80018f4 <SystemInit+0x64>)
 80018ce:	4b09      	ldr	r3, [pc, #36]	; (80018f4 <SystemInit+0x64>)
 80018d0:	681b      	ldr	r3, [r3, #0]
 80018d2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80018d6:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 80018d8:	4b06      	ldr	r3, [pc, #24]	; (80018f4 <SystemInit+0x64>)
 80018da:	2200      	movs	r2, #0
 80018dc:	60da      	str	r2, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80018de:	4b04      	ldr	r3, [pc, #16]	; (80018f0 <SystemInit+0x60>)
 80018e0:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80018e4:	609a      	str	r2, [r3, #8]
#endif
}
 80018e6:	bf00      	nop
 80018e8:	46bd      	mov	sp, r7
 80018ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018ee:	4770      	bx	lr
 80018f0:	e000ed00 	.word	0xe000ed00
 80018f4:	40023800 	.word	0x40023800
 80018f8:	24003010 	.word	0x24003010

080018fc <SystemCoreClockUpdate>:
  *     
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
 80018fc:	b480      	push	{r7}
 80018fe:	b087      	sub	sp, #28
 8001900:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 8001902:	2300      	movs	r3, #0
 8001904:	613b      	str	r3, [r7, #16]
 8001906:	2300      	movs	r3, #0
 8001908:	617b      	str	r3, [r7, #20]
 800190a:	2302      	movs	r3, #2
 800190c:	60fb      	str	r3, [r7, #12]
 800190e:	2300      	movs	r3, #0
 8001910:	60bb      	str	r3, [r7, #8]
 8001912:	2302      	movs	r3, #2
 8001914:	607b      	str	r3, [r7, #4]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 8001916:	4b31      	ldr	r3, [pc, #196]	; (80019dc <SystemCoreClockUpdate+0xe0>)
 8001918:	689b      	ldr	r3, [r3, #8]
 800191a:	f003 030c 	and.w	r3, r3, #12
 800191e:	613b      	str	r3, [r7, #16]

  switch (tmp)
 8001920:	693b      	ldr	r3, [r7, #16]
 8001922:	2b04      	cmp	r3, #4
 8001924:	d007      	beq.n	8001936 <SystemCoreClockUpdate+0x3a>
 8001926:	2b08      	cmp	r3, #8
 8001928:	d009      	beq.n	800193e <SystemCoreClockUpdate+0x42>
 800192a:	2b00      	cmp	r3, #0
 800192c:	d13d      	bne.n	80019aa <SystemCoreClockUpdate+0xae>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 800192e:	4b2c      	ldr	r3, [pc, #176]	; (80019e0 <SystemCoreClockUpdate+0xe4>)
 8001930:	4a2c      	ldr	r2, [pc, #176]	; (80019e4 <SystemCoreClockUpdate+0xe8>)
 8001932:	601a      	str	r2, [r3, #0]
      break;
 8001934:	e03d      	b.n	80019b2 <SystemCoreClockUpdate+0xb6>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 8001936:	4b2a      	ldr	r3, [pc, #168]	; (80019e0 <SystemCoreClockUpdate+0xe4>)
 8001938:	4a2b      	ldr	r2, [pc, #172]	; (80019e8 <SystemCoreClockUpdate+0xec>)
 800193a:	601a      	str	r2, [r3, #0]
      break;
 800193c:	e039      	b.n	80019b2 <SystemCoreClockUpdate+0xb6>
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 800193e:	4b27      	ldr	r3, [pc, #156]	; (80019dc <SystemCoreClockUpdate+0xe0>)
 8001940:	685b      	ldr	r3, [r3, #4]
 8001942:	0d9b      	lsrs	r3, r3, #22
 8001944:	f003 0301 	and.w	r3, r3, #1
 8001948:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800194a:	4b24      	ldr	r3, [pc, #144]	; (80019dc <SystemCoreClockUpdate+0xe0>)
 800194c:	685b      	ldr	r3, [r3, #4]
 800194e:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8001952:	607b      	str	r3, [r7, #4]
      
      if (pllsource != 0)
 8001954:	68bb      	ldr	r3, [r7, #8]
 8001956:	2b00      	cmp	r3, #0
 8001958:	d00c      	beq.n	8001974 <SystemCoreClockUpdate+0x78>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 800195a:	4a23      	ldr	r2, [pc, #140]	; (80019e8 <SystemCoreClockUpdate+0xec>)
 800195c:	687b      	ldr	r3, [r7, #4]
 800195e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001962:	4a1e      	ldr	r2, [pc, #120]	; (80019dc <SystemCoreClockUpdate+0xe0>)
 8001964:	6852      	ldr	r2, [r2, #4]
 8001966:	0992      	lsrs	r2, r2, #6
 8001968:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800196c:	fb02 f303 	mul.w	r3, r2, r3
 8001970:	617b      	str	r3, [r7, #20]
 8001972:	e00b      	b.n	800198c <SystemCoreClockUpdate+0x90>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 8001974:	4a1b      	ldr	r2, [pc, #108]	; (80019e4 <SystemCoreClockUpdate+0xe8>)
 8001976:	687b      	ldr	r3, [r7, #4]
 8001978:	fbb2 f3f3 	udiv	r3, r2, r3
 800197c:	4a17      	ldr	r2, [pc, #92]	; (80019dc <SystemCoreClockUpdate+0xe0>)
 800197e:	6852      	ldr	r2, [r2, #4]
 8001980:	0992      	lsrs	r2, r2, #6
 8001982:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001986:	fb02 f303 	mul.w	r3, r2, r3
 800198a:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 800198c:	4b13      	ldr	r3, [pc, #76]	; (80019dc <SystemCoreClockUpdate+0xe0>)
 800198e:	685b      	ldr	r3, [r3, #4]
 8001990:	0c1b      	lsrs	r3, r3, #16
 8001992:	f003 0303 	and.w	r3, r3, #3
 8001996:	3301      	adds	r3, #1
 8001998:	005b      	lsls	r3, r3, #1
 800199a:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 800199c:	697a      	ldr	r2, [r7, #20]
 800199e:	68fb      	ldr	r3, [r7, #12]
 80019a0:	fbb2 f3f3 	udiv	r3, r2, r3
 80019a4:	4a0e      	ldr	r2, [pc, #56]	; (80019e0 <SystemCoreClockUpdate+0xe4>)
 80019a6:	6013      	str	r3, [r2, #0]
      break;
 80019a8:	e003      	b.n	80019b2 <SystemCoreClockUpdate+0xb6>
    default:
      SystemCoreClock = HSI_VALUE;
 80019aa:	4b0d      	ldr	r3, [pc, #52]	; (80019e0 <SystemCoreClockUpdate+0xe4>)
 80019ac:	4a0d      	ldr	r2, [pc, #52]	; (80019e4 <SystemCoreClockUpdate+0xe8>)
 80019ae:	601a      	str	r2, [r3, #0]
      break;
 80019b0:	bf00      	nop
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 80019b2:	4b0a      	ldr	r3, [pc, #40]	; (80019dc <SystemCoreClockUpdate+0xe0>)
 80019b4:	689b      	ldr	r3, [r3, #8]
 80019b6:	091b      	lsrs	r3, r3, #4
 80019b8:	f003 030f 	and.w	r3, r3, #15
 80019bc:	4a0b      	ldr	r2, [pc, #44]	; (80019ec <SystemCoreClockUpdate+0xf0>)
 80019be:	5cd3      	ldrb	r3, [r2, r3]
 80019c0:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 80019c2:	4b07      	ldr	r3, [pc, #28]	; (80019e0 <SystemCoreClockUpdate+0xe4>)
 80019c4:	681a      	ldr	r2, [r3, #0]
 80019c6:	693b      	ldr	r3, [r7, #16]
 80019c8:	fa22 f303 	lsr.w	r3, r2, r3
 80019cc:	4a04      	ldr	r2, [pc, #16]	; (80019e0 <SystemCoreClockUpdate+0xe4>)
 80019ce:	6013      	str	r3, [r2, #0]
}
 80019d0:	bf00      	nop
 80019d2:	371c      	adds	r7, #28
 80019d4:	46bd      	mov	sp, r7
 80019d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019da:	4770      	bx	lr
 80019dc:	40023800 	.word	0x40023800
 80019e0:	20000004 	.word	0x20000004
 80019e4:	00f42400 	.word	0x00f42400
 80019e8:	017d7840 	.word	0x017d7840
 80019ec:	08002eb8 	.word	0x08002eb8

080019f0 <__libc_init_array>:
 80019f0:	b570      	push	{r4, r5, r6, lr}
 80019f2:	4e0d      	ldr	r6, [pc, #52]	; (8001a28 <__libc_init_array+0x38>)
 80019f4:	4c0d      	ldr	r4, [pc, #52]	; (8001a2c <__libc_init_array+0x3c>)
 80019f6:	1ba4      	subs	r4, r4, r6
 80019f8:	10a4      	asrs	r4, r4, #2
 80019fa:	2500      	movs	r5, #0
 80019fc:	42a5      	cmp	r5, r4
 80019fe:	d109      	bne.n	8001a14 <__libc_init_array+0x24>
 8001a00:	4e0b      	ldr	r6, [pc, #44]	; (8001a30 <__libc_init_array+0x40>)
 8001a02:	4c0c      	ldr	r4, [pc, #48]	; (8001a34 <__libc_init_array+0x44>)
 8001a04:	f001 fa4c 	bl	8002ea0 <_init>
 8001a08:	1ba4      	subs	r4, r4, r6
 8001a0a:	10a4      	asrs	r4, r4, #2
 8001a0c:	2500      	movs	r5, #0
 8001a0e:	42a5      	cmp	r5, r4
 8001a10:	d105      	bne.n	8001a1e <__libc_init_array+0x2e>
 8001a12:	bd70      	pop	{r4, r5, r6, pc}
 8001a14:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001a18:	4798      	blx	r3
 8001a1a:	3501      	adds	r5, #1
 8001a1c:	e7ee      	b.n	80019fc <__libc_init_array+0xc>
 8001a1e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8001a22:	4798      	blx	r3
 8001a24:	3501      	adds	r5, #1
 8001a26:	e7f2      	b.n	8001a0e <__libc_init_array+0x1e>
 8001a28:	080030b0 	.word	0x080030b0
 8001a2c:	080030b0 	.word	0x080030b0
 8001a30:	080030b0 	.word	0x080030b0
 8001a34:	080030b4 	.word	0x080030b4

08001a38 <sin>:
 8001a38:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8001a3a:	ec51 0b10 	vmov	r0, r1, d0
 8001a3e:	4a20      	ldr	r2, [pc, #128]	; (8001ac0 <sin+0x88>)
 8001a40:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8001a44:	4293      	cmp	r3, r2
 8001a46:	dc07      	bgt.n	8001a58 <sin+0x20>
 8001a48:	ed9f 1b1b 	vldr	d1, [pc, #108]	; 8001ab8 <sin+0x80>
 8001a4c:	2000      	movs	r0, #0
 8001a4e:	f001 f83f 	bl	8002ad0 <__kernel_sin>
 8001a52:	ec51 0b10 	vmov	r0, r1, d0
 8001a56:	e007      	b.n	8001a68 <sin+0x30>
 8001a58:	4a1a      	ldr	r2, [pc, #104]	; (8001ac4 <sin+0x8c>)
 8001a5a:	4293      	cmp	r3, r2
 8001a5c:	dd09      	ble.n	8001a72 <sin+0x3a>
 8001a5e:	ee10 2a10 	vmov	r2, s0
 8001a62:	460b      	mov	r3, r1
 8001a64:	f7fe fbbc 	bl	80001e0 <__aeabi_dsub>
 8001a68:	ec41 0b10 	vmov	d0, r0, r1
 8001a6c:	b005      	add	sp, #20
 8001a6e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a72:	4668      	mov	r0, sp
 8001a74:	f000 f8d0 	bl	8001c18 <__ieee754_rem_pio2>
 8001a78:	f000 0003 	and.w	r0, r0, #3
 8001a7c:	2801      	cmp	r0, #1
 8001a7e:	ed9d 1b02 	vldr	d1, [sp, #8]
 8001a82:	ed9d 0b00 	vldr	d0, [sp]
 8001a86:	d004      	beq.n	8001a92 <sin+0x5a>
 8001a88:	2802      	cmp	r0, #2
 8001a8a:	d005      	beq.n	8001a98 <sin+0x60>
 8001a8c:	b970      	cbnz	r0, 8001aac <sin+0x74>
 8001a8e:	2001      	movs	r0, #1
 8001a90:	e7dd      	b.n	8001a4e <sin+0x16>
 8001a92:	f000 fbe5 	bl	8002260 <__kernel_cos>
 8001a96:	e7dc      	b.n	8001a52 <sin+0x1a>
 8001a98:	2001      	movs	r0, #1
 8001a9a:	f001 f819 	bl	8002ad0 <__kernel_sin>
 8001a9e:	ec53 2b10 	vmov	r2, r3, d0
 8001aa2:	ee10 0a10 	vmov	r0, s0
 8001aa6:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8001aaa:	e7dd      	b.n	8001a68 <sin+0x30>
 8001aac:	f000 fbd8 	bl	8002260 <__kernel_cos>
 8001ab0:	e7f5      	b.n	8001a9e <sin+0x66>
 8001ab2:	bf00      	nop
 8001ab4:	f3af 8000 	nop.w
	...
 8001ac0:	3fe921fb 	.word	0x3fe921fb
 8001ac4:	7fefffff 	.word	0x7fefffff

08001ac8 <asinf>:
 8001ac8:	b510      	push	{r4, lr}
 8001aca:	ed2d 8b02 	vpush	{d8}
 8001ace:	4c27      	ldr	r4, [pc, #156]	; (8001b6c <asinf+0xa4>)
 8001ad0:	b08a      	sub	sp, #40	; 0x28
 8001ad2:	eeb0 8a40 	vmov.f32	s16, s0
 8001ad6:	f000 fa91 	bl	8001ffc <__ieee754_asinf>
 8001ada:	f994 3000 	ldrsb.w	r3, [r4]
 8001ade:	3301      	adds	r3, #1
 8001ae0:	eef0 8a40 	vmov.f32	s17, s0
 8001ae4:	d03c      	beq.n	8001b60 <asinf+0x98>
 8001ae6:	eeb4 8a48 	vcmp.f32	s16, s16
 8001aea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001aee:	d637      	bvs.n	8001b60 <asinf+0x98>
 8001af0:	eeb0 0a48 	vmov.f32	s0, s16
 8001af4:	f001 f9ba 	bl	8002e6c <fabsf>
 8001af8:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8001afc:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8001b00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b04:	dd2c      	ble.n	8001b60 <asinf+0x98>
 8001b06:	2301      	movs	r3, #1
 8001b08:	9300      	str	r3, [sp, #0]
 8001b0a:	4b19      	ldr	r3, [pc, #100]	; (8001b70 <asinf+0xa8>)
 8001b0c:	9301      	str	r3, [sp, #4]
 8001b0e:	ee18 0a10 	vmov	r0, s16
 8001b12:	2300      	movs	r3, #0
 8001b14:	9308      	str	r3, [sp, #32]
 8001b16:	f7fe fcc3 	bl	80004a0 <__aeabi_f2d>
 8001b1a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8001b1e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8001b22:	4814      	ldr	r0, [pc, #80]	; (8001b74 <asinf+0xac>)
 8001b24:	f001 f920 	bl	8002d68 <nan>
 8001b28:	f994 3000 	ldrsb.w	r3, [r4]
 8001b2c:	2b02      	cmp	r3, #2
 8001b2e:	ed8d 0b06 	vstr	d0, [sp, #24]
 8001b32:	d104      	bne.n	8001b3e <asinf+0x76>
 8001b34:	f001 f9ae 	bl	8002e94 <__errno>
 8001b38:	2321      	movs	r3, #33	; 0x21
 8001b3a:	6003      	str	r3, [r0, #0]
 8001b3c:	e004      	b.n	8001b48 <asinf+0x80>
 8001b3e:	4668      	mov	r0, sp
 8001b40:	f001 f90e 	bl	8002d60 <matherr>
 8001b44:	2800      	cmp	r0, #0
 8001b46:	d0f5      	beq.n	8001b34 <asinf+0x6c>
 8001b48:	9b08      	ldr	r3, [sp, #32]
 8001b4a:	b11b      	cbz	r3, 8001b54 <asinf+0x8c>
 8001b4c:	f001 f9a2 	bl	8002e94 <__errno>
 8001b50:	9b08      	ldr	r3, [sp, #32]
 8001b52:	6003      	str	r3, [r0, #0]
 8001b54:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001b58:	f7fe ffb8 	bl	8000acc <__aeabi_d2f>
 8001b5c:	ee08 0a90 	vmov	s17, r0
 8001b60:	eeb0 0a68 	vmov.f32	s0, s17
 8001b64:	b00a      	add	sp, #40	; 0x28
 8001b66:	ecbd 8b02 	vpop	{d8}
 8001b6a:	bd10      	pop	{r4, pc}
 8001b6c:	20000008 	.word	0x20000008
 8001b70:	08002ec8 	.word	0x08002ec8
 8001b74:	08002ecd 	.word	0x08002ecd

08001b78 <sqrtf>:
 8001b78:	b510      	push	{r4, lr}
 8001b7a:	ed2d 8b02 	vpush	{d8}
 8001b7e:	b08a      	sub	sp, #40	; 0x28
 8001b80:	eeb0 8a40 	vmov.f32	s16, s0
 8001b84:	f000 fb22 	bl	80021cc <__ieee754_sqrtf>
 8001b88:	4b21      	ldr	r3, [pc, #132]	; (8001c10 <sqrtf+0x98>)
 8001b8a:	f993 4000 	ldrsb.w	r4, [r3]
 8001b8e:	1c63      	adds	r3, r4, #1
 8001b90:	d02c      	beq.n	8001bec <sqrtf+0x74>
 8001b92:	eeb4 8a48 	vcmp.f32	s16, s16
 8001b96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001b9a:	d627      	bvs.n	8001bec <sqrtf+0x74>
 8001b9c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8001ba0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001ba4:	d522      	bpl.n	8001bec <sqrtf+0x74>
 8001ba6:	2301      	movs	r3, #1
 8001ba8:	9300      	str	r3, [sp, #0]
 8001baa:	4b1a      	ldr	r3, [pc, #104]	; (8001c14 <sqrtf+0x9c>)
 8001bac:	9301      	str	r3, [sp, #4]
 8001bae:	ee18 0a10 	vmov	r0, s16
 8001bb2:	2300      	movs	r3, #0
 8001bb4:	9308      	str	r3, [sp, #32]
 8001bb6:	f7fe fc73 	bl	80004a0 <__aeabi_f2d>
 8001bba:	2200      	movs	r2, #0
 8001bbc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8001bc0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8001bc4:	2300      	movs	r3, #0
 8001bc6:	b9ac      	cbnz	r4, 8001bf4 <sqrtf+0x7c>
 8001bc8:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8001bcc:	4668      	mov	r0, sp
 8001bce:	f001 f8c7 	bl	8002d60 <matherr>
 8001bd2:	b1b8      	cbz	r0, 8001c04 <sqrtf+0x8c>
 8001bd4:	9b08      	ldr	r3, [sp, #32]
 8001bd6:	b11b      	cbz	r3, 8001be0 <sqrtf+0x68>
 8001bd8:	f001 f95c 	bl	8002e94 <__errno>
 8001bdc:	9b08      	ldr	r3, [sp, #32]
 8001bde:	6003      	str	r3, [r0, #0]
 8001be0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001be4:	f7fe ff72 	bl	8000acc <__aeabi_d2f>
 8001be8:	ee00 0a10 	vmov	s0, r0
 8001bec:	b00a      	add	sp, #40	; 0x28
 8001bee:	ecbd 8b02 	vpop	{d8}
 8001bf2:	bd10      	pop	{r4, pc}
 8001bf4:	4610      	mov	r0, r2
 8001bf6:	4619      	mov	r1, r3
 8001bf8:	f7fe fdd0 	bl	800079c <__aeabi_ddiv>
 8001bfc:	2c02      	cmp	r4, #2
 8001bfe:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8001c02:	d1e3      	bne.n	8001bcc <sqrtf+0x54>
 8001c04:	f001 f946 	bl	8002e94 <__errno>
 8001c08:	2321      	movs	r3, #33	; 0x21
 8001c0a:	6003      	str	r3, [r0, #0]
 8001c0c:	e7e2      	b.n	8001bd4 <sqrtf+0x5c>
 8001c0e:	bf00      	nop
 8001c10:	20000008 	.word	0x20000008
 8001c14:	08002ece 	.word	0x08002ece

08001c18 <__ieee754_rem_pio2>:
 8001c18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001c1c:	ec57 6b10 	vmov	r6, r7, d0
 8001c20:	4bc3      	ldr	r3, [pc, #780]	; (8001f30 <__ieee754_rem_pio2+0x318>)
 8001c22:	b08d      	sub	sp, #52	; 0x34
 8001c24:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 8001c28:	4598      	cmp	r8, r3
 8001c2a:	4604      	mov	r4, r0
 8001c2c:	9704      	str	r7, [sp, #16]
 8001c2e:	dc07      	bgt.n	8001c40 <__ieee754_rem_pio2+0x28>
 8001c30:	2200      	movs	r2, #0
 8001c32:	2300      	movs	r3, #0
 8001c34:	ed84 0b00 	vstr	d0, [r4]
 8001c38:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8001c3c:	2500      	movs	r5, #0
 8001c3e:	e027      	b.n	8001c90 <__ieee754_rem_pio2+0x78>
 8001c40:	4bbc      	ldr	r3, [pc, #752]	; (8001f34 <__ieee754_rem_pio2+0x31c>)
 8001c42:	4598      	cmp	r8, r3
 8001c44:	dc75      	bgt.n	8001d32 <__ieee754_rem_pio2+0x11a>
 8001c46:	9b04      	ldr	r3, [sp, #16]
 8001c48:	4dbb      	ldr	r5, [pc, #748]	; (8001f38 <__ieee754_rem_pio2+0x320>)
 8001c4a:	2b00      	cmp	r3, #0
 8001c4c:	ee10 0a10 	vmov	r0, s0
 8001c50:	a3a9      	add	r3, pc, #676	; (adr r3, 8001ef8 <__ieee754_rem_pio2+0x2e0>)
 8001c52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c56:	4639      	mov	r1, r7
 8001c58:	dd36      	ble.n	8001cc8 <__ieee754_rem_pio2+0xb0>
 8001c5a:	f7fe fac1 	bl	80001e0 <__aeabi_dsub>
 8001c5e:	45a8      	cmp	r8, r5
 8001c60:	4606      	mov	r6, r0
 8001c62:	460f      	mov	r7, r1
 8001c64:	d018      	beq.n	8001c98 <__ieee754_rem_pio2+0x80>
 8001c66:	a3a6      	add	r3, pc, #664	; (adr r3, 8001f00 <__ieee754_rem_pio2+0x2e8>)
 8001c68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c6c:	f7fe fab8 	bl	80001e0 <__aeabi_dsub>
 8001c70:	4602      	mov	r2, r0
 8001c72:	460b      	mov	r3, r1
 8001c74:	e9c4 2300 	strd	r2, r3, [r4]
 8001c78:	4630      	mov	r0, r6
 8001c7a:	4639      	mov	r1, r7
 8001c7c:	f7fe fab0 	bl	80001e0 <__aeabi_dsub>
 8001c80:	a39f      	add	r3, pc, #636	; (adr r3, 8001f00 <__ieee754_rem_pio2+0x2e8>)
 8001c82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c86:	f7fe faab 	bl	80001e0 <__aeabi_dsub>
 8001c8a:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8001c8e:	2501      	movs	r5, #1
 8001c90:	4628      	mov	r0, r5
 8001c92:	b00d      	add	sp, #52	; 0x34
 8001c94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001c98:	a39b      	add	r3, pc, #620	; (adr r3, 8001f08 <__ieee754_rem_pio2+0x2f0>)
 8001c9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c9e:	f7fe fa9f 	bl	80001e0 <__aeabi_dsub>
 8001ca2:	a39b      	add	r3, pc, #620	; (adr r3, 8001f10 <__ieee754_rem_pio2+0x2f8>)
 8001ca4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ca8:	4606      	mov	r6, r0
 8001caa:	460f      	mov	r7, r1
 8001cac:	f7fe fa98 	bl	80001e0 <__aeabi_dsub>
 8001cb0:	4602      	mov	r2, r0
 8001cb2:	460b      	mov	r3, r1
 8001cb4:	e9c4 2300 	strd	r2, r3, [r4]
 8001cb8:	4630      	mov	r0, r6
 8001cba:	4639      	mov	r1, r7
 8001cbc:	f7fe fa90 	bl	80001e0 <__aeabi_dsub>
 8001cc0:	a393      	add	r3, pc, #588	; (adr r3, 8001f10 <__ieee754_rem_pio2+0x2f8>)
 8001cc2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001cc6:	e7de      	b.n	8001c86 <__ieee754_rem_pio2+0x6e>
 8001cc8:	f7fe fa8c 	bl	80001e4 <__adddf3>
 8001ccc:	45a8      	cmp	r8, r5
 8001cce:	4606      	mov	r6, r0
 8001cd0:	460f      	mov	r7, r1
 8001cd2:	d016      	beq.n	8001d02 <__ieee754_rem_pio2+0xea>
 8001cd4:	a38a      	add	r3, pc, #552	; (adr r3, 8001f00 <__ieee754_rem_pio2+0x2e8>)
 8001cd6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001cda:	f7fe fa83 	bl	80001e4 <__adddf3>
 8001cde:	4602      	mov	r2, r0
 8001ce0:	460b      	mov	r3, r1
 8001ce2:	e9c4 2300 	strd	r2, r3, [r4]
 8001ce6:	4630      	mov	r0, r6
 8001ce8:	4639      	mov	r1, r7
 8001cea:	f7fe fa79 	bl	80001e0 <__aeabi_dsub>
 8001cee:	a384      	add	r3, pc, #528	; (adr r3, 8001f00 <__ieee754_rem_pio2+0x2e8>)
 8001cf0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001cf4:	f7fe fa76 	bl	80001e4 <__adddf3>
 8001cf8:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8001cfc:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8001d00:	e7c6      	b.n	8001c90 <__ieee754_rem_pio2+0x78>
 8001d02:	a381      	add	r3, pc, #516	; (adr r3, 8001f08 <__ieee754_rem_pio2+0x2f0>)
 8001d04:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d08:	f7fe fa6c 	bl	80001e4 <__adddf3>
 8001d0c:	a380      	add	r3, pc, #512	; (adr r3, 8001f10 <__ieee754_rem_pio2+0x2f8>)
 8001d0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d12:	4606      	mov	r6, r0
 8001d14:	460f      	mov	r7, r1
 8001d16:	f7fe fa65 	bl	80001e4 <__adddf3>
 8001d1a:	4602      	mov	r2, r0
 8001d1c:	460b      	mov	r3, r1
 8001d1e:	e9c4 2300 	strd	r2, r3, [r4]
 8001d22:	4630      	mov	r0, r6
 8001d24:	4639      	mov	r1, r7
 8001d26:	f7fe fa5b 	bl	80001e0 <__aeabi_dsub>
 8001d2a:	a379      	add	r3, pc, #484	; (adr r3, 8001f10 <__ieee754_rem_pio2+0x2f8>)
 8001d2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d30:	e7e0      	b.n	8001cf4 <__ieee754_rem_pio2+0xdc>
 8001d32:	4b82      	ldr	r3, [pc, #520]	; (8001f3c <__ieee754_rem_pio2+0x324>)
 8001d34:	4598      	cmp	r8, r3
 8001d36:	f300 80d0 	bgt.w	8001eda <__ieee754_rem_pio2+0x2c2>
 8001d3a:	f000 ff83 	bl	8002c44 <fabs>
 8001d3e:	ec57 6b10 	vmov	r6, r7, d0
 8001d42:	ee10 0a10 	vmov	r0, s0
 8001d46:	a374      	add	r3, pc, #464	; (adr r3, 8001f18 <__ieee754_rem_pio2+0x300>)
 8001d48:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d4c:	4639      	mov	r1, r7
 8001d4e:	f7fe fbfb 	bl	8000548 <__aeabi_dmul>
 8001d52:	2200      	movs	r2, #0
 8001d54:	4b7a      	ldr	r3, [pc, #488]	; (8001f40 <__ieee754_rem_pio2+0x328>)
 8001d56:	f7fe fa45 	bl	80001e4 <__adddf3>
 8001d5a:	f7fe fe8f 	bl	8000a7c <__aeabi_d2iz>
 8001d5e:	4605      	mov	r5, r0
 8001d60:	f7fe fb8c 	bl	800047c <__aeabi_i2d>
 8001d64:	a364      	add	r3, pc, #400	; (adr r3, 8001ef8 <__ieee754_rem_pio2+0x2e0>)
 8001d66:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d6a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8001d6e:	f7fe fbeb 	bl	8000548 <__aeabi_dmul>
 8001d72:	4602      	mov	r2, r0
 8001d74:	460b      	mov	r3, r1
 8001d76:	4630      	mov	r0, r6
 8001d78:	4639      	mov	r1, r7
 8001d7a:	f7fe fa31 	bl	80001e0 <__aeabi_dsub>
 8001d7e:	a360      	add	r3, pc, #384	; (adr r3, 8001f00 <__ieee754_rem_pio2+0x2e8>)
 8001d80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d84:	4682      	mov	sl, r0
 8001d86:	468b      	mov	fp, r1
 8001d88:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8001d8c:	f7fe fbdc 	bl	8000548 <__aeabi_dmul>
 8001d90:	2d1f      	cmp	r5, #31
 8001d92:	4606      	mov	r6, r0
 8001d94:	460f      	mov	r7, r1
 8001d96:	dc2a      	bgt.n	8001dee <__ieee754_rem_pio2+0x1d6>
 8001d98:	1e6a      	subs	r2, r5, #1
 8001d9a:	4b6a      	ldr	r3, [pc, #424]	; (8001f44 <__ieee754_rem_pio2+0x32c>)
 8001d9c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001da0:	4598      	cmp	r8, r3
 8001da2:	d024      	beq.n	8001dee <__ieee754_rem_pio2+0x1d6>
 8001da4:	4632      	mov	r2, r6
 8001da6:	463b      	mov	r3, r7
 8001da8:	4650      	mov	r0, sl
 8001daa:	4659      	mov	r1, fp
 8001dac:	f7fe fa18 	bl	80001e0 <__aeabi_dsub>
 8001db0:	e9c4 0100 	strd	r0, r1, [r4]
 8001db4:	e9d4 8900 	ldrd	r8, r9, [r4]
 8001db8:	4650      	mov	r0, sl
 8001dba:	4642      	mov	r2, r8
 8001dbc:	464b      	mov	r3, r9
 8001dbe:	4659      	mov	r1, fp
 8001dc0:	f7fe fa0e 	bl	80001e0 <__aeabi_dsub>
 8001dc4:	463b      	mov	r3, r7
 8001dc6:	4632      	mov	r2, r6
 8001dc8:	f7fe fa0a 	bl	80001e0 <__aeabi_dsub>
 8001dcc:	9b04      	ldr	r3, [sp, #16]
 8001dce:	2b00      	cmp	r3, #0
 8001dd0:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8001dd4:	f6bf af5c 	bge.w	8001c90 <__ieee754_rem_pio2+0x78>
 8001dd8:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8001ddc:	6063      	str	r3, [r4, #4]
 8001dde:	f8c4 8000 	str.w	r8, [r4]
 8001de2:	60a0      	str	r0, [r4, #8]
 8001de4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8001de8:	60e3      	str	r3, [r4, #12]
 8001dea:	426d      	negs	r5, r5
 8001dec:	e750      	b.n	8001c90 <__ieee754_rem_pio2+0x78>
 8001dee:	4632      	mov	r2, r6
 8001df0:	463b      	mov	r3, r7
 8001df2:	4650      	mov	r0, sl
 8001df4:	4659      	mov	r1, fp
 8001df6:	f7fe f9f3 	bl	80001e0 <__aeabi_dsub>
 8001dfa:	ea4f 5228 	mov.w	r2, r8, asr #20
 8001dfe:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8001e02:	1ad3      	subs	r3, r2, r3
 8001e04:	2b10      	cmp	r3, #16
 8001e06:	e9c4 0100 	strd	r0, r1, [r4]
 8001e0a:	9205      	str	r2, [sp, #20]
 8001e0c:	ddd2      	ble.n	8001db4 <__ieee754_rem_pio2+0x19c>
 8001e0e:	a33e      	add	r3, pc, #248	; (adr r3, 8001f08 <__ieee754_rem_pio2+0x2f0>)
 8001e10:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e14:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8001e18:	f7fe fb96 	bl	8000548 <__aeabi_dmul>
 8001e1c:	4606      	mov	r6, r0
 8001e1e:	460f      	mov	r7, r1
 8001e20:	4602      	mov	r2, r0
 8001e22:	460b      	mov	r3, r1
 8001e24:	4650      	mov	r0, sl
 8001e26:	4659      	mov	r1, fp
 8001e28:	f7fe f9da 	bl	80001e0 <__aeabi_dsub>
 8001e2c:	4602      	mov	r2, r0
 8001e2e:	460b      	mov	r3, r1
 8001e30:	4680      	mov	r8, r0
 8001e32:	4689      	mov	r9, r1
 8001e34:	4650      	mov	r0, sl
 8001e36:	4659      	mov	r1, fp
 8001e38:	f7fe f9d2 	bl	80001e0 <__aeabi_dsub>
 8001e3c:	4632      	mov	r2, r6
 8001e3e:	463b      	mov	r3, r7
 8001e40:	f7fe f9ce 	bl	80001e0 <__aeabi_dsub>
 8001e44:	a332      	add	r3, pc, #200	; (adr r3, 8001f10 <__ieee754_rem_pio2+0x2f8>)
 8001e46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e4a:	4606      	mov	r6, r0
 8001e4c:	460f      	mov	r7, r1
 8001e4e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8001e52:	f7fe fb79 	bl	8000548 <__aeabi_dmul>
 8001e56:	4632      	mov	r2, r6
 8001e58:	463b      	mov	r3, r7
 8001e5a:	f7fe f9c1 	bl	80001e0 <__aeabi_dsub>
 8001e5e:	4602      	mov	r2, r0
 8001e60:	460b      	mov	r3, r1
 8001e62:	4606      	mov	r6, r0
 8001e64:	460f      	mov	r7, r1
 8001e66:	4640      	mov	r0, r8
 8001e68:	4649      	mov	r1, r9
 8001e6a:	f7fe f9b9 	bl	80001e0 <__aeabi_dsub>
 8001e6e:	9a05      	ldr	r2, [sp, #20]
 8001e70:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8001e74:	1ad3      	subs	r3, r2, r3
 8001e76:	2b31      	cmp	r3, #49	; 0x31
 8001e78:	e9c4 0100 	strd	r0, r1, [r4]
 8001e7c:	dd2a      	ble.n	8001ed4 <__ieee754_rem_pio2+0x2bc>
 8001e7e:	a328      	add	r3, pc, #160	; (adr r3, 8001f20 <__ieee754_rem_pio2+0x308>)
 8001e80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001e84:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8001e88:	f7fe fb5e 	bl	8000548 <__aeabi_dmul>
 8001e8c:	4606      	mov	r6, r0
 8001e8e:	460f      	mov	r7, r1
 8001e90:	4602      	mov	r2, r0
 8001e92:	460b      	mov	r3, r1
 8001e94:	4640      	mov	r0, r8
 8001e96:	4649      	mov	r1, r9
 8001e98:	f7fe f9a2 	bl	80001e0 <__aeabi_dsub>
 8001e9c:	4602      	mov	r2, r0
 8001e9e:	460b      	mov	r3, r1
 8001ea0:	4682      	mov	sl, r0
 8001ea2:	468b      	mov	fp, r1
 8001ea4:	4640      	mov	r0, r8
 8001ea6:	4649      	mov	r1, r9
 8001ea8:	f7fe f99a 	bl	80001e0 <__aeabi_dsub>
 8001eac:	4632      	mov	r2, r6
 8001eae:	463b      	mov	r3, r7
 8001eb0:	f7fe f996 	bl	80001e0 <__aeabi_dsub>
 8001eb4:	a31c      	add	r3, pc, #112	; (adr r3, 8001f28 <__ieee754_rem_pio2+0x310>)
 8001eb6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001eba:	4606      	mov	r6, r0
 8001ebc:	460f      	mov	r7, r1
 8001ebe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8001ec2:	f7fe fb41 	bl	8000548 <__aeabi_dmul>
 8001ec6:	4632      	mov	r2, r6
 8001ec8:	463b      	mov	r3, r7
 8001eca:	f7fe f989 	bl	80001e0 <__aeabi_dsub>
 8001ece:	4606      	mov	r6, r0
 8001ed0:	460f      	mov	r7, r1
 8001ed2:	e767      	b.n	8001da4 <__ieee754_rem_pio2+0x18c>
 8001ed4:	46c2      	mov	sl, r8
 8001ed6:	46cb      	mov	fp, r9
 8001ed8:	e76c      	b.n	8001db4 <__ieee754_rem_pio2+0x19c>
 8001eda:	4b1b      	ldr	r3, [pc, #108]	; (8001f48 <__ieee754_rem_pio2+0x330>)
 8001edc:	4598      	cmp	r8, r3
 8001ede:	dd35      	ble.n	8001f4c <__ieee754_rem_pio2+0x334>
 8001ee0:	ee10 2a10 	vmov	r2, s0
 8001ee4:	463b      	mov	r3, r7
 8001ee6:	4630      	mov	r0, r6
 8001ee8:	4639      	mov	r1, r7
 8001eea:	f7fe f979 	bl	80001e0 <__aeabi_dsub>
 8001eee:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8001ef2:	e9c4 0100 	strd	r0, r1, [r4]
 8001ef6:	e6a1      	b.n	8001c3c <__ieee754_rem_pio2+0x24>
 8001ef8:	54400000 	.word	0x54400000
 8001efc:	3ff921fb 	.word	0x3ff921fb
 8001f00:	1a626331 	.word	0x1a626331
 8001f04:	3dd0b461 	.word	0x3dd0b461
 8001f08:	1a600000 	.word	0x1a600000
 8001f0c:	3dd0b461 	.word	0x3dd0b461
 8001f10:	2e037073 	.word	0x2e037073
 8001f14:	3ba3198a 	.word	0x3ba3198a
 8001f18:	6dc9c883 	.word	0x6dc9c883
 8001f1c:	3fe45f30 	.word	0x3fe45f30
 8001f20:	2e000000 	.word	0x2e000000
 8001f24:	3ba3198a 	.word	0x3ba3198a
 8001f28:	252049c1 	.word	0x252049c1
 8001f2c:	397b839a 	.word	0x397b839a
 8001f30:	3fe921fb 	.word	0x3fe921fb
 8001f34:	4002d97b 	.word	0x4002d97b
 8001f38:	3ff921fb 	.word	0x3ff921fb
 8001f3c:	413921fb 	.word	0x413921fb
 8001f40:	3fe00000 	.word	0x3fe00000
 8001f44:	08002ed4 	.word	0x08002ed4
 8001f48:	7fefffff 	.word	0x7fefffff
 8001f4c:	ea4f 5528 	mov.w	r5, r8, asr #20
 8001f50:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
 8001f54:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
 8001f58:	4630      	mov	r0, r6
 8001f5a:	460f      	mov	r7, r1
 8001f5c:	f7fe fd8e 	bl	8000a7c <__aeabi_d2iz>
 8001f60:	f7fe fa8c 	bl	800047c <__aeabi_i2d>
 8001f64:	4602      	mov	r2, r0
 8001f66:	460b      	mov	r3, r1
 8001f68:	4630      	mov	r0, r6
 8001f6a:	4639      	mov	r1, r7
 8001f6c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8001f70:	f7fe f936 	bl	80001e0 <__aeabi_dsub>
 8001f74:	2200      	movs	r2, #0
 8001f76:	4b1f      	ldr	r3, [pc, #124]	; (8001ff4 <__ieee754_rem_pio2+0x3dc>)
 8001f78:	f7fe fae6 	bl	8000548 <__aeabi_dmul>
 8001f7c:	460f      	mov	r7, r1
 8001f7e:	4606      	mov	r6, r0
 8001f80:	f7fe fd7c 	bl	8000a7c <__aeabi_d2iz>
 8001f84:	f7fe fa7a 	bl	800047c <__aeabi_i2d>
 8001f88:	4602      	mov	r2, r0
 8001f8a:	460b      	mov	r3, r1
 8001f8c:	4630      	mov	r0, r6
 8001f8e:	4639      	mov	r1, r7
 8001f90:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8001f94:	f7fe f924 	bl	80001e0 <__aeabi_dsub>
 8001f98:	2200      	movs	r2, #0
 8001f9a:	4b16      	ldr	r3, [pc, #88]	; (8001ff4 <__ieee754_rem_pio2+0x3dc>)
 8001f9c:	f7fe fad4 	bl	8000548 <__aeabi_dmul>
 8001fa0:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8001fa4:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8001fa8:	f04f 0803 	mov.w	r8, #3
 8001fac:	2600      	movs	r6, #0
 8001fae:	2700      	movs	r7, #0
 8001fb0:	4632      	mov	r2, r6
 8001fb2:	463b      	mov	r3, r7
 8001fb4:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 8001fb8:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8001fbc:	f7fe fd2c 	bl	8000a18 <__aeabi_dcmpeq>
 8001fc0:	b9b0      	cbnz	r0, 8001ff0 <__ieee754_rem_pio2+0x3d8>
 8001fc2:	4b0d      	ldr	r3, [pc, #52]	; (8001ff8 <__ieee754_rem_pio2+0x3e0>)
 8001fc4:	9301      	str	r3, [sp, #4]
 8001fc6:	2302      	movs	r3, #2
 8001fc8:	9300      	str	r3, [sp, #0]
 8001fca:	462a      	mov	r2, r5
 8001fcc:	4643      	mov	r3, r8
 8001fce:	4621      	mov	r1, r4
 8001fd0:	a806      	add	r0, sp, #24
 8001fd2:	f000 fa2d 	bl	8002430 <__kernel_rem_pio2>
 8001fd6:	9b04      	ldr	r3, [sp, #16]
 8001fd8:	2b00      	cmp	r3, #0
 8001fda:	4605      	mov	r5, r0
 8001fdc:	f6bf ae58 	bge.w	8001c90 <__ieee754_rem_pio2+0x78>
 8001fe0:	6863      	ldr	r3, [r4, #4]
 8001fe2:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8001fe6:	6063      	str	r3, [r4, #4]
 8001fe8:	68e3      	ldr	r3, [r4, #12]
 8001fea:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8001fee:	e6fb      	b.n	8001de8 <__ieee754_rem_pio2+0x1d0>
 8001ff0:	46d0      	mov	r8, sl
 8001ff2:	e7dd      	b.n	8001fb0 <__ieee754_rem_pio2+0x398>
 8001ff4:	41700000 	.word	0x41700000
 8001ff8:	08002f54 	.word	0x08002f54

08001ffc <__ieee754_asinf>:
 8001ffc:	b538      	push	{r3, r4, r5, lr}
 8001ffe:	ee10 5a10 	vmov	r5, s0
 8002002:	f025 4400 	bic.w	r4, r5, #2147483648	; 0x80000000
 8002006:	f1b4 5f7e 	cmp.w	r4, #1065353216	; 0x3f800000
 800200a:	ed2d 8b04 	vpush	{d8-d9}
 800200e:	d10c      	bne.n	800202a <__ieee754_asinf+0x2e>
 8002010:	eddf 7a5e 	vldr	s15, [pc, #376]	; 800218c <__ieee754_asinf+0x190>
 8002014:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8002190 <__ieee754_asinf+0x194>
 8002018:	ee60 7a27 	vmul.f32	s15, s0, s15
 800201c:	eee0 7a07 	vfma.f32	s15, s0, s14
 8002020:	eeb0 0a67 	vmov.f32	s0, s15
 8002024:	ecbd 8b04 	vpop	{d8-d9}
 8002028:	bd38      	pop	{r3, r4, r5, pc}
 800202a:	dd04      	ble.n	8002036 <__ieee754_asinf+0x3a>
 800202c:	ee70 7a40 	vsub.f32	s15, s0, s0
 8002030:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 8002034:	e7f6      	b.n	8002024 <__ieee754_asinf+0x28>
 8002036:	f1b4 5f7c 	cmp.w	r4, #1056964608	; 0x3f000000
 800203a:	eef7 8a00 	vmov.f32	s17, #112	; 0x3f800000  1.0
 800203e:	da0b      	bge.n	8002058 <__ieee754_asinf+0x5c>
 8002040:	f1b4 5f48 	cmp.w	r4, #838860800	; 0x32000000
 8002044:	da52      	bge.n	80020ec <__ieee754_asinf+0xf0>
 8002046:	eddf 7a53 	vldr	s15, [pc, #332]	; 8002194 <__ieee754_asinf+0x198>
 800204a:	ee70 7a27 	vadd.f32	s15, s0, s15
 800204e:	eef4 7ae8 	vcmpe.f32	s15, s17
 8002052:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002056:	dce5      	bgt.n	8002024 <__ieee754_asinf+0x28>
 8002058:	f000 ff08 	bl	8002e6c <fabsf>
 800205c:	ee38 0ac0 	vsub.f32	s0, s17, s0
 8002060:	eeb6 8a00 	vmov.f32	s16, #96	; 0x3f000000  0.5
 8002064:	ee20 8a08 	vmul.f32	s16, s0, s16
 8002068:	eddf 7a4b 	vldr	s15, [pc, #300]	; 8002198 <__ieee754_asinf+0x19c>
 800206c:	ed9f 7a4b 	vldr	s14, [pc, #300]	; 800219c <__ieee754_asinf+0x1a0>
 8002070:	ed9f 9a4b 	vldr	s18, [pc, #300]	; 80021a0 <__ieee754_asinf+0x1a4>
 8002074:	eea8 7a27 	vfma.f32	s14, s16, s15
 8002078:	eddf 7a4a 	vldr	s15, [pc, #296]	; 80021a4 <__ieee754_asinf+0x1a8>
 800207c:	eee8 7a07 	vfma.f32	s15, s16, s14
 8002080:	ed9f 7a49 	vldr	s14, [pc, #292]	; 80021a8 <__ieee754_asinf+0x1ac>
 8002084:	eea8 7a27 	vfma.f32	s14, s16, s15
 8002088:	eddf 7a48 	vldr	s15, [pc, #288]	; 80021ac <__ieee754_asinf+0x1b0>
 800208c:	eee8 7a07 	vfma.f32	s15, s16, s14
 8002090:	ed9f 7a47 	vldr	s14, [pc, #284]	; 80021b0 <__ieee754_asinf+0x1b4>
 8002094:	eea8 9a27 	vfma.f32	s18, s16, s15
 8002098:	eddf 7a46 	vldr	s15, [pc, #280]	; 80021b4 <__ieee754_asinf+0x1b8>
 800209c:	eee8 7a07 	vfma.f32	s15, s16, s14
 80020a0:	ed9f 7a45 	vldr	s14, [pc, #276]	; 80021b8 <__ieee754_asinf+0x1bc>
 80020a4:	eea8 7a27 	vfma.f32	s14, s16, s15
 80020a8:	eddf 7a44 	vldr	s15, [pc, #272]	; 80021bc <__ieee754_asinf+0x1c0>
 80020ac:	eee8 7a07 	vfma.f32	s15, s16, s14
 80020b0:	eeb0 0a48 	vmov.f32	s0, s16
 80020b4:	eee8 8a27 	vfma.f32	s17, s16, s15
 80020b8:	f000 f888 	bl	80021cc <__ieee754_sqrtf>
 80020bc:	4b40      	ldr	r3, [pc, #256]	; (80021c0 <__ieee754_asinf+0x1c4>)
 80020be:	ee29 9a08 	vmul.f32	s18, s18, s16
 80020c2:	429c      	cmp	r4, r3
 80020c4:	ee89 6a28 	vdiv.f32	s12, s18, s17
 80020c8:	eeb0 7a00 	vmov.f32	s14, #0	; 0x40000000  2.0
 80020cc:	dd3d      	ble.n	800214a <__ieee754_asinf+0x14e>
 80020ce:	eea0 0a06 	vfma.f32	s0, s0, s12
 80020d2:	eddf 7a3c 	vldr	s15, [pc, #240]	; 80021c4 <__ieee754_asinf+0x1c8>
 80020d6:	eee0 7a07 	vfma.f32	s15, s0, s14
 80020da:	ed9f 0a2d 	vldr	s0, [pc, #180]	; 8002190 <__ieee754_asinf+0x194>
 80020de:	ee30 0a67 	vsub.f32	s0, s0, s15
 80020e2:	2d00      	cmp	r5, #0
 80020e4:	bfd8      	it	le
 80020e6:	eeb1 0a40 	vnegle.f32	s0, s0
 80020ea:	e79b      	b.n	8002024 <__ieee754_asinf+0x28>
 80020ec:	ee60 7a00 	vmul.f32	s15, s0, s0
 80020f0:	eddf 6a29 	vldr	s13, [pc, #164]	; 8002198 <__ieee754_asinf+0x19c>
 80020f4:	ed9f 7a29 	vldr	s14, [pc, #164]	; 800219c <__ieee754_asinf+0x1a0>
 80020f8:	ed9f 6a2d 	vldr	s12, [pc, #180]	; 80021b0 <__ieee754_asinf+0x1b4>
 80020fc:	eea7 7aa6 	vfma.f32	s14, s15, s13
 8002100:	eddf 6a28 	vldr	s13, [pc, #160]	; 80021a4 <__ieee754_asinf+0x1a8>
 8002104:	eee7 6a87 	vfma.f32	s13, s15, s14
 8002108:	ed9f 7a27 	vldr	s14, [pc, #156]	; 80021a8 <__ieee754_asinf+0x1ac>
 800210c:	eea7 7aa6 	vfma.f32	s14, s15, s13
 8002110:	eddf 6a26 	vldr	s13, [pc, #152]	; 80021ac <__ieee754_asinf+0x1b0>
 8002114:	eee7 6a87 	vfma.f32	s13, s15, s14
 8002118:	ed9f 7a21 	vldr	s14, [pc, #132]	; 80021a0 <__ieee754_asinf+0x1a4>
 800211c:	eea7 7aa6 	vfma.f32	s14, s15, s13
 8002120:	eddf 6a24 	vldr	s13, [pc, #144]	; 80021b4 <__ieee754_asinf+0x1b8>
 8002124:	eee7 6a86 	vfma.f32	s13, s15, s12
 8002128:	ed9f 6a23 	vldr	s12, [pc, #140]	; 80021b8 <__ieee754_asinf+0x1bc>
 800212c:	eea7 6aa6 	vfma.f32	s12, s15, s13
 8002130:	eddf 6a22 	vldr	s13, [pc, #136]	; 80021bc <__ieee754_asinf+0x1c0>
 8002134:	eee7 6a86 	vfma.f32	s13, s15, s12
 8002138:	ee27 7a27 	vmul.f32	s14, s14, s15
 800213c:	eee7 8aa6 	vfma.f32	s17, s15, s13
 8002140:	eec7 7a28 	vdiv.f32	s15, s14, s17
 8002144:	eea0 0a27 	vfma.f32	s0, s0, s15
 8002148:	e76c      	b.n	8002024 <__ieee754_asinf+0x28>
 800214a:	ee10 3a10 	vmov	r3, s0
 800214e:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8002152:	f023 030f 	bic.w	r3, r3, #15
 8002156:	ee07 3a90 	vmov	s15, r3
 800215a:	eef1 6a67 	vneg.f32	s13, s15
 800215e:	eea6 8aa7 	vfma.f32	s16, s13, s15
 8002162:	ee77 7a80 	vadd.f32	s15, s15, s0
 8002166:	ee30 0a00 	vadd.f32	s0, s0, s0
 800216a:	eec8 5a27 	vdiv.f32	s11, s16, s15
 800216e:	eddf 7a07 	vldr	s15, [pc, #28]	; 800218c <__ieee754_asinf+0x190>
 8002172:	eee5 7ac7 	vfms.f32	s15, s11, s14
 8002176:	eed6 7a00 	vfnms.f32	s15, s12, s0
 800217a:	ed9f 0a13 	vldr	s0, [pc, #76]	; 80021c8 <__ieee754_asinf+0x1cc>
 800217e:	eeb0 6a40 	vmov.f32	s12, s0
 8002182:	eea6 6a87 	vfma.f32	s12, s13, s14
 8002186:	ee77 7ac6 	vsub.f32	s15, s15, s12
 800218a:	e7a8      	b.n	80020de <__ieee754_asinf+0xe2>
 800218c:	b33bbd2e 	.word	0xb33bbd2e
 8002190:	3fc90fdb 	.word	0x3fc90fdb
 8002194:	7149f2ca 	.word	0x7149f2ca
 8002198:	3811ef08 	.word	0x3811ef08
 800219c:	3a4f7f04 	.word	0x3a4f7f04
 80021a0:	3e2aaaab 	.word	0x3e2aaaab
 80021a4:	bd241146 	.word	0xbd241146
 80021a8:	3e4e0aa8 	.word	0x3e4e0aa8
 80021ac:	bea6b090 	.word	0xbea6b090
 80021b0:	3d9dc62e 	.word	0x3d9dc62e
 80021b4:	bf303361 	.word	0xbf303361
 80021b8:	4001572d 	.word	0x4001572d
 80021bc:	c019d139 	.word	0xc019d139
 80021c0:	3f799999 	.word	0x3f799999
 80021c4:	333bbd2e 	.word	0x333bbd2e
 80021c8:	3f490fdb 	.word	0x3f490fdb

080021cc <__ieee754_sqrtf>:
 80021cc:	ee10 2a10 	vmov	r2, s0
 80021d0:	f022 4100 	bic.w	r1, r2, #2147483648	; 0x80000000
 80021d4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80021d8:	b570      	push	{r4, r5, r6, lr}
 80021da:	d302      	bcc.n	80021e2 <__ieee754_sqrtf+0x16>
 80021dc:	eea0 0a00 	vfma.f32	s0, s0, s0
 80021e0:	bd70      	pop	{r4, r5, r6, pc}
 80021e2:	b3b1      	cbz	r1, 8002252 <__ieee754_sqrtf+0x86>
 80021e4:	2a00      	cmp	r2, #0
 80021e6:	da04      	bge.n	80021f2 <__ieee754_sqrtf+0x26>
 80021e8:	ee70 7a40 	vsub.f32	s15, s0, s0
 80021ec:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 80021f0:	bd70      	pop	{r4, r5, r6, pc}
 80021f2:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80021f6:	ea4f 53e2 	mov.w	r3, r2, asr #23
 80021fa:	d204      	bcs.n	8002206 <__ieee754_sqrtf+0x3a>
 80021fc:	2100      	movs	r1, #0
 80021fe:	0210      	lsls	r0, r2, #8
 8002200:	d528      	bpl.n	8002254 <__ieee754_sqrtf+0x88>
 8002202:	3901      	subs	r1, #1
 8002204:	1a5b      	subs	r3, r3, r1
 8002206:	3b7f      	subs	r3, #127	; 0x7f
 8002208:	f3c2 0216 	ubfx	r2, r2, #0, #23
 800220c:	07d9      	lsls	r1, r3, #31
 800220e:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8002212:	bf48      	it	mi
 8002214:	0052      	lslmi	r2, r2, #1
 8002216:	1059      	asrs	r1, r3, #1
 8002218:	2300      	movs	r3, #0
 800221a:	0052      	lsls	r2, r2, #1
 800221c:	2419      	movs	r4, #25
 800221e:	461e      	mov	r6, r3
 8002220:	f04f 7080 	mov.w	r0, #16777216	; 0x1000000
 8002224:	1835      	adds	r5, r6, r0
 8002226:	4295      	cmp	r5, r2
 8002228:	bfde      	ittt	le
 800222a:	182e      	addle	r6, r5, r0
 800222c:	1b52      	suble	r2, r2, r5
 800222e:	181b      	addle	r3, r3, r0
 8002230:	3c01      	subs	r4, #1
 8002232:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8002236:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800223a:	d1f3      	bne.n	8002224 <__ieee754_sqrtf+0x58>
 800223c:	b112      	cbz	r2, 8002244 <__ieee754_sqrtf+0x78>
 800223e:	3301      	adds	r3, #1
 8002240:	f023 0301 	bic.w	r3, r3, #1
 8002244:	105b      	asrs	r3, r3, #1
 8002246:	f103 537c 	add.w	r3, r3, #1056964608	; 0x3f000000
 800224a:	eb03 53c1 	add.w	r3, r3, r1, lsl #23
 800224e:	ee00 3a10 	vmov	s0, r3
 8002252:	bd70      	pop	{r4, r5, r6, pc}
 8002254:	0052      	lsls	r2, r2, #1
 8002256:	3101      	adds	r1, #1
 8002258:	e7d1      	b.n	80021fe <__ieee754_sqrtf+0x32>
 800225a:	0000      	movs	r0, r0
 800225c:	0000      	movs	r0, r0
	...

08002260 <__kernel_cos>:
 8002260:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002264:	ec59 8b10 	vmov	r8, r9, d0
 8002268:	f029 4700 	bic.w	r7, r9, #2147483648	; 0x80000000
 800226c:	b085      	sub	sp, #20
 800226e:	f1b7 5f79 	cmp.w	r7, #1044381696	; 0x3e400000
 8002272:	ed8d 1b00 	vstr	d1, [sp]
 8002276:	da07      	bge.n	8002288 <__kernel_cos+0x28>
 8002278:	ee10 0a10 	vmov	r0, s0
 800227c:	4649      	mov	r1, r9
 800227e:	f7fe fbfd 	bl	8000a7c <__aeabi_d2iz>
 8002282:	2800      	cmp	r0, #0
 8002284:	f000 80aa 	beq.w	80023dc <__kernel_cos+0x17c>
 8002288:	4642      	mov	r2, r8
 800228a:	464b      	mov	r3, r9
 800228c:	4640      	mov	r0, r8
 800228e:	4649      	mov	r1, r9
 8002290:	f7fe f95a 	bl	8000548 <__aeabi_dmul>
 8002294:	a359      	add	r3, pc, #356	; (adr r3, 80023fc <__kernel_cos+0x19c>)
 8002296:	e9d3 2300 	ldrd	r2, r3, [r3]
 800229a:	4604      	mov	r4, r0
 800229c:	460d      	mov	r5, r1
 800229e:	f7fe f953 	bl	8000548 <__aeabi_dmul>
 80022a2:	a358      	add	r3, pc, #352	; (adr r3, 8002404 <__kernel_cos+0x1a4>)
 80022a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022a8:	f7fd ff9c 	bl	80001e4 <__adddf3>
 80022ac:	4622      	mov	r2, r4
 80022ae:	462b      	mov	r3, r5
 80022b0:	f7fe f94a 	bl	8000548 <__aeabi_dmul>
 80022b4:	a355      	add	r3, pc, #340	; (adr r3, 800240c <__kernel_cos+0x1ac>)
 80022b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022ba:	f7fd ff91 	bl	80001e0 <__aeabi_dsub>
 80022be:	4622      	mov	r2, r4
 80022c0:	462b      	mov	r3, r5
 80022c2:	f7fe f941 	bl	8000548 <__aeabi_dmul>
 80022c6:	a353      	add	r3, pc, #332	; (adr r3, 8002414 <__kernel_cos+0x1b4>)
 80022c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022cc:	f7fd ff8a 	bl	80001e4 <__adddf3>
 80022d0:	4622      	mov	r2, r4
 80022d2:	462b      	mov	r3, r5
 80022d4:	f7fe f938 	bl	8000548 <__aeabi_dmul>
 80022d8:	a350      	add	r3, pc, #320	; (adr r3, 800241c <__kernel_cos+0x1bc>)
 80022da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022de:	f7fd ff7f 	bl	80001e0 <__aeabi_dsub>
 80022e2:	4622      	mov	r2, r4
 80022e4:	462b      	mov	r3, r5
 80022e6:	f7fe f92f 	bl	8000548 <__aeabi_dmul>
 80022ea:	a34e      	add	r3, pc, #312	; (adr r3, 8002424 <__kernel_cos+0x1c4>)
 80022ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022f0:	f7fd ff78 	bl	80001e4 <__adddf3>
 80022f4:	462b      	mov	r3, r5
 80022f6:	4622      	mov	r2, r4
 80022f8:	f7fe f926 	bl	8000548 <__aeabi_dmul>
 80022fc:	4b3a      	ldr	r3, [pc, #232]	; (80023e8 <__kernel_cos+0x188>)
 80022fe:	429f      	cmp	r7, r3
 8002300:	4682      	mov	sl, r0
 8002302:	468b      	mov	fp, r1
 8002304:	dc2c      	bgt.n	8002360 <__kernel_cos+0x100>
 8002306:	2200      	movs	r2, #0
 8002308:	4b38      	ldr	r3, [pc, #224]	; (80023ec <__kernel_cos+0x18c>)
 800230a:	4620      	mov	r0, r4
 800230c:	4629      	mov	r1, r5
 800230e:	f7fe f91b 	bl	8000548 <__aeabi_dmul>
 8002312:	4652      	mov	r2, sl
 8002314:	4606      	mov	r6, r0
 8002316:	460f      	mov	r7, r1
 8002318:	465b      	mov	r3, fp
 800231a:	4620      	mov	r0, r4
 800231c:	4629      	mov	r1, r5
 800231e:	f7fe f913 	bl	8000548 <__aeabi_dmul>
 8002322:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002326:	4604      	mov	r4, r0
 8002328:	460d      	mov	r5, r1
 800232a:	4640      	mov	r0, r8
 800232c:	4649      	mov	r1, r9
 800232e:	f7fe f90b 	bl	8000548 <__aeabi_dmul>
 8002332:	4602      	mov	r2, r0
 8002334:	460b      	mov	r3, r1
 8002336:	4620      	mov	r0, r4
 8002338:	4629      	mov	r1, r5
 800233a:	f7fd ff51 	bl	80001e0 <__aeabi_dsub>
 800233e:	4602      	mov	r2, r0
 8002340:	460b      	mov	r3, r1
 8002342:	4630      	mov	r0, r6
 8002344:	4639      	mov	r1, r7
 8002346:	f7fd ff4b 	bl	80001e0 <__aeabi_dsub>
 800234a:	460b      	mov	r3, r1
 800234c:	4928      	ldr	r1, [pc, #160]	; (80023f0 <__kernel_cos+0x190>)
 800234e:	4602      	mov	r2, r0
 8002350:	2000      	movs	r0, #0
 8002352:	f7fd ff45 	bl	80001e0 <__aeabi_dsub>
 8002356:	ec41 0b10 	vmov	d0, r0, r1
 800235a:	b005      	add	sp, #20
 800235c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002360:	4b24      	ldr	r3, [pc, #144]	; (80023f4 <__kernel_cos+0x194>)
 8002362:	4923      	ldr	r1, [pc, #140]	; (80023f0 <__kernel_cos+0x190>)
 8002364:	429f      	cmp	r7, r3
 8002366:	bfd7      	itett	le
 8002368:	f5a7 1300 	suble.w	r3, r7, #2097152	; 0x200000
 800236c:	4f22      	ldrgt	r7, [pc, #136]	; (80023f8 <__kernel_cos+0x198>)
 800236e:	2200      	movle	r2, #0
 8002370:	4616      	movle	r6, r2
 8002372:	bfd4      	ite	le
 8002374:	461f      	movle	r7, r3
 8002376:	2600      	movgt	r6, #0
 8002378:	4632      	mov	r2, r6
 800237a:	463b      	mov	r3, r7
 800237c:	2000      	movs	r0, #0
 800237e:	f7fd ff2f 	bl	80001e0 <__aeabi_dsub>
 8002382:	2200      	movs	r2, #0
 8002384:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002388:	4b18      	ldr	r3, [pc, #96]	; (80023ec <__kernel_cos+0x18c>)
 800238a:	4620      	mov	r0, r4
 800238c:	4629      	mov	r1, r5
 800238e:	f7fe f8db 	bl	8000548 <__aeabi_dmul>
 8002392:	4632      	mov	r2, r6
 8002394:	463b      	mov	r3, r7
 8002396:	f7fd ff23 	bl	80001e0 <__aeabi_dsub>
 800239a:	4652      	mov	r2, sl
 800239c:	4606      	mov	r6, r0
 800239e:	460f      	mov	r7, r1
 80023a0:	465b      	mov	r3, fp
 80023a2:	4620      	mov	r0, r4
 80023a4:	4629      	mov	r1, r5
 80023a6:	f7fe f8cf 	bl	8000548 <__aeabi_dmul>
 80023aa:	e9dd 2300 	ldrd	r2, r3, [sp]
 80023ae:	4604      	mov	r4, r0
 80023b0:	460d      	mov	r5, r1
 80023b2:	4640      	mov	r0, r8
 80023b4:	4649      	mov	r1, r9
 80023b6:	f7fe f8c7 	bl	8000548 <__aeabi_dmul>
 80023ba:	4602      	mov	r2, r0
 80023bc:	460b      	mov	r3, r1
 80023be:	4620      	mov	r0, r4
 80023c0:	4629      	mov	r1, r5
 80023c2:	f7fd ff0d 	bl	80001e0 <__aeabi_dsub>
 80023c6:	4602      	mov	r2, r0
 80023c8:	460b      	mov	r3, r1
 80023ca:	4630      	mov	r0, r6
 80023cc:	4639      	mov	r1, r7
 80023ce:	f7fd ff07 	bl	80001e0 <__aeabi_dsub>
 80023d2:	4602      	mov	r2, r0
 80023d4:	460b      	mov	r3, r1
 80023d6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80023da:	e7ba      	b.n	8002352 <__kernel_cos+0xf2>
 80023dc:	2000      	movs	r0, #0
 80023de:	4904      	ldr	r1, [pc, #16]	; (80023f0 <__kernel_cos+0x190>)
 80023e0:	e7b9      	b.n	8002356 <__kernel_cos+0xf6>
 80023e2:	bf00      	nop
 80023e4:	f3af 8000 	nop.w
 80023e8:	3fd33332 	.word	0x3fd33332
 80023ec:	3fe00000 	.word	0x3fe00000
 80023f0:	3ff00000 	.word	0x3ff00000
 80023f4:	3fe90000 	.word	0x3fe90000
 80023f8:	3fd20000 	.word	0x3fd20000
 80023fc:	be8838d4 	.word	0xbe8838d4
 8002400:	bda8fae9 	.word	0xbda8fae9
 8002404:	bdb4b1c4 	.word	0xbdb4b1c4
 8002408:	3e21ee9e 	.word	0x3e21ee9e
 800240c:	809c52ad 	.word	0x809c52ad
 8002410:	3e927e4f 	.word	0x3e927e4f
 8002414:	19cb1590 	.word	0x19cb1590
 8002418:	3efa01a0 	.word	0x3efa01a0
 800241c:	16c15177 	.word	0x16c15177
 8002420:	3f56c16c 	.word	0x3f56c16c
 8002424:	5555554c 	.word	0x5555554c
 8002428:	3fa55555 	.word	0x3fa55555
 800242c:	00000000 	.word	0x00000000

08002430 <__kernel_rem_pio2>:
 8002430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002434:	ed2d 8b02 	vpush	{d8}
 8002438:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
 800243c:	1ed4      	subs	r4, r2, #3
 800243e:	9306      	str	r3, [sp, #24]
 8002440:	9102      	str	r1, [sp, #8]
 8002442:	4bc3      	ldr	r3, [pc, #780]	; (8002750 <__kernel_rem_pio2+0x320>)
 8002444:	99a4      	ldr	r1, [sp, #656]	; 0x290
 8002446:	9009      	str	r0, [sp, #36]	; 0x24
 8002448:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800244c:	9300      	str	r3, [sp, #0]
 800244e:	9b06      	ldr	r3, [sp, #24]
 8002450:	3b01      	subs	r3, #1
 8002452:	9304      	str	r3, [sp, #16]
 8002454:	2318      	movs	r3, #24
 8002456:	fb94 f4f3 	sdiv	r4, r4, r3
 800245a:	f06f 0317 	mvn.w	r3, #23
 800245e:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 8002462:	fb04 3303 	mla	r3, r4, r3, r3
 8002466:	eb03 0a02 	add.w	sl, r3, r2
 800246a:	9b00      	ldr	r3, [sp, #0]
 800246c:	9a04      	ldr	r2, [sp, #16]
 800246e:	ed9f 8bb4 	vldr	d8, [pc, #720]	; 8002740 <__kernel_rem_pio2+0x310>
 8002472:	eb03 0802 	add.w	r8, r3, r2
 8002476:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8002478:	1aa7      	subs	r7, r4, r2
 800247a:	ae20      	add	r6, sp, #128	; 0x80
 800247c:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8002480:	2500      	movs	r5, #0
 8002482:	4545      	cmp	r5, r8
 8002484:	dd13      	ble.n	80024ae <__kernel_rem_pio2+0x7e>
 8002486:	ed9f 8bae 	vldr	d8, [pc, #696]	; 8002740 <__kernel_rem_pio2+0x310>
 800248a:	f50d 7be0 	add.w	fp, sp, #448	; 0x1c0
 800248e:	2600      	movs	r6, #0
 8002490:	9b00      	ldr	r3, [sp, #0]
 8002492:	429e      	cmp	r6, r3
 8002494:	dc32      	bgt.n	80024fc <__kernel_rem_pio2+0xcc>
 8002496:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002498:	9303      	str	r3, [sp, #12]
 800249a:	9b06      	ldr	r3, [sp, #24]
 800249c:	199d      	adds	r5, r3, r6
 800249e:	ab20      	add	r3, sp, #128	; 0x80
 80024a0:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80024a4:	9308      	str	r3, [sp, #32]
 80024a6:	ec59 8b18 	vmov	r8, r9, d8
 80024aa:	2700      	movs	r7, #0
 80024ac:	e01f      	b.n	80024ee <__kernel_rem_pio2+0xbe>
 80024ae:	42ef      	cmn	r7, r5
 80024b0:	d407      	bmi.n	80024c2 <__kernel_rem_pio2+0x92>
 80024b2:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 80024b6:	f7fd ffe1 	bl	800047c <__aeabi_i2d>
 80024ba:	e8e6 0102 	strd	r0, r1, [r6], #8
 80024be:	3501      	adds	r5, #1
 80024c0:	e7df      	b.n	8002482 <__kernel_rem_pio2+0x52>
 80024c2:	ec51 0b18 	vmov	r0, r1, d8
 80024c6:	e7f8      	b.n	80024ba <__kernel_rem_pio2+0x8a>
 80024c8:	9908      	ldr	r1, [sp, #32]
 80024ca:	9d03      	ldr	r5, [sp, #12]
 80024cc:	e971 2302 	ldrd	r2, r3, [r1, #-8]!
 80024d0:	9108      	str	r1, [sp, #32]
 80024d2:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 80024d6:	9503      	str	r5, [sp, #12]
 80024d8:	f7fe f836 	bl	8000548 <__aeabi_dmul>
 80024dc:	4602      	mov	r2, r0
 80024de:	460b      	mov	r3, r1
 80024e0:	4640      	mov	r0, r8
 80024e2:	4649      	mov	r1, r9
 80024e4:	f7fd fe7e 	bl	80001e4 <__adddf3>
 80024e8:	3701      	adds	r7, #1
 80024ea:	4680      	mov	r8, r0
 80024ec:	4689      	mov	r9, r1
 80024ee:	9b04      	ldr	r3, [sp, #16]
 80024f0:	429f      	cmp	r7, r3
 80024f2:	dde9      	ble.n	80024c8 <__kernel_rem_pio2+0x98>
 80024f4:	e8eb 8902 	strd	r8, r9, [fp], #8
 80024f8:	3601      	adds	r6, #1
 80024fa:	e7c9      	b.n	8002490 <__kernel_rem_pio2+0x60>
 80024fc:	9b00      	ldr	r3, [sp, #0]
 80024fe:	9f00      	ldr	r7, [sp, #0]
 8002500:	aa0c      	add	r2, sp, #48	; 0x30
 8002502:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8002506:	930b      	str	r3, [sp, #44]	; 0x2c
 8002508:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 800250a:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 800250e:	930a      	str	r3, [sp, #40]	; 0x28
 8002510:	ab98      	add	r3, sp, #608	; 0x260
 8002512:	f107 5b00 	add.w	fp, r7, #536870912	; 0x20000000
 8002516:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800251a:	f10b 3bff 	add.w	fp, fp, #4294967295	; 0xffffffff
 800251e:	e953 8928 	ldrd	r8, r9, [r3, #-160]	; 0xa0
 8002522:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8002526:	9308      	str	r3, [sp, #32]
 8002528:	9a08      	ldr	r2, [sp, #32]
 800252a:	ab98      	add	r3, sp, #608	; 0x260
 800252c:	4413      	add	r3, r2
 800252e:	f1a3 0b98 	sub.w	fp, r3, #152	; 0x98
 8002532:	2600      	movs	r6, #0
 8002534:	1bbb      	subs	r3, r7, r6
 8002536:	2b00      	cmp	r3, #0
 8002538:	dc77      	bgt.n	800262a <__kernel_rem_pio2+0x1fa>
 800253a:	ec49 8b10 	vmov	d0, r8, r9
 800253e:	4650      	mov	r0, sl
 8002540:	f000 fc1a 	bl	8002d78 <scalbn>
 8002544:	ec55 4b10 	vmov	r4, r5, d0
 8002548:	2200      	movs	r2, #0
 800254a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 800254e:	ee10 0a10 	vmov	r0, s0
 8002552:	4629      	mov	r1, r5
 8002554:	f7fd fff8 	bl	8000548 <__aeabi_dmul>
 8002558:	ec41 0b10 	vmov	d0, r0, r1
 800255c:	f000 fb7c 	bl	8002c58 <floor>
 8002560:	2200      	movs	r2, #0
 8002562:	ec51 0b10 	vmov	r0, r1, d0
 8002566:	4b7b      	ldr	r3, [pc, #492]	; (8002754 <__kernel_rem_pio2+0x324>)
 8002568:	f7fd ffee 	bl	8000548 <__aeabi_dmul>
 800256c:	4602      	mov	r2, r0
 800256e:	460b      	mov	r3, r1
 8002570:	4620      	mov	r0, r4
 8002572:	4629      	mov	r1, r5
 8002574:	f7fd fe34 	bl	80001e0 <__aeabi_dsub>
 8002578:	460d      	mov	r5, r1
 800257a:	4604      	mov	r4, r0
 800257c:	f7fe fa7e 	bl	8000a7c <__aeabi_d2iz>
 8002580:	9003      	str	r0, [sp, #12]
 8002582:	f7fd ff7b 	bl	800047c <__aeabi_i2d>
 8002586:	4602      	mov	r2, r0
 8002588:	460b      	mov	r3, r1
 800258a:	4620      	mov	r0, r4
 800258c:	4629      	mov	r1, r5
 800258e:	f7fd fe27 	bl	80001e0 <__aeabi_dsub>
 8002592:	f1ba 0f00 	cmp.w	sl, #0
 8002596:	4680      	mov	r8, r0
 8002598:	4689      	mov	r9, r1
 800259a:	dd6b      	ble.n	8002674 <__kernel_rem_pio2+0x244>
 800259c:	1e7a      	subs	r2, r7, #1
 800259e:	ab0c      	add	r3, sp, #48	; 0x30
 80025a0:	f1ca 0118 	rsb	r1, sl, #24
 80025a4:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80025a8:	9c03      	ldr	r4, [sp, #12]
 80025aa:	fa40 f301 	asr.w	r3, r0, r1
 80025ae:	441c      	add	r4, r3
 80025b0:	408b      	lsls	r3, r1
 80025b2:	1ac0      	subs	r0, r0, r3
 80025b4:	ab0c      	add	r3, sp, #48	; 0x30
 80025b6:	9403      	str	r4, [sp, #12]
 80025b8:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 80025bc:	f1ca 0317 	rsb	r3, sl, #23
 80025c0:	fa40 fb03 	asr.w	fp, r0, r3
 80025c4:	f1bb 0f00 	cmp.w	fp, #0
 80025c8:	dd62      	ble.n	8002690 <__kernel_rem_pio2+0x260>
 80025ca:	9b03      	ldr	r3, [sp, #12]
 80025cc:	2200      	movs	r2, #0
 80025ce:	3301      	adds	r3, #1
 80025d0:	9303      	str	r3, [sp, #12]
 80025d2:	4614      	mov	r4, r2
 80025d4:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 80025d8:	4297      	cmp	r7, r2
 80025da:	f300 8089 	bgt.w	80026f0 <__kernel_rem_pio2+0x2c0>
 80025de:	f1ba 0f00 	cmp.w	sl, #0
 80025e2:	dd07      	ble.n	80025f4 <__kernel_rem_pio2+0x1c4>
 80025e4:	f1ba 0f01 	cmp.w	sl, #1
 80025e8:	f000 8096 	beq.w	8002718 <__kernel_rem_pio2+0x2e8>
 80025ec:	f1ba 0f02 	cmp.w	sl, #2
 80025f0:	f000 809c 	beq.w	800272c <__kernel_rem_pio2+0x2fc>
 80025f4:	f1bb 0f02 	cmp.w	fp, #2
 80025f8:	d14a      	bne.n	8002690 <__kernel_rem_pio2+0x260>
 80025fa:	4642      	mov	r2, r8
 80025fc:	464b      	mov	r3, r9
 80025fe:	2000      	movs	r0, #0
 8002600:	4955      	ldr	r1, [pc, #340]	; (8002758 <__kernel_rem_pio2+0x328>)
 8002602:	f7fd fded 	bl	80001e0 <__aeabi_dsub>
 8002606:	4680      	mov	r8, r0
 8002608:	4689      	mov	r9, r1
 800260a:	2c00      	cmp	r4, #0
 800260c:	d040      	beq.n	8002690 <__kernel_rem_pio2+0x260>
 800260e:	4650      	mov	r0, sl
 8002610:	ed9f 0b4d 	vldr	d0, [pc, #308]	; 8002748 <__kernel_rem_pio2+0x318>
 8002614:	f000 fbb0 	bl	8002d78 <scalbn>
 8002618:	4640      	mov	r0, r8
 800261a:	4649      	mov	r1, r9
 800261c:	ec53 2b10 	vmov	r2, r3, d0
 8002620:	f7fd fdde 	bl	80001e0 <__aeabi_dsub>
 8002624:	4680      	mov	r8, r0
 8002626:	4689      	mov	r9, r1
 8002628:	e032      	b.n	8002690 <__kernel_rem_pio2+0x260>
 800262a:	2200      	movs	r2, #0
 800262c:	4b4b      	ldr	r3, [pc, #300]	; (800275c <__kernel_rem_pio2+0x32c>)
 800262e:	4640      	mov	r0, r8
 8002630:	4649      	mov	r1, r9
 8002632:	f7fd ff89 	bl	8000548 <__aeabi_dmul>
 8002636:	f7fe fa21 	bl	8000a7c <__aeabi_d2iz>
 800263a:	f7fd ff1f 	bl	800047c <__aeabi_i2d>
 800263e:	2200      	movs	r2, #0
 8002640:	4b47      	ldr	r3, [pc, #284]	; (8002760 <__kernel_rem_pio2+0x330>)
 8002642:	4604      	mov	r4, r0
 8002644:	460d      	mov	r5, r1
 8002646:	f7fd ff7f 	bl	8000548 <__aeabi_dmul>
 800264a:	4602      	mov	r2, r0
 800264c:	460b      	mov	r3, r1
 800264e:	4640      	mov	r0, r8
 8002650:	4649      	mov	r1, r9
 8002652:	f7fd fdc5 	bl	80001e0 <__aeabi_dsub>
 8002656:	f7fe fa11 	bl	8000a7c <__aeabi_d2iz>
 800265a:	ab0c      	add	r3, sp, #48	; 0x30
 800265c:	4629      	mov	r1, r5
 800265e:	f843 0026 	str.w	r0, [r3, r6, lsl #2]
 8002662:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 8002666:	4620      	mov	r0, r4
 8002668:	f7fd fdbc 	bl	80001e4 <__adddf3>
 800266c:	3601      	adds	r6, #1
 800266e:	4680      	mov	r8, r0
 8002670:	4689      	mov	r9, r1
 8002672:	e75f      	b.n	8002534 <__kernel_rem_pio2+0x104>
 8002674:	d106      	bne.n	8002684 <__kernel_rem_pio2+0x254>
 8002676:	1e7b      	subs	r3, r7, #1
 8002678:	aa0c      	add	r2, sp, #48	; 0x30
 800267a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800267e:	ea4f 5be0 	mov.w	fp, r0, asr #23
 8002682:	e79f      	b.n	80025c4 <__kernel_rem_pio2+0x194>
 8002684:	2200      	movs	r2, #0
 8002686:	4b37      	ldr	r3, [pc, #220]	; (8002764 <__kernel_rem_pio2+0x334>)
 8002688:	f7fe f9e4 	bl	8000a54 <__aeabi_dcmpge>
 800268c:	bb68      	cbnz	r0, 80026ea <__kernel_rem_pio2+0x2ba>
 800268e:	4683      	mov	fp, r0
 8002690:	2200      	movs	r2, #0
 8002692:	2300      	movs	r3, #0
 8002694:	4640      	mov	r0, r8
 8002696:	4649      	mov	r1, r9
 8002698:	f7fe f9be 	bl	8000a18 <__aeabi_dcmpeq>
 800269c:	2800      	cmp	r0, #0
 800269e:	f000 80c1 	beq.w	8002824 <__kernel_rem_pio2+0x3f4>
 80026a2:	1e7c      	subs	r4, r7, #1
 80026a4:	4623      	mov	r3, r4
 80026a6:	2200      	movs	r2, #0
 80026a8:	9900      	ldr	r1, [sp, #0]
 80026aa:	428b      	cmp	r3, r1
 80026ac:	da5c      	bge.n	8002768 <__kernel_rem_pio2+0x338>
 80026ae:	2a00      	cmp	r2, #0
 80026b0:	f040 808b 	bne.w	80027ca <__kernel_rem_pio2+0x39a>
 80026b4:	2401      	movs	r4, #1
 80026b6:	f06f 0203 	mvn.w	r2, #3
 80026ba:	fb02 f304 	mul.w	r3, r2, r4
 80026be:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80026c0:	58cb      	ldr	r3, [r1, r3]
 80026c2:	2b00      	cmp	r3, #0
 80026c4:	d056      	beq.n	8002774 <__kernel_rem_pio2+0x344>
 80026c6:	9b08      	ldr	r3, [sp, #32]
 80026c8:	aa98      	add	r2, sp, #608	; 0x260
 80026ca:	4413      	add	r3, r2
 80026cc:	f1a3 0b90 	sub.w	fp, r3, #144	; 0x90
 80026d0:	9b06      	ldr	r3, [sp, #24]
 80026d2:	19dd      	adds	r5, r3, r7
 80026d4:	ab20      	add	r3, sp, #128	; 0x80
 80026d6:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 80026da:	19e3      	adds	r3, r4, r7
 80026dc:	1c7e      	adds	r6, r7, #1
 80026de:	9303      	str	r3, [sp, #12]
 80026e0:	9b03      	ldr	r3, [sp, #12]
 80026e2:	429e      	cmp	r6, r3
 80026e4:	dd48      	ble.n	8002778 <__kernel_rem_pio2+0x348>
 80026e6:	461f      	mov	r7, r3
 80026e8:	e712      	b.n	8002510 <__kernel_rem_pio2+0xe0>
 80026ea:	f04f 0b02 	mov.w	fp, #2
 80026ee:	e76c      	b.n	80025ca <__kernel_rem_pio2+0x19a>
 80026f0:	ab0c      	add	r3, sp, #48	; 0x30
 80026f2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80026f6:	b94c      	cbnz	r4, 800270c <__kernel_rem_pio2+0x2dc>
 80026f8:	b12b      	cbz	r3, 8002706 <__kernel_rem_pio2+0x2d6>
 80026fa:	a80c      	add	r0, sp, #48	; 0x30
 80026fc:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8002700:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8002704:	2301      	movs	r3, #1
 8002706:	3201      	adds	r2, #1
 8002708:	461c      	mov	r4, r3
 800270a:	e765      	b.n	80025d8 <__kernel_rem_pio2+0x1a8>
 800270c:	a80c      	add	r0, sp, #48	; 0x30
 800270e:	1acb      	subs	r3, r1, r3
 8002710:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8002714:	4623      	mov	r3, r4
 8002716:	e7f6      	b.n	8002706 <__kernel_rem_pio2+0x2d6>
 8002718:	1e7a      	subs	r2, r7, #1
 800271a:	ab0c      	add	r3, sp, #48	; 0x30
 800271c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002720:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8002724:	a90c      	add	r1, sp, #48	; 0x30
 8002726:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 800272a:	e763      	b.n	80025f4 <__kernel_rem_pio2+0x1c4>
 800272c:	1e7a      	subs	r2, r7, #1
 800272e:	ab0c      	add	r3, sp, #48	; 0x30
 8002730:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002734:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8002738:	e7f4      	b.n	8002724 <__kernel_rem_pio2+0x2f4>
 800273a:	bf00      	nop
 800273c:	f3af 8000 	nop.w
	...
 800274c:	3ff00000 	.word	0x3ff00000
 8002750:	080030a0 	.word	0x080030a0
 8002754:	40200000 	.word	0x40200000
 8002758:	3ff00000 	.word	0x3ff00000
 800275c:	3e700000 	.word	0x3e700000
 8002760:	41700000 	.word	0x41700000
 8002764:	3fe00000 	.word	0x3fe00000
 8002768:	a90c      	add	r1, sp, #48	; 0x30
 800276a:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 800276e:	3b01      	subs	r3, #1
 8002770:	430a      	orrs	r2, r1
 8002772:	e799      	b.n	80026a8 <__kernel_rem_pio2+0x278>
 8002774:	3401      	adds	r4, #1
 8002776:	e7a0      	b.n	80026ba <__kernel_rem_pio2+0x28a>
 8002778:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800277a:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 800277e:	f7fd fe7d 	bl	800047c <__aeabi_i2d>
 8002782:	e8e5 0102 	strd	r0, r1, [r5], #8
 8002786:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002788:	9508      	str	r5, [sp, #32]
 800278a:	461c      	mov	r4, r3
 800278c:	2700      	movs	r7, #0
 800278e:	f04f 0800 	mov.w	r8, #0
 8002792:	f04f 0900 	mov.w	r9, #0
 8002796:	9b04      	ldr	r3, [sp, #16]
 8002798:	429f      	cmp	r7, r3
 800279a:	dd03      	ble.n	80027a4 <__kernel_rem_pio2+0x374>
 800279c:	e8eb 8902 	strd	r8, r9, [fp], #8
 80027a0:	3601      	adds	r6, #1
 80027a2:	e79d      	b.n	80026e0 <__kernel_rem_pio2+0x2b0>
 80027a4:	9908      	ldr	r1, [sp, #32]
 80027a6:	e971 2302 	ldrd	r2, r3, [r1, #-8]!
 80027aa:	9108      	str	r1, [sp, #32]
 80027ac:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 80027b0:	f7fd feca 	bl	8000548 <__aeabi_dmul>
 80027b4:	4602      	mov	r2, r0
 80027b6:	460b      	mov	r3, r1
 80027b8:	4640      	mov	r0, r8
 80027ba:	4649      	mov	r1, r9
 80027bc:	f7fd fd12 	bl	80001e4 <__adddf3>
 80027c0:	3701      	adds	r7, #1
 80027c2:	4680      	mov	r8, r0
 80027c4:	4689      	mov	r9, r1
 80027c6:	e7e6      	b.n	8002796 <__kernel_rem_pio2+0x366>
 80027c8:	3c01      	subs	r4, #1
 80027ca:	ab0c      	add	r3, sp, #48	; 0x30
 80027cc:	f1aa 0a18 	sub.w	sl, sl, #24
 80027d0:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 80027d4:	2b00      	cmp	r3, #0
 80027d6:	d0f7      	beq.n	80027c8 <__kernel_rem_pio2+0x398>
 80027d8:	4650      	mov	r0, sl
 80027da:	ed9f 0bb5 	vldr	d0, [pc, #724]	; 8002ab0 <__kernel_rem_pio2+0x680>
 80027de:	f000 facb 	bl	8002d78 <scalbn>
 80027e2:	00e5      	lsls	r5, r4, #3
 80027e4:	ab98      	add	r3, sp, #608	; 0x260
 80027e6:	eb03 0905 	add.w	r9, r3, r5
 80027ea:	ec57 6b10 	vmov	r6, r7, d0
 80027ee:	f1a9 0998 	sub.w	r9, r9, #152	; 0x98
 80027f2:	46a0      	mov	r8, r4
 80027f4:	f1b8 0f00 	cmp.w	r8, #0
 80027f8:	da4d      	bge.n	8002896 <__kernel_rem_pio2+0x466>
 80027fa:	ed9f 8baf 	vldr	d8, [pc, #700]	; 8002ab8 <__kernel_rem_pio2+0x688>
 80027fe:	f50d 7a90 	add.w	sl, sp, #288	; 0x120
 8002802:	2300      	movs	r3, #0
 8002804:	9304      	str	r3, [sp, #16]
 8002806:	4657      	mov	r7, sl
 8002808:	9b04      	ldr	r3, [sp, #16]
 800280a:	ebb4 0903 	subs.w	r9, r4, r3
 800280e:	d476      	bmi.n	80028fe <__kernel_rem_pio2+0x4ce>
 8002810:	4bab      	ldr	r3, [pc, #684]	; (8002ac0 <__kernel_rem_pio2+0x690>)
 8002812:	461e      	mov	r6, r3
 8002814:	ab70      	add	r3, sp, #448	; 0x1c0
 8002816:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 800281a:	ed8d 8b06 	vstr	d8, [sp, #24]
 800281e:	f04f 0800 	mov.w	r8, #0
 8002822:	e05e      	b.n	80028e2 <__kernel_rem_pio2+0x4b2>
 8002824:	f1ca 0000 	rsb	r0, sl, #0
 8002828:	ec49 8b10 	vmov	d0, r8, r9
 800282c:	f000 faa4 	bl	8002d78 <scalbn>
 8002830:	ec55 4b10 	vmov	r4, r5, d0
 8002834:	2200      	movs	r2, #0
 8002836:	4ba3      	ldr	r3, [pc, #652]	; (8002ac4 <__kernel_rem_pio2+0x694>)
 8002838:	ee10 0a10 	vmov	r0, s0
 800283c:	4629      	mov	r1, r5
 800283e:	f7fe f909 	bl	8000a54 <__aeabi_dcmpge>
 8002842:	b1f8      	cbz	r0, 8002884 <__kernel_rem_pio2+0x454>
 8002844:	2200      	movs	r2, #0
 8002846:	4ba0      	ldr	r3, [pc, #640]	; (8002ac8 <__kernel_rem_pio2+0x698>)
 8002848:	4620      	mov	r0, r4
 800284a:	4629      	mov	r1, r5
 800284c:	f7fd fe7c 	bl	8000548 <__aeabi_dmul>
 8002850:	f7fe f914 	bl	8000a7c <__aeabi_d2iz>
 8002854:	4606      	mov	r6, r0
 8002856:	f7fd fe11 	bl	800047c <__aeabi_i2d>
 800285a:	2200      	movs	r2, #0
 800285c:	4b99      	ldr	r3, [pc, #612]	; (8002ac4 <__kernel_rem_pio2+0x694>)
 800285e:	f7fd fe73 	bl	8000548 <__aeabi_dmul>
 8002862:	460b      	mov	r3, r1
 8002864:	4602      	mov	r2, r0
 8002866:	4629      	mov	r1, r5
 8002868:	4620      	mov	r0, r4
 800286a:	f7fd fcb9 	bl	80001e0 <__aeabi_dsub>
 800286e:	f7fe f905 	bl	8000a7c <__aeabi_d2iz>
 8002872:	1c7c      	adds	r4, r7, #1
 8002874:	ab0c      	add	r3, sp, #48	; 0x30
 8002876:	f10a 0a18 	add.w	sl, sl, #24
 800287a:	f843 0027 	str.w	r0, [r3, r7, lsl #2]
 800287e:	f843 6024 	str.w	r6, [r3, r4, lsl #2]
 8002882:	e7a9      	b.n	80027d8 <__kernel_rem_pio2+0x3a8>
 8002884:	4620      	mov	r0, r4
 8002886:	4629      	mov	r1, r5
 8002888:	f7fe f8f8 	bl	8000a7c <__aeabi_d2iz>
 800288c:	ab0c      	add	r3, sp, #48	; 0x30
 800288e:	463c      	mov	r4, r7
 8002890:	f843 0027 	str.w	r0, [r3, r7, lsl #2]
 8002894:	e7a0      	b.n	80027d8 <__kernel_rem_pio2+0x3a8>
 8002896:	ab0c      	add	r3, sp, #48	; 0x30
 8002898:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 800289c:	f7fd fdee 	bl	800047c <__aeabi_i2d>
 80028a0:	4632      	mov	r2, r6
 80028a2:	463b      	mov	r3, r7
 80028a4:	f7fd fe50 	bl	8000548 <__aeabi_dmul>
 80028a8:	2200      	movs	r2, #0
 80028aa:	e969 0102 	strd	r0, r1, [r9, #-8]!
 80028ae:	4b86      	ldr	r3, [pc, #536]	; (8002ac8 <__kernel_rem_pio2+0x698>)
 80028b0:	4630      	mov	r0, r6
 80028b2:	4639      	mov	r1, r7
 80028b4:	f7fd fe48 	bl	8000548 <__aeabi_dmul>
 80028b8:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 80028bc:	4606      	mov	r6, r0
 80028be:	460f      	mov	r7, r1
 80028c0:	e798      	b.n	80027f4 <__kernel_rem_pio2+0x3c4>
 80028c2:	e8f9 2302 	ldrd	r2, r3, [r9], #8
 80028c6:	e8f6 0102 	ldrd	r0, r1, [r6], #8
 80028ca:	f7fd fe3d 	bl	8000548 <__aeabi_dmul>
 80028ce:	4602      	mov	r2, r0
 80028d0:	460b      	mov	r3, r1
 80028d2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80028d6:	f7fd fc85 	bl	80001e4 <__adddf3>
 80028da:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80028de:	f108 0801 	add.w	r8, r8, #1
 80028e2:	9b00      	ldr	r3, [sp, #0]
 80028e4:	4598      	cmp	r8, r3
 80028e6:	dc02      	bgt.n	80028ee <__kernel_rem_pio2+0x4be>
 80028e8:	9b04      	ldr	r3, [sp, #16]
 80028ea:	4598      	cmp	r8, r3
 80028ec:	dde9      	ble.n	80028c2 <__kernel_rem_pio2+0x492>
 80028ee:	9b04      	ldr	r3, [sp, #16]
 80028f0:	ed9d 7b06 	vldr	d7, [sp, #24]
 80028f4:	3301      	adds	r3, #1
 80028f6:	ecaa 7b02 	vstmia	sl!, {d7}
 80028fa:	9304      	str	r3, [sp, #16]
 80028fc:	e784      	b.n	8002808 <__kernel_rem_pio2+0x3d8>
 80028fe:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 8002900:	2b03      	cmp	r3, #3
 8002902:	d85d      	bhi.n	80029c0 <__kernel_rem_pio2+0x590>
 8002904:	e8df f003 	tbb	[pc, r3]
 8002908:	0226264b 	.word	0x0226264b
 800290c:	ab98      	add	r3, sp, #608	; 0x260
 800290e:	441d      	add	r5, r3
 8002910:	f5a5 759c 	sub.w	r5, r5, #312	; 0x138
 8002914:	462e      	mov	r6, r5
 8002916:	46a2      	mov	sl, r4
 8002918:	f1ba 0f00 	cmp.w	sl, #0
 800291c:	dc6e      	bgt.n	80029fc <__kernel_rem_pio2+0x5cc>
 800291e:	462e      	mov	r6, r5
 8002920:	46a2      	mov	sl, r4
 8002922:	f1ba 0f01 	cmp.w	sl, #1
 8002926:	f300 808a 	bgt.w	8002a3e <__kernel_rem_pio2+0x60e>
 800292a:	2000      	movs	r0, #0
 800292c:	2100      	movs	r1, #0
 800292e:	2c01      	cmp	r4, #1
 8002930:	f300 80a6 	bgt.w	8002a80 <__kernel_rem_pio2+0x650>
 8002934:	f1bb 0f00 	cmp.w	fp, #0
 8002938:	f040 80a8 	bne.w	8002a8c <__kernel_rem_pio2+0x65c>
 800293c:	e9dd 2348 	ldrd	r2, r3, [sp, #288]	; 0x120
 8002940:	9c02      	ldr	r4, [sp, #8]
 8002942:	e9c4 2300 	strd	r2, r3, [r4]
 8002946:	e9dd 234a 	ldrd	r2, r3, [sp, #296]	; 0x128
 800294a:	e9c4 0104 	strd	r0, r1, [r4, #16]
 800294e:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8002952:	e035      	b.n	80029c0 <__kernel_rem_pio2+0x590>
 8002954:	3508      	adds	r5, #8
 8002956:	ab48      	add	r3, sp, #288	; 0x120
 8002958:	441d      	add	r5, r3
 800295a:	4626      	mov	r6, r4
 800295c:	2000      	movs	r0, #0
 800295e:	2100      	movs	r1, #0
 8002960:	2e00      	cmp	r6, #0
 8002962:	da3c      	bge.n	80029de <__kernel_rem_pio2+0x5ae>
 8002964:	f1bb 0f00 	cmp.w	fp, #0
 8002968:	d03f      	beq.n	80029ea <__kernel_rem_pio2+0x5ba>
 800296a:	4602      	mov	r2, r0
 800296c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002970:	9d02      	ldr	r5, [sp, #8]
 8002972:	e9c5 2300 	strd	r2, r3, [r5]
 8002976:	4602      	mov	r2, r0
 8002978:	460b      	mov	r3, r1
 800297a:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	; 0x120
 800297e:	f7fd fc2f 	bl	80001e0 <__aeabi_dsub>
 8002982:	ae4a      	add	r6, sp, #296	; 0x128
 8002984:	2501      	movs	r5, #1
 8002986:	42ac      	cmp	r4, r5
 8002988:	da32      	bge.n	80029f0 <__kernel_rem_pio2+0x5c0>
 800298a:	f1bb 0f00 	cmp.w	fp, #0
 800298e:	d002      	beq.n	8002996 <__kernel_rem_pio2+0x566>
 8002990:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002994:	4619      	mov	r1, r3
 8002996:	9b02      	ldr	r3, [sp, #8]
 8002998:	e9c3 0102 	strd	r0, r1, [r3, #8]
 800299c:	e010      	b.n	80029c0 <__kernel_rem_pio2+0x590>
 800299e:	ab98      	add	r3, sp, #608	; 0x260
 80029a0:	441d      	add	r5, r3
 80029a2:	f5a5 759c 	sub.w	r5, r5, #312	; 0x138
 80029a6:	2000      	movs	r0, #0
 80029a8:	2100      	movs	r1, #0
 80029aa:	2c00      	cmp	r4, #0
 80029ac:	da11      	bge.n	80029d2 <__kernel_rem_pio2+0x5a2>
 80029ae:	f1bb 0f00 	cmp.w	fp, #0
 80029b2:	d002      	beq.n	80029ba <__kernel_rem_pio2+0x58a>
 80029b4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80029b8:	4619      	mov	r1, r3
 80029ba:	9b02      	ldr	r3, [sp, #8]
 80029bc:	e9c3 0100 	strd	r0, r1, [r3]
 80029c0:	9b03      	ldr	r3, [sp, #12]
 80029c2:	f003 0007 	and.w	r0, r3, #7
 80029c6:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
 80029ca:	ecbd 8b02 	vpop	{d8}
 80029ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80029d2:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 80029d6:	f7fd fc05 	bl	80001e4 <__adddf3>
 80029da:	3c01      	subs	r4, #1
 80029dc:	e7e5      	b.n	80029aa <__kernel_rem_pio2+0x57a>
 80029de:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 80029e2:	f7fd fbff 	bl	80001e4 <__adddf3>
 80029e6:	3e01      	subs	r6, #1
 80029e8:	e7ba      	b.n	8002960 <__kernel_rem_pio2+0x530>
 80029ea:	4602      	mov	r2, r0
 80029ec:	460b      	mov	r3, r1
 80029ee:	e7bf      	b.n	8002970 <__kernel_rem_pio2+0x540>
 80029f0:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 80029f4:	f7fd fbf6 	bl	80001e4 <__adddf3>
 80029f8:	3501      	adds	r5, #1
 80029fa:	e7c4      	b.n	8002986 <__kernel_rem_pio2+0x556>
 80029fc:	ed16 7b02 	vldr	d7, [r6, #-8]
 8002a00:	e956 8904 	ldrd	r8, r9, [r6, #-16]
 8002a04:	ec53 2b17 	vmov	r2, r3, d7
 8002a08:	4640      	mov	r0, r8
 8002a0a:	4649      	mov	r1, r9
 8002a0c:	ed8d 7b00 	vstr	d7, [sp]
 8002a10:	f7fd fbe8 	bl	80001e4 <__adddf3>
 8002a14:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002a18:	4602      	mov	r2, r0
 8002a1a:	460b      	mov	r3, r1
 8002a1c:	4640      	mov	r0, r8
 8002a1e:	4649      	mov	r1, r9
 8002a20:	f7fd fbde 	bl	80001e0 <__aeabi_dsub>
 8002a24:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002a28:	f7fd fbdc 	bl	80001e4 <__adddf3>
 8002a2c:	ed9d 7b04 	vldr	d7, [sp, #16]
 8002a30:	e966 0102 	strd	r0, r1, [r6, #-8]!
 8002a34:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8002a38:	ed06 7b02 	vstr	d7, [r6, #-8]
 8002a3c:	e76c      	b.n	8002918 <__kernel_rem_pio2+0x4e8>
 8002a3e:	ed16 7b02 	vldr	d7, [r6, #-8]
 8002a42:	e956 8904 	ldrd	r8, r9, [r6, #-16]
 8002a46:	ec53 2b17 	vmov	r2, r3, d7
 8002a4a:	4640      	mov	r0, r8
 8002a4c:	4649      	mov	r1, r9
 8002a4e:	ed8d 7b00 	vstr	d7, [sp]
 8002a52:	f7fd fbc7 	bl	80001e4 <__adddf3>
 8002a56:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002a5a:	4602      	mov	r2, r0
 8002a5c:	460b      	mov	r3, r1
 8002a5e:	4640      	mov	r0, r8
 8002a60:	4649      	mov	r1, r9
 8002a62:	f7fd fbbd 	bl	80001e0 <__aeabi_dsub>
 8002a66:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002a6a:	f7fd fbbb 	bl	80001e4 <__adddf3>
 8002a6e:	ed9d 7b04 	vldr	d7, [sp, #16]
 8002a72:	e966 0102 	strd	r0, r1, [r6, #-8]!
 8002a76:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8002a7a:	ed06 7b02 	vstr	d7, [r6, #-8]
 8002a7e:	e750      	b.n	8002922 <__kernel_rem_pio2+0x4f2>
 8002a80:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
 8002a84:	f7fd fbae 	bl	80001e4 <__adddf3>
 8002a88:	3c01      	subs	r4, #1
 8002a8a:	e750      	b.n	800292e <__kernel_rem_pio2+0x4fe>
 8002a8c:	9a02      	ldr	r2, [sp, #8]
 8002a8e:	683b      	ldr	r3, [r7, #0]
 8002a90:	6013      	str	r3, [r2, #0]
 8002a92:	687b      	ldr	r3, [r7, #4]
 8002a94:	6110      	str	r0, [r2, #16]
 8002a96:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8002a9a:	6053      	str	r3, [r2, #4]
 8002a9c:	68bb      	ldr	r3, [r7, #8]
 8002a9e:	6093      	str	r3, [r2, #8]
 8002aa0:	68fb      	ldr	r3, [r7, #12]
 8002aa2:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8002aa6:	60d3      	str	r3, [r2, #12]
 8002aa8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8002aac:	6153      	str	r3, [r2, #20]
 8002aae:	e787      	b.n	80029c0 <__kernel_rem_pio2+0x590>
 8002ab0:	00000000 	.word	0x00000000
 8002ab4:	3ff00000 	.word	0x3ff00000
	...
 8002ac0:	08003060 	.word	0x08003060
 8002ac4:	41700000 	.word	0x41700000
 8002ac8:	3e700000 	.word	0x3e700000
 8002acc:	00000000 	.word	0x00000000

08002ad0 <__kernel_sin>:
 8002ad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ad4:	ec55 4b10 	vmov	r4, r5, d0
 8002ad8:	b085      	sub	sp, #20
 8002ada:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8002ade:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 8002ae2:	ed8d 1b00 	vstr	d1, [sp]
 8002ae6:	9002      	str	r0, [sp, #8]
 8002ae8:	da06      	bge.n	8002af8 <__kernel_sin+0x28>
 8002aea:	ee10 0a10 	vmov	r0, s0
 8002aee:	4629      	mov	r1, r5
 8002af0:	f7fd ffc4 	bl	8000a7c <__aeabi_d2iz>
 8002af4:	2800      	cmp	r0, #0
 8002af6:	d051      	beq.n	8002b9c <__kernel_sin+0xcc>
 8002af8:	4622      	mov	r2, r4
 8002afa:	462b      	mov	r3, r5
 8002afc:	4620      	mov	r0, r4
 8002afe:	4629      	mov	r1, r5
 8002b00:	f7fd fd22 	bl	8000548 <__aeabi_dmul>
 8002b04:	4682      	mov	sl, r0
 8002b06:	468b      	mov	fp, r1
 8002b08:	4602      	mov	r2, r0
 8002b0a:	460b      	mov	r3, r1
 8002b0c:	4620      	mov	r0, r4
 8002b0e:	4629      	mov	r1, r5
 8002b10:	f7fd fd1a 	bl	8000548 <__aeabi_dmul>
 8002b14:	a341      	add	r3, pc, #260	; (adr r3, 8002c1c <__kernel_sin+0x14c>)
 8002b16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b1a:	4680      	mov	r8, r0
 8002b1c:	4689      	mov	r9, r1
 8002b1e:	4650      	mov	r0, sl
 8002b20:	4659      	mov	r1, fp
 8002b22:	f7fd fd11 	bl	8000548 <__aeabi_dmul>
 8002b26:	a33f      	add	r3, pc, #252	; (adr r3, 8002c24 <__kernel_sin+0x154>)
 8002b28:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b2c:	f7fd fb58 	bl	80001e0 <__aeabi_dsub>
 8002b30:	4652      	mov	r2, sl
 8002b32:	465b      	mov	r3, fp
 8002b34:	f7fd fd08 	bl	8000548 <__aeabi_dmul>
 8002b38:	a33c      	add	r3, pc, #240	; (adr r3, 8002c2c <__kernel_sin+0x15c>)
 8002b3a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b3e:	f7fd fb51 	bl	80001e4 <__adddf3>
 8002b42:	4652      	mov	r2, sl
 8002b44:	465b      	mov	r3, fp
 8002b46:	f7fd fcff 	bl	8000548 <__aeabi_dmul>
 8002b4a:	a33a      	add	r3, pc, #232	; (adr r3, 8002c34 <__kernel_sin+0x164>)
 8002b4c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b50:	f7fd fb46 	bl	80001e0 <__aeabi_dsub>
 8002b54:	4652      	mov	r2, sl
 8002b56:	465b      	mov	r3, fp
 8002b58:	f7fd fcf6 	bl	8000548 <__aeabi_dmul>
 8002b5c:	a337      	add	r3, pc, #220	; (adr r3, 8002c3c <__kernel_sin+0x16c>)
 8002b5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b62:	f7fd fb3f 	bl	80001e4 <__adddf3>
 8002b66:	9b02      	ldr	r3, [sp, #8]
 8002b68:	4606      	mov	r6, r0
 8002b6a:	460f      	mov	r7, r1
 8002b6c:	b9db      	cbnz	r3, 8002ba6 <__kernel_sin+0xd6>
 8002b6e:	4602      	mov	r2, r0
 8002b70:	460b      	mov	r3, r1
 8002b72:	4650      	mov	r0, sl
 8002b74:	4659      	mov	r1, fp
 8002b76:	f7fd fce7 	bl	8000548 <__aeabi_dmul>
 8002b7a:	a325      	add	r3, pc, #148	; (adr r3, 8002c10 <__kernel_sin+0x140>)
 8002b7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002b80:	f7fd fb2e 	bl	80001e0 <__aeabi_dsub>
 8002b84:	4642      	mov	r2, r8
 8002b86:	464b      	mov	r3, r9
 8002b88:	f7fd fcde 	bl	8000548 <__aeabi_dmul>
 8002b8c:	4602      	mov	r2, r0
 8002b8e:	460b      	mov	r3, r1
 8002b90:	4620      	mov	r0, r4
 8002b92:	4629      	mov	r1, r5
 8002b94:	f7fd fb26 	bl	80001e4 <__adddf3>
 8002b98:	4604      	mov	r4, r0
 8002b9a:	460d      	mov	r5, r1
 8002b9c:	ec45 4b10 	vmov	d0, r4, r5
 8002ba0:	b005      	add	sp, #20
 8002ba2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002ba6:	2200      	movs	r2, #0
 8002ba8:	4b1b      	ldr	r3, [pc, #108]	; (8002c18 <__kernel_sin+0x148>)
 8002baa:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002bae:	f7fd fccb 	bl	8000548 <__aeabi_dmul>
 8002bb2:	4632      	mov	r2, r6
 8002bb4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002bb8:	463b      	mov	r3, r7
 8002bba:	4640      	mov	r0, r8
 8002bbc:	4649      	mov	r1, r9
 8002bbe:	f7fd fcc3 	bl	8000548 <__aeabi_dmul>
 8002bc2:	4602      	mov	r2, r0
 8002bc4:	460b      	mov	r3, r1
 8002bc6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002bca:	f7fd fb09 	bl	80001e0 <__aeabi_dsub>
 8002bce:	4652      	mov	r2, sl
 8002bd0:	465b      	mov	r3, fp
 8002bd2:	f7fd fcb9 	bl	8000548 <__aeabi_dmul>
 8002bd6:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002bda:	f7fd fb01 	bl	80001e0 <__aeabi_dsub>
 8002bde:	a30c      	add	r3, pc, #48	; (adr r3, 8002c10 <__kernel_sin+0x140>)
 8002be0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002be4:	4606      	mov	r6, r0
 8002be6:	460f      	mov	r7, r1
 8002be8:	4640      	mov	r0, r8
 8002bea:	4649      	mov	r1, r9
 8002bec:	f7fd fcac 	bl	8000548 <__aeabi_dmul>
 8002bf0:	4602      	mov	r2, r0
 8002bf2:	460b      	mov	r3, r1
 8002bf4:	4630      	mov	r0, r6
 8002bf6:	4639      	mov	r1, r7
 8002bf8:	f7fd faf4 	bl	80001e4 <__adddf3>
 8002bfc:	4602      	mov	r2, r0
 8002bfe:	460b      	mov	r3, r1
 8002c00:	4620      	mov	r0, r4
 8002c02:	4629      	mov	r1, r5
 8002c04:	f7fd faec 	bl	80001e0 <__aeabi_dsub>
 8002c08:	e7c6      	b.n	8002b98 <__kernel_sin+0xc8>
 8002c0a:	bf00      	nop
 8002c0c:	f3af 8000 	nop.w
 8002c10:	55555549 	.word	0x55555549
 8002c14:	3fc55555 	.word	0x3fc55555
 8002c18:	3fe00000 	.word	0x3fe00000
 8002c1c:	5acfd57c 	.word	0x5acfd57c
 8002c20:	3de5d93a 	.word	0x3de5d93a
 8002c24:	8a2b9ceb 	.word	0x8a2b9ceb
 8002c28:	3e5ae5e6 	.word	0x3e5ae5e6
 8002c2c:	57b1fe7d 	.word	0x57b1fe7d
 8002c30:	3ec71de3 	.word	0x3ec71de3
 8002c34:	19c161d5 	.word	0x19c161d5
 8002c38:	3f2a01a0 	.word	0x3f2a01a0
 8002c3c:	1110f8a6 	.word	0x1110f8a6
 8002c40:	3f811111 	.word	0x3f811111

08002c44 <fabs>:
 8002c44:	ec53 2b10 	vmov	r2, r3, d0
 8002c48:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002c4c:	ec43 2b10 	vmov	d0, r2, r3
 8002c50:	4770      	bx	lr
 8002c52:	0000      	movs	r0, r0
 8002c54:	0000      	movs	r0, r0
	...

08002c58 <floor>:
 8002c58:	ec51 0b10 	vmov	r0, r1, d0
 8002c5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c60:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8002c64:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8002c68:	2e13      	cmp	r6, #19
 8002c6a:	ee10 8a10 	vmov	r8, s0
 8002c6e:	460c      	mov	r4, r1
 8002c70:	ee10 5a10 	vmov	r5, s0
 8002c74:	dc35      	bgt.n	8002ce2 <floor+0x8a>
 8002c76:	2e00      	cmp	r6, #0
 8002c78:	da17      	bge.n	8002caa <floor+0x52>
 8002c7a:	a335      	add	r3, pc, #212	; (adr r3, 8002d50 <floor+0xf8>)
 8002c7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c80:	f7fd fab0 	bl	80001e4 <__adddf3>
 8002c84:	2200      	movs	r2, #0
 8002c86:	2300      	movs	r3, #0
 8002c88:	f7fd feee 	bl	8000a68 <__aeabi_dcmpgt>
 8002c8c:	b150      	cbz	r0, 8002ca4 <floor+0x4c>
 8002c8e:	2c00      	cmp	r4, #0
 8002c90:	da5a      	bge.n	8002d48 <floor+0xf0>
 8002c92:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8002c96:	ea53 0308 	orrs.w	r3, r3, r8
 8002c9a:	4b2f      	ldr	r3, [pc, #188]	; (8002d58 <floor+0x100>)
 8002c9c:	f04f 0500 	mov.w	r5, #0
 8002ca0:	bf18      	it	ne
 8002ca2:	461c      	movne	r4, r3
 8002ca4:	4621      	mov	r1, r4
 8002ca6:	4628      	mov	r0, r5
 8002ca8:	e025      	b.n	8002cf6 <floor+0x9e>
 8002caa:	4f2c      	ldr	r7, [pc, #176]	; (8002d5c <floor+0x104>)
 8002cac:	4137      	asrs	r7, r6
 8002cae:	ea01 0307 	and.w	r3, r1, r7
 8002cb2:	4303      	orrs	r3, r0
 8002cb4:	d01f      	beq.n	8002cf6 <floor+0x9e>
 8002cb6:	a326      	add	r3, pc, #152	; (adr r3, 8002d50 <floor+0xf8>)
 8002cb8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002cbc:	f7fd fa92 	bl	80001e4 <__adddf3>
 8002cc0:	2200      	movs	r2, #0
 8002cc2:	2300      	movs	r3, #0
 8002cc4:	f7fd fed0 	bl	8000a68 <__aeabi_dcmpgt>
 8002cc8:	2800      	cmp	r0, #0
 8002cca:	d0eb      	beq.n	8002ca4 <floor+0x4c>
 8002ccc:	2c00      	cmp	r4, #0
 8002cce:	bfbe      	ittt	lt
 8002cd0:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8002cd4:	fa43 f606 	asrlt.w	r6, r3, r6
 8002cd8:	19a4      	addlt	r4, r4, r6
 8002cda:	ea24 0407 	bic.w	r4, r4, r7
 8002cde:	2500      	movs	r5, #0
 8002ce0:	e7e0      	b.n	8002ca4 <floor+0x4c>
 8002ce2:	2e33      	cmp	r6, #51	; 0x33
 8002ce4:	dd0b      	ble.n	8002cfe <floor+0xa6>
 8002ce6:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8002cea:	d104      	bne.n	8002cf6 <floor+0x9e>
 8002cec:	ee10 2a10 	vmov	r2, s0
 8002cf0:	460b      	mov	r3, r1
 8002cf2:	f7fd fa77 	bl	80001e4 <__adddf3>
 8002cf6:	ec41 0b10 	vmov	d0, r0, r1
 8002cfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002cfe:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8002d02:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002d06:	fa23 f707 	lsr.w	r7, r3, r7
 8002d0a:	4238      	tst	r0, r7
 8002d0c:	d0f3      	beq.n	8002cf6 <floor+0x9e>
 8002d0e:	a310      	add	r3, pc, #64	; (adr r3, 8002d50 <floor+0xf8>)
 8002d10:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d14:	f7fd fa66 	bl	80001e4 <__adddf3>
 8002d18:	2200      	movs	r2, #0
 8002d1a:	2300      	movs	r3, #0
 8002d1c:	f7fd fea4 	bl	8000a68 <__aeabi_dcmpgt>
 8002d20:	2800      	cmp	r0, #0
 8002d22:	d0bf      	beq.n	8002ca4 <floor+0x4c>
 8002d24:	2c00      	cmp	r4, #0
 8002d26:	da02      	bge.n	8002d2e <floor+0xd6>
 8002d28:	2e14      	cmp	r6, #20
 8002d2a:	d103      	bne.n	8002d34 <floor+0xdc>
 8002d2c:	3401      	adds	r4, #1
 8002d2e:	ea25 0507 	bic.w	r5, r5, r7
 8002d32:	e7b7      	b.n	8002ca4 <floor+0x4c>
 8002d34:	2301      	movs	r3, #1
 8002d36:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8002d3a:	fa03 f606 	lsl.w	r6, r3, r6
 8002d3e:	4435      	add	r5, r6
 8002d40:	45a8      	cmp	r8, r5
 8002d42:	bf88      	it	hi
 8002d44:	18e4      	addhi	r4, r4, r3
 8002d46:	e7f2      	b.n	8002d2e <floor+0xd6>
 8002d48:	2500      	movs	r5, #0
 8002d4a:	462c      	mov	r4, r5
 8002d4c:	e7aa      	b.n	8002ca4 <floor+0x4c>
 8002d4e:	bf00      	nop
 8002d50:	8800759c 	.word	0x8800759c
 8002d54:	7e37e43c 	.word	0x7e37e43c
 8002d58:	bff00000 	.word	0xbff00000
 8002d5c:	000fffff 	.word	0x000fffff

08002d60 <matherr>:
 8002d60:	2000      	movs	r0, #0
 8002d62:	4770      	bx	lr
 8002d64:	0000      	movs	r0, r0
	...

08002d68 <nan>:
 8002d68:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8002d70 <nan+0x8>
 8002d6c:	4770      	bx	lr
 8002d6e:	bf00      	nop
 8002d70:	00000000 	.word	0x00000000
 8002d74:	7ff80000 	.word	0x7ff80000

08002d78 <scalbn>:
 8002d78:	b570      	push	{r4, r5, r6, lr}
 8002d7a:	ec55 4b10 	vmov	r4, r5, d0
 8002d7e:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8002d82:	4606      	mov	r6, r0
 8002d84:	462b      	mov	r3, r5
 8002d86:	b9b2      	cbnz	r2, 8002db6 <scalbn+0x3e>
 8002d88:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8002d8c:	4323      	orrs	r3, r4
 8002d8e:	d03c      	beq.n	8002e0a <scalbn+0x92>
 8002d90:	2200      	movs	r2, #0
 8002d92:	4b33      	ldr	r3, [pc, #204]	; (8002e60 <scalbn+0xe8>)
 8002d94:	4629      	mov	r1, r5
 8002d96:	ee10 0a10 	vmov	r0, s0
 8002d9a:	f7fd fbd5 	bl	8000548 <__aeabi_dmul>
 8002d9e:	4a31      	ldr	r2, [pc, #196]	; (8002e64 <scalbn+0xec>)
 8002da0:	4296      	cmp	r6, r2
 8002da2:	4604      	mov	r4, r0
 8002da4:	460d      	mov	r5, r1
 8002da6:	460b      	mov	r3, r1
 8002da8:	da13      	bge.n	8002dd2 <scalbn+0x5a>
 8002daa:	a329      	add	r3, pc, #164	; (adr r3, 8002e50 <scalbn+0xd8>)
 8002dac:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002db0:	f7fd fbca 	bl	8000548 <__aeabi_dmul>
 8002db4:	e00a      	b.n	8002dcc <scalbn+0x54>
 8002db6:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8002dba:	428a      	cmp	r2, r1
 8002dbc:	d10c      	bne.n	8002dd8 <scalbn+0x60>
 8002dbe:	ee10 2a10 	vmov	r2, s0
 8002dc2:	462b      	mov	r3, r5
 8002dc4:	4620      	mov	r0, r4
 8002dc6:	4629      	mov	r1, r5
 8002dc8:	f7fd fa0c 	bl	80001e4 <__adddf3>
 8002dcc:	4604      	mov	r4, r0
 8002dce:	460d      	mov	r5, r1
 8002dd0:	e01b      	b.n	8002e0a <scalbn+0x92>
 8002dd2:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8002dd6:	3a36      	subs	r2, #54	; 0x36
 8002dd8:	4432      	add	r2, r6
 8002dda:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8002dde:	428a      	cmp	r2, r1
 8002de0:	dd0b      	ble.n	8002dfa <scalbn+0x82>
 8002de2:	ec45 4b11 	vmov	d1, r4, r5
 8002de6:	ed9f 0b1c 	vldr	d0, [pc, #112]	; 8002e58 <scalbn+0xe0>
 8002dea:	f000 f846 	bl	8002e7a <copysign>
 8002dee:	a31a      	add	r3, pc, #104	; (adr r3, 8002e58 <scalbn+0xe0>)
 8002df0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002df4:	ec51 0b10 	vmov	r0, r1, d0
 8002df8:	e7da      	b.n	8002db0 <scalbn+0x38>
 8002dfa:	2a00      	cmp	r2, #0
 8002dfc:	dd08      	ble.n	8002e10 <scalbn+0x98>
 8002dfe:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8002e02:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8002e06:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8002e0a:	ec45 4b10 	vmov	d0, r4, r5
 8002e0e:	bd70      	pop	{r4, r5, r6, pc}
 8002e10:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8002e14:	da0d      	bge.n	8002e32 <scalbn+0xba>
 8002e16:	f24c 3350 	movw	r3, #50000	; 0xc350
 8002e1a:	429e      	cmp	r6, r3
 8002e1c:	ec45 4b11 	vmov	d1, r4, r5
 8002e20:	dce1      	bgt.n	8002de6 <scalbn+0x6e>
 8002e22:	ed9f 0b0b 	vldr	d0, [pc, #44]	; 8002e50 <scalbn+0xd8>
 8002e26:	f000 f828 	bl	8002e7a <copysign>
 8002e2a:	a309      	add	r3, pc, #36	; (adr r3, 8002e50 <scalbn+0xd8>)
 8002e2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002e30:	e7e0      	b.n	8002df4 <scalbn+0x7c>
 8002e32:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8002e36:	3236      	adds	r2, #54	; 0x36
 8002e38:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8002e3c:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8002e40:	4620      	mov	r0, r4
 8002e42:	4629      	mov	r1, r5
 8002e44:	2200      	movs	r2, #0
 8002e46:	4b08      	ldr	r3, [pc, #32]	; (8002e68 <scalbn+0xf0>)
 8002e48:	e7b2      	b.n	8002db0 <scalbn+0x38>
 8002e4a:	bf00      	nop
 8002e4c:	f3af 8000 	nop.w
 8002e50:	c2f8f359 	.word	0xc2f8f359
 8002e54:	01a56e1f 	.word	0x01a56e1f
 8002e58:	8800759c 	.word	0x8800759c
 8002e5c:	7e37e43c 	.word	0x7e37e43c
 8002e60:	43500000 	.word	0x43500000
 8002e64:	ffff3cb0 	.word	0xffff3cb0
 8002e68:	3c900000 	.word	0x3c900000

08002e6c <fabsf>:
 8002e6c:	ee10 3a10 	vmov	r3, s0
 8002e70:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002e74:	ee00 3a10 	vmov	s0, r3
 8002e78:	4770      	bx	lr

08002e7a <copysign>:
 8002e7a:	ec53 2b10 	vmov	r2, r3, d0
 8002e7e:	ee11 0a90 	vmov	r0, s3
 8002e82:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8002e86:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8002e8a:	ea41 0300 	orr.w	r3, r1, r0
 8002e8e:	ec43 2b10 	vmov	d0, r2, r3
 8002e92:	4770      	bx	lr

08002e94 <__errno>:
 8002e94:	4b01      	ldr	r3, [pc, #4]	; (8002e9c <__errno+0x8>)
 8002e96:	6818      	ldr	r0, [r3, #0]
 8002e98:	4770      	bx	lr
 8002e9a:	bf00      	nop
 8002e9c:	2000000c 	.word	0x2000000c

08002ea0 <_init>:
 8002ea0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002ea2:	bf00      	nop
 8002ea4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002ea6:	bc08      	pop	{r3}
 8002ea8:	469e      	mov	lr, r3
 8002eaa:	4770      	bx	lr

08002eac <_fini>:
 8002eac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002eae:	bf00      	nop
 8002eb0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002eb2:	bc08      	pop	{r3}
 8002eb4:	469e      	mov	lr, r3
 8002eb6:	4770      	bx	lr
